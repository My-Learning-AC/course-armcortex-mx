
013_SVC_Operation.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001350  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000120  08001500  08001500  00011500  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001620  08001620  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08001620  08001620  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001620  08001620  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001620  08001620  00011620  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001624  08001624  00011624  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08001628  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000002c  20000064  0800168c  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000090  0800168c  00020090  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   000022b1  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000651  00000000  00000000  00022345  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000148  00000000  00000000  00022998  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000110  00000000  00000000  00022ae0  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00002a8c  00000000  00000000  00022bf0  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00001322  00000000  00000000  0002567c  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00009163  00000000  00000000  0002699e  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0002fb01  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b7c  00000000  00000000  0002fb7c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000064 	.word	0x20000064
 80001cc:	00000000 	.word	0x00000000
 80001d0:	080014e8 	.word	0x080014e8

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000068 	.word	0x20000068
 80001ec:	080014e8 	.word	0x080014e8

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <add_numbers>:
void SVC_Handler_c(uint32_t *pBaseOfStackFrame);



int32_t add_numbers(int32_t x , int32_t y)
{
 8000290:	b480      	push	{r7}
 8000292:	b085      	sub	sp, #20
 8000294:	af00      	add	r7, sp, #0
 8000296:	6078      	str	r0, [r7, #4]
 8000298:	6039      	str	r1, [r7, #0]
	int32_t res;
	__asm volatile ("SVC #36");
 800029a:	df24      	svc	36	; 0x24
	__asm volatile ("MOV %0, R0": "=r"(res) ::);
 800029c:	4603      	mov	r3, r0
 800029e:	60fb      	str	r3, [r7, #12]
	return res;
 80002a0:	68fb      	ldr	r3, [r7, #12]
}
 80002a2:	4618      	mov	r0, r3
 80002a4:	3714      	adds	r7, #20
 80002a6:	46bd      	mov	sp, r7
 80002a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002ac:	4770      	bx	lr

080002ae <sub_numbers>:

int32_t sub_numbers(int32_t x , int32_t y)
{
 80002ae:	b480      	push	{r7}
 80002b0:	b085      	sub	sp, #20
 80002b2:	af00      	add	r7, sp, #0
 80002b4:	6078      	str	r0, [r7, #4]
 80002b6:	6039      	str	r1, [r7, #0]
	int32_t res;
	__asm volatile ("SVC #37");
 80002b8:	df25      	svc	37	; 0x25
	__asm volatile ("MOV %0, R0": "=r"(res) ::);
 80002ba:	4603      	mov	r3, r0
 80002bc:	60fb      	str	r3, [r7, #12]
	return res;
 80002be:	68fb      	ldr	r3, [r7, #12]
}
 80002c0:	4618      	mov	r0, r3
 80002c2:	3714      	adds	r7, #20
 80002c4:	46bd      	mov	sp, r7
 80002c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002ca:	4770      	bx	lr

080002cc <mul_numbers>:

int32_t mul_numbers(int32_t x , int32_t y)
{
 80002cc:	b480      	push	{r7}
 80002ce:	b085      	sub	sp, #20
 80002d0:	af00      	add	r7, sp, #0
 80002d2:	6078      	str	r0, [r7, #4]
 80002d4:	6039      	str	r1, [r7, #0]
	int32_t res;
	__asm volatile ("SVC #38");
 80002d6:	df26      	svc	38	; 0x26
	__asm volatile ("MOV %0, R0": "=r"(res) ::);
 80002d8:	4603      	mov	r3, r0
 80002da:	60fb      	str	r3, [r7, #12]
	return res;
 80002dc:	68fb      	ldr	r3, [r7, #12]
}
 80002de:	4618      	mov	r0, r3
 80002e0:	3714      	adds	r7, #20
 80002e2:	46bd      	mov	sp, r7
 80002e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002e8:	4770      	bx	lr

080002ea <div_numbers>:

int32_t div_numbers(int32_t x , int32_t y)
{
 80002ea:	b480      	push	{r7}
 80002ec:	b085      	sub	sp, #20
 80002ee:	af00      	add	r7, sp, #0
 80002f0:	6078      	str	r0, [r7, #4]
 80002f2:	6039      	str	r1, [r7, #0]
	int32_t res;
	__asm volatile ("SVC #39");
 80002f4:	df27      	svc	39	; 0x27
	__asm volatile ("MOV %0, R0": "=r"(res) ::);
 80002f6:	4603      	mov	r3, r0
 80002f8:	60fb      	str	r3, [r7, #12]
	return res;
 80002fa:	68fb      	ldr	r3, [r7, #12]
}
 80002fc:	4618      	mov	r0, r3
 80002fe:	3714      	adds	r7, #20
 8000300:	46bd      	mov	sp, r7
 8000302:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000306:	4770      	bx	lr

08000308 <main>:



int main(void)
{
 8000308:	b580      	push	{r7, lr}
 800030a:	b082      	sub	sp, #8
 800030c:	af00      	add	r7, sp, #0
	int32_t res;

	res = add_numbers(40, -90);
 800030e:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8000312:	2028      	movs	r0, #40	; 0x28
 8000314:	f7ff ffbc 	bl	8000290 <add_numbers>
 8000318:	6078      	str	r0, [r7, #4]
	printf("Add result = %ld\n", res);
 800031a:	6879      	ldr	r1, [r7, #4]
 800031c:	480f      	ldr	r0, [pc, #60]	; (800035c <main+0x54>)
 800031e:	f000 f99b 	bl	8000658 <iprintf>

	res = sub_numbers(25, 150);
 8000322:	2196      	movs	r1, #150	; 0x96
 8000324:	2019      	movs	r0, #25
 8000326:	f7ff ffc2 	bl	80002ae <sub_numbers>
 800032a:	6078      	str	r0, [r7, #4]
	printf("Sub result = %ld\n", res);
 800032c:	6879      	ldr	r1, [r7, #4]
 800032e:	480c      	ldr	r0, [pc, #48]	; (8000360 <main+0x58>)
 8000330:	f000 f992 	bl	8000658 <iprintf>

	res = mul_numbers(67, -3);
 8000334:	f06f 0102 	mvn.w	r1, #2
 8000338:	2043      	movs	r0, #67	; 0x43
 800033a:	f7ff ffc7 	bl	80002cc <mul_numbers>
 800033e:	6078      	str	r0, [r7, #4]
	printf("Mul result = %ld\n", res);
 8000340:	6879      	ldr	r1, [r7, #4]
 8000342:	4808      	ldr	r0, [pc, #32]	; (8000364 <main+0x5c>)
 8000344:	f000 f988 	bl	8000658 <iprintf>

	res = div_numbers(90, 3);
 8000348:	2103      	movs	r1, #3
 800034a:	205a      	movs	r0, #90	; 0x5a
 800034c:	f7ff ffcd 	bl	80002ea <div_numbers>
 8000350:	6078      	str	r0, [r7, #4]
	printf("Div result = %ld\n", res);
 8000352:	6879      	ldr	r1, [r7, #4]
 8000354:	4804      	ldr	r0, [pc, #16]	; (8000368 <main+0x60>)
 8000356:	f000 f97f 	bl	8000658 <iprintf>


	for(;;);
 800035a:	e7fe      	b.n	800035a <main+0x52>
 800035c:	08001500 	.word	0x08001500
 8000360:	08001514 	.word	0x08001514
 8000364:	08001528 	.word	0x08001528
 8000368:	0800153c 	.word	0x0800153c

0800036c <SVC_Handler>:

__attribute__ ((naked)) void SVC_Handler(void)
{
	// 1. get the value of MSP

	__asm ("MRS r0, MSP");
 800036c:	f3ef 8008 	mrs	r0, MSP
	__asm ("B SVC_Handler_c");  // r0 goes to the 1st argument of the callee function, i.e., - pBaseOfStackFrame
 8000370:	f000 b802 	b.w	8000378 <SVC_Handler_c>
}
 8000374:	bf00      	nop
	...

08000378 <SVC_Handler_c>:

void SVC_Handler_c(uint32_t *pBaseOfStackFrame)
{
 8000378:	b580      	push	{r7, lr}
 800037a:	b088      	sub	sp, #32
 800037c:	af00      	add	r7, sp, #0
 800037e:	6078      	str	r0, [r7, #4]
	printf("in SVC handler\n");
 8000380:	4823      	ldr	r0, [pc, #140]	; (8000410 <SVC_Handler_c+0x98>)
 8000382:	f000 f9dd 	bl	8000740 <puts>

	int32_t arg0, arg1, res;

	uint8_t *pReturn_addr = (uint8_t *) pBaseOfStackFrame[6];
 8000386:	687b      	ldr	r3, [r7, #4]
 8000388:	3318      	adds	r3, #24
 800038a:	681b      	ldr	r3, [r3, #0]
 800038c:	61bb      	str	r3, [r7, #24]

	// 2. decrement the return address by 2 to point to
	// opcode of the SVC instruction in the program memory
	pReturn_addr  -= 2;
 800038e:	69bb      	ldr	r3, [r7, #24]
 8000390:	3b02      	subs	r3, #2
 8000392:	61bb      	str	r3, [r7, #24]

	// 3. extract the SVC number (LSByte of the opcode)
	uint8_t svc_number = *pReturn_addr;
 8000394:	69bb      	ldr	r3, [r7, #24]
 8000396:	781b      	ldrb	r3, [r3, #0]
 8000398:	75fb      	strb	r3, [r7, #23]

	printf("SVC Number is: %d\n", svc_number);
 800039a:	7dfb      	ldrb	r3, [r7, #23]
 800039c:	4619      	mov	r1, r3
 800039e:	481d      	ldr	r0, [pc, #116]	; (8000414 <SVC_Handler_c+0x9c>)
 80003a0:	f000 f95a 	bl	8000658 <iprintf>

	arg0 = pBaseOfStackFrame[0];
 80003a4:	687b      	ldr	r3, [r7, #4]
 80003a6:	681b      	ldr	r3, [r3, #0]
 80003a8:	613b      	str	r3, [r7, #16]
	arg1 = pBaseOfStackFrame[1];
 80003aa:	687b      	ldr	r3, [r7, #4]
 80003ac:	3304      	adds	r3, #4
 80003ae:	681b      	ldr	r3, [r3, #0]
 80003b0:	60fb      	str	r3, [r7, #12]

	switch(svc_number)
 80003b2:	7dfb      	ldrb	r3, [r7, #23]
 80003b4:	3b24      	subs	r3, #36	; 0x24
 80003b6:	2b03      	cmp	r3, #3
 80003b8:	d820      	bhi.n	80003fc <SVC_Handler_c+0x84>
 80003ba:	a201      	add	r2, pc, #4	; (adr r2, 80003c0 <SVC_Handler_c+0x48>)
 80003bc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80003c0:	080003d1 	.word	0x080003d1
 80003c4:	080003db 	.word	0x080003db
 80003c8:	080003e5 	.word	0x080003e5
 80003cc:	080003f1 	.word	0x080003f1
	{
	case 36:
		res = arg0 + arg1;
 80003d0:	693a      	ldr	r2, [r7, #16]
 80003d2:	68fb      	ldr	r3, [r7, #12]
 80003d4:	4413      	add	r3, r2
 80003d6:	61fb      	str	r3, [r7, #28]
		break;
 80003d8:	e013      	b.n	8000402 <SVC_Handler_c+0x8a>
	case 37:
		res = arg0 - arg1;
 80003da:	693a      	ldr	r2, [r7, #16]
 80003dc:	68fb      	ldr	r3, [r7, #12]
 80003de:	1ad3      	subs	r3, r2, r3
 80003e0:	61fb      	str	r3, [r7, #28]
		break;
 80003e2:	e00e      	b.n	8000402 <SVC_Handler_c+0x8a>
	case 38:
		res = arg0 * arg1;
 80003e4:	693b      	ldr	r3, [r7, #16]
 80003e6:	68fa      	ldr	r2, [r7, #12]
 80003e8:	fb02 f303 	mul.w	r3, r2, r3
 80003ec:	61fb      	str	r3, [r7, #28]
		break;
 80003ee:	e008      	b.n	8000402 <SVC_Handler_c+0x8a>
	case 39:
		res = arg0 / arg1;
 80003f0:	693a      	ldr	r2, [r7, #16]
 80003f2:	68fb      	ldr	r3, [r7, #12]
 80003f4:	fb92 f3f3 	sdiv	r3, r2, r3
 80003f8:	61fb      	str	r3, [r7, #28]
		break;
 80003fa:	e002      	b.n	8000402 <SVC_Handler_c+0x8a>
	default:
		printf("invalid svc code\n");
 80003fc:	4806      	ldr	r0, [pc, #24]	; (8000418 <SVC_Handler_c+0xa0>)
 80003fe:	f000 f99f 	bl	8000740 <puts>
	}

	pBaseOfStackFrame[0] = res;
 8000402:	69fa      	ldr	r2, [r7, #28]
 8000404:	687b      	ldr	r3, [r7, #4]
 8000406:	601a      	str	r2, [r3, #0]

}
 8000408:	bf00      	nop
 800040a:	3720      	adds	r7, #32
 800040c:	46bd      	mov	sp, r7
 800040e:	bd80      	pop	{r7, pc}
 8000410:	08001550 	.word	0x08001550
 8000414:	08001560 	.word	0x08001560
 8000418:	08001574 	.word	0x08001574

0800041c <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 800041c:	b480      	push	{r7}
 800041e:	b083      	sub	sp, #12
 8000420:	af00      	add	r7, sp, #0
 8000422:	4603      	mov	r3, r0
 8000424:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 8000426:	4b0f      	ldr	r3, [pc, #60]	; (8000464 <ITM_SendChar+0x48>)
 8000428:	681b      	ldr	r3, [r3, #0]
 800042a:	4a0e      	ldr	r2, [pc, #56]	; (8000464 <ITM_SendChar+0x48>)
 800042c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000430:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 8000432:	4b0d      	ldr	r3, [pc, #52]	; (8000468 <ITM_SendChar+0x4c>)
 8000434:	681b      	ldr	r3, [r3, #0]
 8000436:	4a0c      	ldr	r2, [pc, #48]	; (8000468 <ITM_SendChar+0x4c>)
 8000438:	f043 0301 	orr.w	r3, r3, #1
 800043c:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 800043e:	bf00      	nop
 8000440:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000444:	681b      	ldr	r3, [r3, #0]
 8000446:	f003 0301 	and.w	r3, r3, #1
 800044a:	2b00      	cmp	r3, #0
 800044c:	d0f8      	beq.n	8000440 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 800044e:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 8000452:	79fb      	ldrb	r3, [r7, #7]
 8000454:	6013      	str	r3, [r2, #0]
}
 8000456:	bf00      	nop
 8000458:	370c      	adds	r7, #12
 800045a:	46bd      	mov	sp, r7
 800045c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000460:	4770      	bx	lr
 8000462:	bf00      	nop
 8000464:	e000edfc 	.word	0xe000edfc
 8000468:	e0000e00 	.word	0xe0000e00

0800046c <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800046c:	b580      	push	{r7, lr}
 800046e:	b086      	sub	sp, #24
 8000470:	af00      	add	r7, sp, #0
 8000472:	60f8      	str	r0, [r7, #12]
 8000474:	60b9      	str	r1, [r7, #8]
 8000476:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000478:	2300      	movs	r3, #0
 800047a:	617b      	str	r3, [r7, #20]
 800047c:	e00a      	b.n	8000494 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800047e:	f3af 8000 	nop.w
 8000482:	4601      	mov	r1, r0
 8000484:	68bb      	ldr	r3, [r7, #8]
 8000486:	1c5a      	adds	r2, r3, #1
 8000488:	60ba      	str	r2, [r7, #8]
 800048a:	b2ca      	uxtb	r2, r1
 800048c:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800048e:	697b      	ldr	r3, [r7, #20]
 8000490:	3301      	adds	r3, #1
 8000492:	617b      	str	r3, [r7, #20]
 8000494:	697a      	ldr	r2, [r7, #20]
 8000496:	687b      	ldr	r3, [r7, #4]
 8000498:	429a      	cmp	r2, r3
 800049a:	dbf0      	blt.n	800047e <_read+0x12>
	}

return len;
 800049c:	687b      	ldr	r3, [r7, #4]
}
 800049e:	4618      	mov	r0, r3
 80004a0:	3718      	adds	r7, #24
 80004a2:	46bd      	mov	sp, r7
 80004a4:	bd80      	pop	{r7, pc}

080004a6 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80004a6:	b580      	push	{r7, lr}
 80004a8:	b086      	sub	sp, #24
 80004aa:	af00      	add	r7, sp, #0
 80004ac:	60f8      	str	r0, [r7, #12]
 80004ae:	60b9      	str	r1, [r7, #8]
 80004b0:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80004b2:	2300      	movs	r3, #0
 80004b4:	617b      	str	r3, [r7, #20]
 80004b6:	e009      	b.n	80004cc <_write+0x26>
	{
		//__io_putchar(*ptr++);
	    ITM_SendChar(*ptr++);
 80004b8:	68bb      	ldr	r3, [r7, #8]
 80004ba:	1c5a      	adds	r2, r3, #1
 80004bc:	60ba      	str	r2, [r7, #8]
 80004be:	781b      	ldrb	r3, [r3, #0]
 80004c0:	4618      	mov	r0, r3
 80004c2:	f7ff ffab 	bl	800041c <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80004c6:	697b      	ldr	r3, [r7, #20]
 80004c8:	3301      	adds	r3, #1
 80004ca:	617b      	str	r3, [r7, #20]
 80004cc:	697a      	ldr	r2, [r7, #20]
 80004ce:	687b      	ldr	r3, [r7, #4]
 80004d0:	429a      	cmp	r2, r3
 80004d2:	dbf1      	blt.n	80004b8 <_write+0x12>

	}
	return len;
 80004d4:	687b      	ldr	r3, [r7, #4]
}
 80004d6:	4618      	mov	r0, r3
 80004d8:	3718      	adds	r7, #24
 80004da:	46bd      	mov	sp, r7
 80004dc:	bd80      	pop	{r7, pc}

080004de <_close>:

int _close(int file)
{
 80004de:	b480      	push	{r7}
 80004e0:	b083      	sub	sp, #12
 80004e2:	af00      	add	r7, sp, #0
 80004e4:	6078      	str	r0, [r7, #4]
	return -1;
 80004e6:	f04f 33ff 	mov.w	r3, #4294967295
}
 80004ea:	4618      	mov	r0, r3
 80004ec:	370c      	adds	r7, #12
 80004ee:	46bd      	mov	sp, r7
 80004f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004f4:	4770      	bx	lr

080004f6 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80004f6:	b480      	push	{r7}
 80004f8:	b083      	sub	sp, #12
 80004fa:	af00      	add	r7, sp, #0
 80004fc:	6078      	str	r0, [r7, #4]
 80004fe:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000500:	683b      	ldr	r3, [r7, #0]
 8000502:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000506:	605a      	str	r2, [r3, #4]
	return 0;
 8000508:	2300      	movs	r3, #0
}
 800050a:	4618      	mov	r0, r3
 800050c:	370c      	adds	r7, #12
 800050e:	46bd      	mov	sp, r7
 8000510:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000514:	4770      	bx	lr

08000516 <_isatty>:

int _isatty(int file)
{
 8000516:	b480      	push	{r7}
 8000518:	b083      	sub	sp, #12
 800051a:	af00      	add	r7, sp, #0
 800051c:	6078      	str	r0, [r7, #4]
	return 1;
 800051e:	2301      	movs	r3, #1
}
 8000520:	4618      	mov	r0, r3
 8000522:	370c      	adds	r7, #12
 8000524:	46bd      	mov	sp, r7
 8000526:	f85d 7b04 	ldr.w	r7, [sp], #4
 800052a:	4770      	bx	lr

0800052c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800052c:	b480      	push	{r7}
 800052e:	b085      	sub	sp, #20
 8000530:	af00      	add	r7, sp, #0
 8000532:	60f8      	str	r0, [r7, #12]
 8000534:	60b9      	str	r1, [r7, #8]
 8000536:	607a      	str	r2, [r7, #4]
	return 0;
 8000538:	2300      	movs	r3, #0
}
 800053a:	4618      	mov	r0, r3
 800053c:	3714      	adds	r7, #20
 800053e:	46bd      	mov	sp, r7
 8000540:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000544:	4770      	bx	lr
	...

08000548 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8000548:	b580      	push	{r7, lr}
 800054a:	b084      	sub	sp, #16
 800054c:	af00      	add	r7, sp, #0
 800054e:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8000550:	4b11      	ldr	r3, [pc, #68]	; (8000598 <_sbrk+0x50>)
 8000552:	681b      	ldr	r3, [r3, #0]
 8000554:	2b00      	cmp	r3, #0
 8000556:	d102      	bne.n	800055e <_sbrk+0x16>
		heap_end = &end;
 8000558:	4b0f      	ldr	r3, [pc, #60]	; (8000598 <_sbrk+0x50>)
 800055a:	4a10      	ldr	r2, [pc, #64]	; (800059c <_sbrk+0x54>)
 800055c:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 800055e:	4b0e      	ldr	r3, [pc, #56]	; (8000598 <_sbrk+0x50>)
 8000560:	681b      	ldr	r3, [r3, #0]
 8000562:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 8000564:	4b0c      	ldr	r3, [pc, #48]	; (8000598 <_sbrk+0x50>)
 8000566:	681a      	ldr	r2, [r3, #0]
 8000568:	687b      	ldr	r3, [r7, #4]
 800056a:	4413      	add	r3, r2
 800056c:	466a      	mov	r2, sp
 800056e:	4293      	cmp	r3, r2
 8000570:	d907      	bls.n	8000582 <_sbrk+0x3a>
	{
		errno = ENOMEM;
 8000572:	f000 f83f 	bl	80005f4 <__errno>
 8000576:	4602      	mov	r2, r0
 8000578:	230c      	movs	r3, #12
 800057a:	6013      	str	r3, [r2, #0]
		return (caddr_t) -1;
 800057c:	f04f 33ff 	mov.w	r3, #4294967295
 8000580:	e006      	b.n	8000590 <_sbrk+0x48>
	}

	heap_end += incr;
 8000582:	4b05      	ldr	r3, [pc, #20]	; (8000598 <_sbrk+0x50>)
 8000584:	681a      	ldr	r2, [r3, #0]
 8000586:	687b      	ldr	r3, [r7, #4]
 8000588:	4413      	add	r3, r2
 800058a:	4a03      	ldr	r2, [pc, #12]	; (8000598 <_sbrk+0x50>)
 800058c:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
 800058e:	68fb      	ldr	r3, [r7, #12]
}
 8000590:	4618      	mov	r0, r3
 8000592:	3710      	adds	r7, #16
 8000594:	46bd      	mov	sp, r7
 8000596:	bd80      	pop	{r7, pc}
 8000598:	20000080 	.word	0x20000080
 800059c:	20000090 	.word	0x20000090

080005a0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80005a0:	480d      	ldr	r0, [pc, #52]	; (80005d8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80005a2:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */

  ldr r0, =_sdata
 80005a4:	480d      	ldr	r0, [pc, #52]	; (80005dc <LoopForever+0x6>)
  ldr r1, =_edata
 80005a6:	490e      	ldr	r1, [pc, #56]	; (80005e0 <LoopForever+0xa>)
  ldr r2, =_sidata
 80005a8:	4a0e      	ldr	r2, [pc, #56]	; (80005e4 <LoopForever+0xe>)
  movs r3, #0
 80005aa:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80005ac:	e002      	b.n	80005b4 <LoopCopyDataInit>

080005ae <CopyDataInit>:

CopyDataInit:


  ldr r4, [r2, r3]
 80005ae:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80005b0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80005b2:	3304      	adds	r3, #4

080005b4 <LoopCopyDataInit>:

LoopCopyDataInit:


  adds r4, r0, r3
 80005b4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80005b6:	428c      	cmp	r4, r1



  bcc CopyDataInit
 80005b8:	d3f9      	bcc.n	80005ae <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80005ba:	4a0b      	ldr	r2, [pc, #44]	; (80005e8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80005bc:	4c0b      	ldr	r4, [pc, #44]	; (80005ec <LoopForever+0x16>)
  movs r3, #0
 80005be:	2300      	movs	r3, #0
  b LoopFillZerobss
 80005c0:	e001      	b.n	80005c6 <LoopFillZerobss>

080005c2 <FillZerobss>:

FillZerobss:

  str  r3, [r2]
 80005c2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80005c4:	3204      	adds	r2, #4

080005c6 <LoopFillZerobss>:

LoopFillZerobss:

  cmp r2, r4
 80005c6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80005c8:	d3fb      	bcc.n	80005c2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80005ca:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 80005ce:	f000 f817 	bl	8000600 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80005d2:	f7ff fe99 	bl	8000308 <main>

080005d6 <LoopForever>:

LoopForever:
    b LoopForever
 80005d6:	e7fe      	b.n	80005d6 <LoopForever>
  ldr   r0, =_estack
 80005d8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80005dc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80005e0:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 80005e4:	08001628 	.word	0x08001628
  ldr r2, =_sbss
 80005e8:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 80005ec:	20000090 	.word	0x20000090

080005f0 <ADC_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80005f0:	e7fe      	b.n	80005f0 <ADC_IRQHandler>
	...

080005f4 <__errno>:
 80005f4:	4b01      	ldr	r3, [pc, #4]	; (80005fc <__errno+0x8>)
 80005f6:	6818      	ldr	r0, [r3, #0]
 80005f8:	4770      	bx	lr
 80005fa:	bf00      	nop
 80005fc:	20000000 	.word	0x20000000

08000600 <__libc_init_array>:
 8000600:	b570      	push	{r4, r5, r6, lr}
 8000602:	4e0d      	ldr	r6, [pc, #52]	; (8000638 <__libc_init_array+0x38>)
 8000604:	4c0d      	ldr	r4, [pc, #52]	; (800063c <__libc_init_array+0x3c>)
 8000606:	1ba4      	subs	r4, r4, r6
 8000608:	10a4      	asrs	r4, r4, #2
 800060a:	2500      	movs	r5, #0
 800060c:	42a5      	cmp	r5, r4
 800060e:	d109      	bne.n	8000624 <__libc_init_array+0x24>
 8000610:	4e0b      	ldr	r6, [pc, #44]	; (8000640 <__libc_init_array+0x40>)
 8000612:	4c0c      	ldr	r4, [pc, #48]	; (8000644 <__libc_init_array+0x44>)
 8000614:	f000 ff68 	bl	80014e8 <_init>
 8000618:	1ba4      	subs	r4, r4, r6
 800061a:	10a4      	asrs	r4, r4, #2
 800061c:	2500      	movs	r5, #0
 800061e:	42a5      	cmp	r5, r4
 8000620:	d105      	bne.n	800062e <__libc_init_array+0x2e>
 8000622:	bd70      	pop	{r4, r5, r6, pc}
 8000624:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000628:	4798      	blx	r3
 800062a:	3501      	adds	r5, #1
 800062c:	e7ee      	b.n	800060c <__libc_init_array+0xc>
 800062e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000632:	4798      	blx	r3
 8000634:	3501      	adds	r5, #1
 8000636:	e7f2      	b.n	800061e <__libc_init_array+0x1e>
 8000638:	08001620 	.word	0x08001620
 800063c:	08001620 	.word	0x08001620
 8000640:	08001620 	.word	0x08001620
 8000644:	08001624 	.word	0x08001624

08000648 <memset>:
 8000648:	4402      	add	r2, r0
 800064a:	4603      	mov	r3, r0
 800064c:	4293      	cmp	r3, r2
 800064e:	d100      	bne.n	8000652 <memset+0xa>
 8000650:	4770      	bx	lr
 8000652:	f803 1b01 	strb.w	r1, [r3], #1
 8000656:	e7f9      	b.n	800064c <memset+0x4>

08000658 <iprintf>:
 8000658:	b40f      	push	{r0, r1, r2, r3}
 800065a:	4b0a      	ldr	r3, [pc, #40]	; (8000684 <iprintf+0x2c>)
 800065c:	b513      	push	{r0, r1, r4, lr}
 800065e:	681c      	ldr	r4, [r3, #0]
 8000660:	b124      	cbz	r4, 800066c <iprintf+0x14>
 8000662:	69a3      	ldr	r3, [r4, #24]
 8000664:	b913      	cbnz	r3, 800066c <iprintf+0x14>
 8000666:	4620      	mov	r0, r4
 8000668:	f000 fa22 	bl	8000ab0 <__sinit>
 800066c:	ab05      	add	r3, sp, #20
 800066e:	9a04      	ldr	r2, [sp, #16]
 8000670:	68a1      	ldr	r1, [r4, #8]
 8000672:	9301      	str	r3, [sp, #4]
 8000674:	4620      	mov	r0, r4
 8000676:	f000 fbdb 	bl	8000e30 <_vfiprintf_r>
 800067a:	b002      	add	sp, #8
 800067c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000680:	b004      	add	sp, #16
 8000682:	4770      	bx	lr
 8000684:	20000000 	.word	0x20000000

08000688 <_puts_r>:
 8000688:	b570      	push	{r4, r5, r6, lr}
 800068a:	460e      	mov	r6, r1
 800068c:	4605      	mov	r5, r0
 800068e:	b118      	cbz	r0, 8000698 <_puts_r+0x10>
 8000690:	6983      	ldr	r3, [r0, #24]
 8000692:	b90b      	cbnz	r3, 8000698 <_puts_r+0x10>
 8000694:	f000 fa0c 	bl	8000ab0 <__sinit>
 8000698:	69ab      	ldr	r3, [r5, #24]
 800069a:	68ac      	ldr	r4, [r5, #8]
 800069c:	b913      	cbnz	r3, 80006a4 <_puts_r+0x1c>
 800069e:	4628      	mov	r0, r5
 80006a0:	f000 fa06 	bl	8000ab0 <__sinit>
 80006a4:	4b23      	ldr	r3, [pc, #140]	; (8000734 <_puts_r+0xac>)
 80006a6:	429c      	cmp	r4, r3
 80006a8:	d117      	bne.n	80006da <_puts_r+0x52>
 80006aa:	686c      	ldr	r4, [r5, #4]
 80006ac:	89a3      	ldrh	r3, [r4, #12]
 80006ae:	071b      	lsls	r3, r3, #28
 80006b0:	d51d      	bpl.n	80006ee <_puts_r+0x66>
 80006b2:	6923      	ldr	r3, [r4, #16]
 80006b4:	b1db      	cbz	r3, 80006ee <_puts_r+0x66>
 80006b6:	3e01      	subs	r6, #1
 80006b8:	68a3      	ldr	r3, [r4, #8]
 80006ba:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80006be:	3b01      	subs	r3, #1
 80006c0:	60a3      	str	r3, [r4, #8]
 80006c2:	b9e9      	cbnz	r1, 8000700 <_puts_r+0x78>
 80006c4:	2b00      	cmp	r3, #0
 80006c6:	da2e      	bge.n	8000726 <_puts_r+0x9e>
 80006c8:	4622      	mov	r2, r4
 80006ca:	210a      	movs	r1, #10
 80006cc:	4628      	mov	r0, r5
 80006ce:	f000 f83f 	bl	8000750 <__swbuf_r>
 80006d2:	3001      	adds	r0, #1
 80006d4:	d011      	beq.n	80006fa <_puts_r+0x72>
 80006d6:	200a      	movs	r0, #10
 80006d8:	e011      	b.n	80006fe <_puts_r+0x76>
 80006da:	4b17      	ldr	r3, [pc, #92]	; (8000738 <_puts_r+0xb0>)
 80006dc:	429c      	cmp	r4, r3
 80006de:	d101      	bne.n	80006e4 <_puts_r+0x5c>
 80006e0:	68ac      	ldr	r4, [r5, #8]
 80006e2:	e7e3      	b.n	80006ac <_puts_r+0x24>
 80006e4:	4b15      	ldr	r3, [pc, #84]	; (800073c <_puts_r+0xb4>)
 80006e6:	429c      	cmp	r4, r3
 80006e8:	bf08      	it	eq
 80006ea:	68ec      	ldreq	r4, [r5, #12]
 80006ec:	e7de      	b.n	80006ac <_puts_r+0x24>
 80006ee:	4621      	mov	r1, r4
 80006f0:	4628      	mov	r0, r5
 80006f2:	f000 f87f 	bl	80007f4 <__swsetup_r>
 80006f6:	2800      	cmp	r0, #0
 80006f8:	d0dd      	beq.n	80006b6 <_puts_r+0x2e>
 80006fa:	f04f 30ff 	mov.w	r0, #4294967295
 80006fe:	bd70      	pop	{r4, r5, r6, pc}
 8000700:	2b00      	cmp	r3, #0
 8000702:	da04      	bge.n	800070e <_puts_r+0x86>
 8000704:	69a2      	ldr	r2, [r4, #24]
 8000706:	429a      	cmp	r2, r3
 8000708:	dc06      	bgt.n	8000718 <_puts_r+0x90>
 800070a:	290a      	cmp	r1, #10
 800070c:	d004      	beq.n	8000718 <_puts_r+0x90>
 800070e:	6823      	ldr	r3, [r4, #0]
 8000710:	1c5a      	adds	r2, r3, #1
 8000712:	6022      	str	r2, [r4, #0]
 8000714:	7019      	strb	r1, [r3, #0]
 8000716:	e7cf      	b.n	80006b8 <_puts_r+0x30>
 8000718:	4622      	mov	r2, r4
 800071a:	4628      	mov	r0, r5
 800071c:	f000 f818 	bl	8000750 <__swbuf_r>
 8000720:	3001      	adds	r0, #1
 8000722:	d1c9      	bne.n	80006b8 <_puts_r+0x30>
 8000724:	e7e9      	b.n	80006fa <_puts_r+0x72>
 8000726:	6823      	ldr	r3, [r4, #0]
 8000728:	200a      	movs	r0, #10
 800072a:	1c5a      	adds	r2, r3, #1
 800072c:	6022      	str	r2, [r4, #0]
 800072e:	7018      	strb	r0, [r3, #0]
 8000730:	e7e5      	b.n	80006fe <_puts_r+0x76>
 8000732:	bf00      	nop
 8000734:	080015ac 	.word	0x080015ac
 8000738:	080015cc 	.word	0x080015cc
 800073c:	0800158c 	.word	0x0800158c

08000740 <puts>:
 8000740:	4b02      	ldr	r3, [pc, #8]	; (800074c <puts+0xc>)
 8000742:	4601      	mov	r1, r0
 8000744:	6818      	ldr	r0, [r3, #0]
 8000746:	f7ff bf9f 	b.w	8000688 <_puts_r>
 800074a:	bf00      	nop
 800074c:	20000000 	.word	0x20000000

08000750 <__swbuf_r>:
 8000750:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000752:	460e      	mov	r6, r1
 8000754:	4614      	mov	r4, r2
 8000756:	4605      	mov	r5, r0
 8000758:	b118      	cbz	r0, 8000762 <__swbuf_r+0x12>
 800075a:	6983      	ldr	r3, [r0, #24]
 800075c:	b90b      	cbnz	r3, 8000762 <__swbuf_r+0x12>
 800075e:	f000 f9a7 	bl	8000ab0 <__sinit>
 8000762:	4b21      	ldr	r3, [pc, #132]	; (80007e8 <__swbuf_r+0x98>)
 8000764:	429c      	cmp	r4, r3
 8000766:	d12a      	bne.n	80007be <__swbuf_r+0x6e>
 8000768:	686c      	ldr	r4, [r5, #4]
 800076a:	69a3      	ldr	r3, [r4, #24]
 800076c:	60a3      	str	r3, [r4, #8]
 800076e:	89a3      	ldrh	r3, [r4, #12]
 8000770:	071a      	lsls	r2, r3, #28
 8000772:	d52e      	bpl.n	80007d2 <__swbuf_r+0x82>
 8000774:	6923      	ldr	r3, [r4, #16]
 8000776:	b363      	cbz	r3, 80007d2 <__swbuf_r+0x82>
 8000778:	6923      	ldr	r3, [r4, #16]
 800077a:	6820      	ldr	r0, [r4, #0]
 800077c:	1ac0      	subs	r0, r0, r3
 800077e:	6963      	ldr	r3, [r4, #20]
 8000780:	b2f6      	uxtb	r6, r6
 8000782:	4283      	cmp	r3, r0
 8000784:	4637      	mov	r7, r6
 8000786:	dc04      	bgt.n	8000792 <__swbuf_r+0x42>
 8000788:	4621      	mov	r1, r4
 800078a:	4628      	mov	r0, r5
 800078c:	f000 f926 	bl	80009dc <_fflush_r>
 8000790:	bb28      	cbnz	r0, 80007de <__swbuf_r+0x8e>
 8000792:	68a3      	ldr	r3, [r4, #8]
 8000794:	3b01      	subs	r3, #1
 8000796:	60a3      	str	r3, [r4, #8]
 8000798:	6823      	ldr	r3, [r4, #0]
 800079a:	1c5a      	adds	r2, r3, #1
 800079c:	6022      	str	r2, [r4, #0]
 800079e:	701e      	strb	r6, [r3, #0]
 80007a0:	6963      	ldr	r3, [r4, #20]
 80007a2:	3001      	adds	r0, #1
 80007a4:	4283      	cmp	r3, r0
 80007a6:	d004      	beq.n	80007b2 <__swbuf_r+0x62>
 80007a8:	89a3      	ldrh	r3, [r4, #12]
 80007aa:	07db      	lsls	r3, r3, #31
 80007ac:	d519      	bpl.n	80007e2 <__swbuf_r+0x92>
 80007ae:	2e0a      	cmp	r6, #10
 80007b0:	d117      	bne.n	80007e2 <__swbuf_r+0x92>
 80007b2:	4621      	mov	r1, r4
 80007b4:	4628      	mov	r0, r5
 80007b6:	f000 f911 	bl	80009dc <_fflush_r>
 80007ba:	b190      	cbz	r0, 80007e2 <__swbuf_r+0x92>
 80007bc:	e00f      	b.n	80007de <__swbuf_r+0x8e>
 80007be:	4b0b      	ldr	r3, [pc, #44]	; (80007ec <__swbuf_r+0x9c>)
 80007c0:	429c      	cmp	r4, r3
 80007c2:	d101      	bne.n	80007c8 <__swbuf_r+0x78>
 80007c4:	68ac      	ldr	r4, [r5, #8]
 80007c6:	e7d0      	b.n	800076a <__swbuf_r+0x1a>
 80007c8:	4b09      	ldr	r3, [pc, #36]	; (80007f0 <__swbuf_r+0xa0>)
 80007ca:	429c      	cmp	r4, r3
 80007cc:	bf08      	it	eq
 80007ce:	68ec      	ldreq	r4, [r5, #12]
 80007d0:	e7cb      	b.n	800076a <__swbuf_r+0x1a>
 80007d2:	4621      	mov	r1, r4
 80007d4:	4628      	mov	r0, r5
 80007d6:	f000 f80d 	bl	80007f4 <__swsetup_r>
 80007da:	2800      	cmp	r0, #0
 80007dc:	d0cc      	beq.n	8000778 <__swbuf_r+0x28>
 80007de:	f04f 37ff 	mov.w	r7, #4294967295
 80007e2:	4638      	mov	r0, r7
 80007e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80007e6:	bf00      	nop
 80007e8:	080015ac 	.word	0x080015ac
 80007ec:	080015cc 	.word	0x080015cc
 80007f0:	0800158c 	.word	0x0800158c

080007f4 <__swsetup_r>:
 80007f4:	4b32      	ldr	r3, [pc, #200]	; (80008c0 <__swsetup_r+0xcc>)
 80007f6:	b570      	push	{r4, r5, r6, lr}
 80007f8:	681d      	ldr	r5, [r3, #0]
 80007fa:	4606      	mov	r6, r0
 80007fc:	460c      	mov	r4, r1
 80007fe:	b125      	cbz	r5, 800080a <__swsetup_r+0x16>
 8000800:	69ab      	ldr	r3, [r5, #24]
 8000802:	b913      	cbnz	r3, 800080a <__swsetup_r+0x16>
 8000804:	4628      	mov	r0, r5
 8000806:	f000 f953 	bl	8000ab0 <__sinit>
 800080a:	4b2e      	ldr	r3, [pc, #184]	; (80008c4 <__swsetup_r+0xd0>)
 800080c:	429c      	cmp	r4, r3
 800080e:	d10f      	bne.n	8000830 <__swsetup_r+0x3c>
 8000810:	686c      	ldr	r4, [r5, #4]
 8000812:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000816:	b29a      	uxth	r2, r3
 8000818:	0715      	lsls	r5, r2, #28
 800081a:	d42c      	bmi.n	8000876 <__swsetup_r+0x82>
 800081c:	06d0      	lsls	r0, r2, #27
 800081e:	d411      	bmi.n	8000844 <__swsetup_r+0x50>
 8000820:	2209      	movs	r2, #9
 8000822:	6032      	str	r2, [r6, #0]
 8000824:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000828:	81a3      	strh	r3, [r4, #12]
 800082a:	f04f 30ff 	mov.w	r0, #4294967295
 800082e:	e03e      	b.n	80008ae <__swsetup_r+0xba>
 8000830:	4b25      	ldr	r3, [pc, #148]	; (80008c8 <__swsetup_r+0xd4>)
 8000832:	429c      	cmp	r4, r3
 8000834:	d101      	bne.n	800083a <__swsetup_r+0x46>
 8000836:	68ac      	ldr	r4, [r5, #8]
 8000838:	e7eb      	b.n	8000812 <__swsetup_r+0x1e>
 800083a:	4b24      	ldr	r3, [pc, #144]	; (80008cc <__swsetup_r+0xd8>)
 800083c:	429c      	cmp	r4, r3
 800083e:	bf08      	it	eq
 8000840:	68ec      	ldreq	r4, [r5, #12]
 8000842:	e7e6      	b.n	8000812 <__swsetup_r+0x1e>
 8000844:	0751      	lsls	r1, r2, #29
 8000846:	d512      	bpl.n	800086e <__swsetup_r+0x7a>
 8000848:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800084a:	b141      	cbz	r1, 800085e <__swsetup_r+0x6a>
 800084c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000850:	4299      	cmp	r1, r3
 8000852:	d002      	beq.n	800085a <__swsetup_r+0x66>
 8000854:	4630      	mov	r0, r6
 8000856:	f000 fa19 	bl	8000c8c <_free_r>
 800085a:	2300      	movs	r3, #0
 800085c:	6363      	str	r3, [r4, #52]	; 0x34
 800085e:	89a3      	ldrh	r3, [r4, #12]
 8000860:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000864:	81a3      	strh	r3, [r4, #12]
 8000866:	2300      	movs	r3, #0
 8000868:	6063      	str	r3, [r4, #4]
 800086a:	6923      	ldr	r3, [r4, #16]
 800086c:	6023      	str	r3, [r4, #0]
 800086e:	89a3      	ldrh	r3, [r4, #12]
 8000870:	f043 0308 	orr.w	r3, r3, #8
 8000874:	81a3      	strh	r3, [r4, #12]
 8000876:	6923      	ldr	r3, [r4, #16]
 8000878:	b94b      	cbnz	r3, 800088e <__swsetup_r+0x9a>
 800087a:	89a3      	ldrh	r3, [r4, #12]
 800087c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000880:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000884:	d003      	beq.n	800088e <__swsetup_r+0x9a>
 8000886:	4621      	mov	r1, r4
 8000888:	4630      	mov	r0, r6
 800088a:	f000 f9bf 	bl	8000c0c <__smakebuf_r>
 800088e:	89a2      	ldrh	r2, [r4, #12]
 8000890:	f012 0301 	ands.w	r3, r2, #1
 8000894:	d00c      	beq.n	80008b0 <__swsetup_r+0xbc>
 8000896:	2300      	movs	r3, #0
 8000898:	60a3      	str	r3, [r4, #8]
 800089a:	6963      	ldr	r3, [r4, #20]
 800089c:	425b      	negs	r3, r3
 800089e:	61a3      	str	r3, [r4, #24]
 80008a0:	6923      	ldr	r3, [r4, #16]
 80008a2:	b953      	cbnz	r3, 80008ba <__swsetup_r+0xc6>
 80008a4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80008a8:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 80008ac:	d1ba      	bne.n	8000824 <__swsetup_r+0x30>
 80008ae:	bd70      	pop	{r4, r5, r6, pc}
 80008b0:	0792      	lsls	r2, r2, #30
 80008b2:	bf58      	it	pl
 80008b4:	6963      	ldrpl	r3, [r4, #20]
 80008b6:	60a3      	str	r3, [r4, #8]
 80008b8:	e7f2      	b.n	80008a0 <__swsetup_r+0xac>
 80008ba:	2000      	movs	r0, #0
 80008bc:	e7f7      	b.n	80008ae <__swsetup_r+0xba>
 80008be:	bf00      	nop
 80008c0:	20000000 	.word	0x20000000
 80008c4:	080015ac 	.word	0x080015ac
 80008c8:	080015cc 	.word	0x080015cc
 80008cc:	0800158c 	.word	0x0800158c

080008d0 <__sflush_r>:
 80008d0:	898a      	ldrh	r2, [r1, #12]
 80008d2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80008d6:	4605      	mov	r5, r0
 80008d8:	0710      	lsls	r0, r2, #28
 80008da:	460c      	mov	r4, r1
 80008dc:	d458      	bmi.n	8000990 <__sflush_r+0xc0>
 80008de:	684b      	ldr	r3, [r1, #4]
 80008e0:	2b00      	cmp	r3, #0
 80008e2:	dc05      	bgt.n	80008f0 <__sflush_r+0x20>
 80008e4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80008e6:	2b00      	cmp	r3, #0
 80008e8:	dc02      	bgt.n	80008f0 <__sflush_r+0x20>
 80008ea:	2000      	movs	r0, #0
 80008ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80008f0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80008f2:	2e00      	cmp	r6, #0
 80008f4:	d0f9      	beq.n	80008ea <__sflush_r+0x1a>
 80008f6:	2300      	movs	r3, #0
 80008f8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80008fc:	682f      	ldr	r7, [r5, #0]
 80008fe:	6a21      	ldr	r1, [r4, #32]
 8000900:	602b      	str	r3, [r5, #0]
 8000902:	d032      	beq.n	800096a <__sflush_r+0x9a>
 8000904:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000906:	89a3      	ldrh	r3, [r4, #12]
 8000908:	075a      	lsls	r2, r3, #29
 800090a:	d505      	bpl.n	8000918 <__sflush_r+0x48>
 800090c:	6863      	ldr	r3, [r4, #4]
 800090e:	1ac0      	subs	r0, r0, r3
 8000910:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000912:	b10b      	cbz	r3, 8000918 <__sflush_r+0x48>
 8000914:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000916:	1ac0      	subs	r0, r0, r3
 8000918:	2300      	movs	r3, #0
 800091a:	4602      	mov	r2, r0
 800091c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800091e:	6a21      	ldr	r1, [r4, #32]
 8000920:	4628      	mov	r0, r5
 8000922:	47b0      	blx	r6
 8000924:	1c43      	adds	r3, r0, #1
 8000926:	89a3      	ldrh	r3, [r4, #12]
 8000928:	d106      	bne.n	8000938 <__sflush_r+0x68>
 800092a:	6829      	ldr	r1, [r5, #0]
 800092c:	291d      	cmp	r1, #29
 800092e:	d848      	bhi.n	80009c2 <__sflush_r+0xf2>
 8000930:	4a29      	ldr	r2, [pc, #164]	; (80009d8 <__sflush_r+0x108>)
 8000932:	40ca      	lsrs	r2, r1
 8000934:	07d6      	lsls	r6, r2, #31
 8000936:	d544      	bpl.n	80009c2 <__sflush_r+0xf2>
 8000938:	2200      	movs	r2, #0
 800093a:	6062      	str	r2, [r4, #4]
 800093c:	04d9      	lsls	r1, r3, #19
 800093e:	6922      	ldr	r2, [r4, #16]
 8000940:	6022      	str	r2, [r4, #0]
 8000942:	d504      	bpl.n	800094e <__sflush_r+0x7e>
 8000944:	1c42      	adds	r2, r0, #1
 8000946:	d101      	bne.n	800094c <__sflush_r+0x7c>
 8000948:	682b      	ldr	r3, [r5, #0]
 800094a:	b903      	cbnz	r3, 800094e <__sflush_r+0x7e>
 800094c:	6560      	str	r0, [r4, #84]	; 0x54
 800094e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000950:	602f      	str	r7, [r5, #0]
 8000952:	2900      	cmp	r1, #0
 8000954:	d0c9      	beq.n	80008ea <__sflush_r+0x1a>
 8000956:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800095a:	4299      	cmp	r1, r3
 800095c:	d002      	beq.n	8000964 <__sflush_r+0x94>
 800095e:	4628      	mov	r0, r5
 8000960:	f000 f994 	bl	8000c8c <_free_r>
 8000964:	2000      	movs	r0, #0
 8000966:	6360      	str	r0, [r4, #52]	; 0x34
 8000968:	e7c0      	b.n	80008ec <__sflush_r+0x1c>
 800096a:	2301      	movs	r3, #1
 800096c:	4628      	mov	r0, r5
 800096e:	47b0      	blx	r6
 8000970:	1c41      	adds	r1, r0, #1
 8000972:	d1c8      	bne.n	8000906 <__sflush_r+0x36>
 8000974:	682b      	ldr	r3, [r5, #0]
 8000976:	2b00      	cmp	r3, #0
 8000978:	d0c5      	beq.n	8000906 <__sflush_r+0x36>
 800097a:	2b1d      	cmp	r3, #29
 800097c:	d001      	beq.n	8000982 <__sflush_r+0xb2>
 800097e:	2b16      	cmp	r3, #22
 8000980:	d101      	bne.n	8000986 <__sflush_r+0xb6>
 8000982:	602f      	str	r7, [r5, #0]
 8000984:	e7b1      	b.n	80008ea <__sflush_r+0x1a>
 8000986:	89a3      	ldrh	r3, [r4, #12]
 8000988:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800098c:	81a3      	strh	r3, [r4, #12]
 800098e:	e7ad      	b.n	80008ec <__sflush_r+0x1c>
 8000990:	690f      	ldr	r7, [r1, #16]
 8000992:	2f00      	cmp	r7, #0
 8000994:	d0a9      	beq.n	80008ea <__sflush_r+0x1a>
 8000996:	0793      	lsls	r3, r2, #30
 8000998:	680e      	ldr	r6, [r1, #0]
 800099a:	bf08      	it	eq
 800099c:	694b      	ldreq	r3, [r1, #20]
 800099e:	600f      	str	r7, [r1, #0]
 80009a0:	bf18      	it	ne
 80009a2:	2300      	movne	r3, #0
 80009a4:	eba6 0807 	sub.w	r8, r6, r7
 80009a8:	608b      	str	r3, [r1, #8]
 80009aa:	f1b8 0f00 	cmp.w	r8, #0
 80009ae:	dd9c      	ble.n	80008ea <__sflush_r+0x1a>
 80009b0:	4643      	mov	r3, r8
 80009b2:	463a      	mov	r2, r7
 80009b4:	6a21      	ldr	r1, [r4, #32]
 80009b6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80009b8:	4628      	mov	r0, r5
 80009ba:	47b0      	blx	r6
 80009bc:	2800      	cmp	r0, #0
 80009be:	dc06      	bgt.n	80009ce <__sflush_r+0xfe>
 80009c0:	89a3      	ldrh	r3, [r4, #12]
 80009c2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80009c6:	81a3      	strh	r3, [r4, #12]
 80009c8:	f04f 30ff 	mov.w	r0, #4294967295
 80009cc:	e78e      	b.n	80008ec <__sflush_r+0x1c>
 80009ce:	4407      	add	r7, r0
 80009d0:	eba8 0800 	sub.w	r8, r8, r0
 80009d4:	e7e9      	b.n	80009aa <__sflush_r+0xda>
 80009d6:	bf00      	nop
 80009d8:	20400001 	.word	0x20400001

080009dc <_fflush_r>:
 80009dc:	b538      	push	{r3, r4, r5, lr}
 80009de:	690b      	ldr	r3, [r1, #16]
 80009e0:	4605      	mov	r5, r0
 80009e2:	460c      	mov	r4, r1
 80009e4:	b1db      	cbz	r3, 8000a1e <_fflush_r+0x42>
 80009e6:	b118      	cbz	r0, 80009f0 <_fflush_r+0x14>
 80009e8:	6983      	ldr	r3, [r0, #24]
 80009ea:	b90b      	cbnz	r3, 80009f0 <_fflush_r+0x14>
 80009ec:	f000 f860 	bl	8000ab0 <__sinit>
 80009f0:	4b0c      	ldr	r3, [pc, #48]	; (8000a24 <_fflush_r+0x48>)
 80009f2:	429c      	cmp	r4, r3
 80009f4:	d109      	bne.n	8000a0a <_fflush_r+0x2e>
 80009f6:	686c      	ldr	r4, [r5, #4]
 80009f8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80009fc:	b17b      	cbz	r3, 8000a1e <_fflush_r+0x42>
 80009fe:	4621      	mov	r1, r4
 8000a00:	4628      	mov	r0, r5
 8000a02:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000a06:	f7ff bf63 	b.w	80008d0 <__sflush_r>
 8000a0a:	4b07      	ldr	r3, [pc, #28]	; (8000a28 <_fflush_r+0x4c>)
 8000a0c:	429c      	cmp	r4, r3
 8000a0e:	d101      	bne.n	8000a14 <_fflush_r+0x38>
 8000a10:	68ac      	ldr	r4, [r5, #8]
 8000a12:	e7f1      	b.n	80009f8 <_fflush_r+0x1c>
 8000a14:	4b05      	ldr	r3, [pc, #20]	; (8000a2c <_fflush_r+0x50>)
 8000a16:	429c      	cmp	r4, r3
 8000a18:	bf08      	it	eq
 8000a1a:	68ec      	ldreq	r4, [r5, #12]
 8000a1c:	e7ec      	b.n	80009f8 <_fflush_r+0x1c>
 8000a1e:	2000      	movs	r0, #0
 8000a20:	bd38      	pop	{r3, r4, r5, pc}
 8000a22:	bf00      	nop
 8000a24:	080015ac 	.word	0x080015ac
 8000a28:	080015cc 	.word	0x080015cc
 8000a2c:	0800158c 	.word	0x0800158c

08000a30 <std>:
 8000a30:	2300      	movs	r3, #0
 8000a32:	b510      	push	{r4, lr}
 8000a34:	4604      	mov	r4, r0
 8000a36:	e9c0 3300 	strd	r3, r3, [r0]
 8000a3a:	6083      	str	r3, [r0, #8]
 8000a3c:	8181      	strh	r1, [r0, #12]
 8000a3e:	6643      	str	r3, [r0, #100]	; 0x64
 8000a40:	81c2      	strh	r2, [r0, #14]
 8000a42:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000a46:	6183      	str	r3, [r0, #24]
 8000a48:	4619      	mov	r1, r3
 8000a4a:	2208      	movs	r2, #8
 8000a4c:	305c      	adds	r0, #92	; 0x5c
 8000a4e:	f7ff fdfb 	bl	8000648 <memset>
 8000a52:	4b05      	ldr	r3, [pc, #20]	; (8000a68 <std+0x38>)
 8000a54:	6263      	str	r3, [r4, #36]	; 0x24
 8000a56:	4b05      	ldr	r3, [pc, #20]	; (8000a6c <std+0x3c>)
 8000a58:	62a3      	str	r3, [r4, #40]	; 0x28
 8000a5a:	4b05      	ldr	r3, [pc, #20]	; (8000a70 <std+0x40>)
 8000a5c:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000a5e:	4b05      	ldr	r3, [pc, #20]	; (8000a74 <std+0x44>)
 8000a60:	6224      	str	r4, [r4, #32]
 8000a62:	6323      	str	r3, [r4, #48]	; 0x30
 8000a64:	bd10      	pop	{r4, pc}
 8000a66:	bf00      	nop
 8000a68:	0800138d 	.word	0x0800138d
 8000a6c:	080013af 	.word	0x080013af
 8000a70:	080013e7 	.word	0x080013e7
 8000a74:	0800140b 	.word	0x0800140b

08000a78 <_cleanup_r>:
 8000a78:	4901      	ldr	r1, [pc, #4]	; (8000a80 <_cleanup_r+0x8>)
 8000a7a:	f000 b885 	b.w	8000b88 <_fwalk_reent>
 8000a7e:	bf00      	nop
 8000a80:	080009dd 	.word	0x080009dd

08000a84 <__sfmoreglue>:
 8000a84:	b570      	push	{r4, r5, r6, lr}
 8000a86:	1e4a      	subs	r2, r1, #1
 8000a88:	2568      	movs	r5, #104	; 0x68
 8000a8a:	4355      	muls	r5, r2
 8000a8c:	460e      	mov	r6, r1
 8000a8e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000a92:	f000 f949 	bl	8000d28 <_malloc_r>
 8000a96:	4604      	mov	r4, r0
 8000a98:	b140      	cbz	r0, 8000aac <__sfmoreglue+0x28>
 8000a9a:	2100      	movs	r1, #0
 8000a9c:	e9c0 1600 	strd	r1, r6, [r0]
 8000aa0:	300c      	adds	r0, #12
 8000aa2:	60a0      	str	r0, [r4, #8]
 8000aa4:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000aa8:	f7ff fdce 	bl	8000648 <memset>
 8000aac:	4620      	mov	r0, r4
 8000aae:	bd70      	pop	{r4, r5, r6, pc}

08000ab0 <__sinit>:
 8000ab0:	6983      	ldr	r3, [r0, #24]
 8000ab2:	b510      	push	{r4, lr}
 8000ab4:	4604      	mov	r4, r0
 8000ab6:	bb33      	cbnz	r3, 8000b06 <__sinit+0x56>
 8000ab8:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 8000abc:	6503      	str	r3, [r0, #80]	; 0x50
 8000abe:	4b12      	ldr	r3, [pc, #72]	; (8000b08 <__sinit+0x58>)
 8000ac0:	4a12      	ldr	r2, [pc, #72]	; (8000b0c <__sinit+0x5c>)
 8000ac2:	681b      	ldr	r3, [r3, #0]
 8000ac4:	6282      	str	r2, [r0, #40]	; 0x28
 8000ac6:	4298      	cmp	r0, r3
 8000ac8:	bf04      	itt	eq
 8000aca:	2301      	moveq	r3, #1
 8000acc:	6183      	streq	r3, [r0, #24]
 8000ace:	f000 f81f 	bl	8000b10 <__sfp>
 8000ad2:	6060      	str	r0, [r4, #4]
 8000ad4:	4620      	mov	r0, r4
 8000ad6:	f000 f81b 	bl	8000b10 <__sfp>
 8000ada:	60a0      	str	r0, [r4, #8]
 8000adc:	4620      	mov	r0, r4
 8000ade:	f000 f817 	bl	8000b10 <__sfp>
 8000ae2:	2200      	movs	r2, #0
 8000ae4:	60e0      	str	r0, [r4, #12]
 8000ae6:	2104      	movs	r1, #4
 8000ae8:	6860      	ldr	r0, [r4, #4]
 8000aea:	f7ff ffa1 	bl	8000a30 <std>
 8000aee:	2201      	movs	r2, #1
 8000af0:	2109      	movs	r1, #9
 8000af2:	68a0      	ldr	r0, [r4, #8]
 8000af4:	f7ff ff9c 	bl	8000a30 <std>
 8000af8:	2202      	movs	r2, #2
 8000afa:	2112      	movs	r1, #18
 8000afc:	68e0      	ldr	r0, [r4, #12]
 8000afe:	f7ff ff97 	bl	8000a30 <std>
 8000b02:	2301      	movs	r3, #1
 8000b04:	61a3      	str	r3, [r4, #24]
 8000b06:	bd10      	pop	{r4, pc}
 8000b08:	08001588 	.word	0x08001588
 8000b0c:	08000a79 	.word	0x08000a79

08000b10 <__sfp>:
 8000b10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b12:	4b1b      	ldr	r3, [pc, #108]	; (8000b80 <__sfp+0x70>)
 8000b14:	681e      	ldr	r6, [r3, #0]
 8000b16:	69b3      	ldr	r3, [r6, #24]
 8000b18:	4607      	mov	r7, r0
 8000b1a:	b913      	cbnz	r3, 8000b22 <__sfp+0x12>
 8000b1c:	4630      	mov	r0, r6
 8000b1e:	f7ff ffc7 	bl	8000ab0 <__sinit>
 8000b22:	3648      	adds	r6, #72	; 0x48
 8000b24:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000b28:	3b01      	subs	r3, #1
 8000b2a:	d503      	bpl.n	8000b34 <__sfp+0x24>
 8000b2c:	6833      	ldr	r3, [r6, #0]
 8000b2e:	b133      	cbz	r3, 8000b3e <__sfp+0x2e>
 8000b30:	6836      	ldr	r6, [r6, #0]
 8000b32:	e7f7      	b.n	8000b24 <__sfp+0x14>
 8000b34:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000b38:	b16d      	cbz	r5, 8000b56 <__sfp+0x46>
 8000b3a:	3468      	adds	r4, #104	; 0x68
 8000b3c:	e7f4      	b.n	8000b28 <__sfp+0x18>
 8000b3e:	2104      	movs	r1, #4
 8000b40:	4638      	mov	r0, r7
 8000b42:	f7ff ff9f 	bl	8000a84 <__sfmoreglue>
 8000b46:	6030      	str	r0, [r6, #0]
 8000b48:	2800      	cmp	r0, #0
 8000b4a:	d1f1      	bne.n	8000b30 <__sfp+0x20>
 8000b4c:	230c      	movs	r3, #12
 8000b4e:	603b      	str	r3, [r7, #0]
 8000b50:	4604      	mov	r4, r0
 8000b52:	4620      	mov	r0, r4
 8000b54:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000b56:	4b0b      	ldr	r3, [pc, #44]	; (8000b84 <__sfp+0x74>)
 8000b58:	6665      	str	r5, [r4, #100]	; 0x64
 8000b5a:	e9c4 5500 	strd	r5, r5, [r4]
 8000b5e:	60a5      	str	r5, [r4, #8]
 8000b60:	e9c4 3503 	strd	r3, r5, [r4, #12]
 8000b64:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8000b68:	2208      	movs	r2, #8
 8000b6a:	4629      	mov	r1, r5
 8000b6c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000b70:	f7ff fd6a 	bl	8000648 <memset>
 8000b74:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000b78:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000b7c:	e7e9      	b.n	8000b52 <__sfp+0x42>
 8000b7e:	bf00      	nop
 8000b80:	08001588 	.word	0x08001588
 8000b84:	ffff0001 	.word	0xffff0001

08000b88 <_fwalk_reent>:
 8000b88:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000b8c:	4680      	mov	r8, r0
 8000b8e:	4689      	mov	r9, r1
 8000b90:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000b94:	2600      	movs	r6, #0
 8000b96:	b914      	cbnz	r4, 8000b9e <_fwalk_reent+0x16>
 8000b98:	4630      	mov	r0, r6
 8000b9a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000b9e:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 8000ba2:	3f01      	subs	r7, #1
 8000ba4:	d501      	bpl.n	8000baa <_fwalk_reent+0x22>
 8000ba6:	6824      	ldr	r4, [r4, #0]
 8000ba8:	e7f5      	b.n	8000b96 <_fwalk_reent+0xe>
 8000baa:	89ab      	ldrh	r3, [r5, #12]
 8000bac:	2b01      	cmp	r3, #1
 8000bae:	d907      	bls.n	8000bc0 <_fwalk_reent+0x38>
 8000bb0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000bb4:	3301      	adds	r3, #1
 8000bb6:	d003      	beq.n	8000bc0 <_fwalk_reent+0x38>
 8000bb8:	4629      	mov	r1, r5
 8000bba:	4640      	mov	r0, r8
 8000bbc:	47c8      	blx	r9
 8000bbe:	4306      	orrs	r6, r0
 8000bc0:	3568      	adds	r5, #104	; 0x68
 8000bc2:	e7ee      	b.n	8000ba2 <_fwalk_reent+0x1a>

08000bc4 <__swhatbuf_r>:
 8000bc4:	b570      	push	{r4, r5, r6, lr}
 8000bc6:	460e      	mov	r6, r1
 8000bc8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000bcc:	2900      	cmp	r1, #0
 8000bce:	b096      	sub	sp, #88	; 0x58
 8000bd0:	4614      	mov	r4, r2
 8000bd2:	461d      	mov	r5, r3
 8000bd4:	da07      	bge.n	8000be6 <__swhatbuf_r+0x22>
 8000bd6:	2300      	movs	r3, #0
 8000bd8:	602b      	str	r3, [r5, #0]
 8000bda:	89b3      	ldrh	r3, [r6, #12]
 8000bdc:	061a      	lsls	r2, r3, #24
 8000bde:	d410      	bmi.n	8000c02 <__swhatbuf_r+0x3e>
 8000be0:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000be4:	e00e      	b.n	8000c04 <__swhatbuf_r+0x40>
 8000be6:	466a      	mov	r2, sp
 8000be8:	f000 fc36 	bl	8001458 <_fstat_r>
 8000bec:	2800      	cmp	r0, #0
 8000bee:	dbf2      	blt.n	8000bd6 <__swhatbuf_r+0x12>
 8000bf0:	9a01      	ldr	r2, [sp, #4]
 8000bf2:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000bf6:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000bfa:	425a      	negs	r2, r3
 8000bfc:	415a      	adcs	r2, r3
 8000bfe:	602a      	str	r2, [r5, #0]
 8000c00:	e7ee      	b.n	8000be0 <__swhatbuf_r+0x1c>
 8000c02:	2340      	movs	r3, #64	; 0x40
 8000c04:	2000      	movs	r0, #0
 8000c06:	6023      	str	r3, [r4, #0]
 8000c08:	b016      	add	sp, #88	; 0x58
 8000c0a:	bd70      	pop	{r4, r5, r6, pc}

08000c0c <__smakebuf_r>:
 8000c0c:	898b      	ldrh	r3, [r1, #12]
 8000c0e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000c10:	079d      	lsls	r5, r3, #30
 8000c12:	4606      	mov	r6, r0
 8000c14:	460c      	mov	r4, r1
 8000c16:	d507      	bpl.n	8000c28 <__smakebuf_r+0x1c>
 8000c18:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000c1c:	6023      	str	r3, [r4, #0]
 8000c1e:	6123      	str	r3, [r4, #16]
 8000c20:	2301      	movs	r3, #1
 8000c22:	6163      	str	r3, [r4, #20]
 8000c24:	b002      	add	sp, #8
 8000c26:	bd70      	pop	{r4, r5, r6, pc}
 8000c28:	ab01      	add	r3, sp, #4
 8000c2a:	466a      	mov	r2, sp
 8000c2c:	f7ff ffca 	bl	8000bc4 <__swhatbuf_r>
 8000c30:	9900      	ldr	r1, [sp, #0]
 8000c32:	4605      	mov	r5, r0
 8000c34:	4630      	mov	r0, r6
 8000c36:	f000 f877 	bl	8000d28 <_malloc_r>
 8000c3a:	b948      	cbnz	r0, 8000c50 <__smakebuf_r+0x44>
 8000c3c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000c40:	059a      	lsls	r2, r3, #22
 8000c42:	d4ef      	bmi.n	8000c24 <__smakebuf_r+0x18>
 8000c44:	f023 0303 	bic.w	r3, r3, #3
 8000c48:	f043 0302 	orr.w	r3, r3, #2
 8000c4c:	81a3      	strh	r3, [r4, #12]
 8000c4e:	e7e3      	b.n	8000c18 <__smakebuf_r+0xc>
 8000c50:	4b0d      	ldr	r3, [pc, #52]	; (8000c88 <__smakebuf_r+0x7c>)
 8000c52:	62b3      	str	r3, [r6, #40]	; 0x28
 8000c54:	89a3      	ldrh	r3, [r4, #12]
 8000c56:	6020      	str	r0, [r4, #0]
 8000c58:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000c5c:	81a3      	strh	r3, [r4, #12]
 8000c5e:	9b00      	ldr	r3, [sp, #0]
 8000c60:	6163      	str	r3, [r4, #20]
 8000c62:	9b01      	ldr	r3, [sp, #4]
 8000c64:	6120      	str	r0, [r4, #16]
 8000c66:	b15b      	cbz	r3, 8000c80 <__smakebuf_r+0x74>
 8000c68:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000c6c:	4630      	mov	r0, r6
 8000c6e:	f000 fc05 	bl	800147c <_isatty_r>
 8000c72:	b128      	cbz	r0, 8000c80 <__smakebuf_r+0x74>
 8000c74:	89a3      	ldrh	r3, [r4, #12]
 8000c76:	f023 0303 	bic.w	r3, r3, #3
 8000c7a:	f043 0301 	orr.w	r3, r3, #1
 8000c7e:	81a3      	strh	r3, [r4, #12]
 8000c80:	89a3      	ldrh	r3, [r4, #12]
 8000c82:	431d      	orrs	r5, r3
 8000c84:	81a5      	strh	r5, [r4, #12]
 8000c86:	e7cd      	b.n	8000c24 <__smakebuf_r+0x18>
 8000c88:	08000a79 	.word	0x08000a79

08000c8c <_free_r>:
 8000c8c:	b538      	push	{r3, r4, r5, lr}
 8000c8e:	4605      	mov	r5, r0
 8000c90:	2900      	cmp	r1, #0
 8000c92:	d045      	beq.n	8000d20 <_free_r+0x94>
 8000c94:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000c98:	1f0c      	subs	r4, r1, #4
 8000c9a:	2b00      	cmp	r3, #0
 8000c9c:	bfb8      	it	lt
 8000c9e:	18e4      	addlt	r4, r4, r3
 8000ca0:	f000 fc0e 	bl	80014c0 <__malloc_lock>
 8000ca4:	4a1f      	ldr	r2, [pc, #124]	; (8000d24 <_free_r+0x98>)
 8000ca6:	6813      	ldr	r3, [r2, #0]
 8000ca8:	4610      	mov	r0, r2
 8000caa:	b933      	cbnz	r3, 8000cba <_free_r+0x2e>
 8000cac:	6063      	str	r3, [r4, #4]
 8000cae:	6014      	str	r4, [r2, #0]
 8000cb0:	4628      	mov	r0, r5
 8000cb2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000cb6:	f000 bc04 	b.w	80014c2 <__malloc_unlock>
 8000cba:	42a3      	cmp	r3, r4
 8000cbc:	d90c      	bls.n	8000cd8 <_free_r+0x4c>
 8000cbe:	6821      	ldr	r1, [r4, #0]
 8000cc0:	1862      	adds	r2, r4, r1
 8000cc2:	4293      	cmp	r3, r2
 8000cc4:	bf04      	itt	eq
 8000cc6:	681a      	ldreq	r2, [r3, #0]
 8000cc8:	685b      	ldreq	r3, [r3, #4]
 8000cca:	6063      	str	r3, [r4, #4]
 8000ccc:	bf04      	itt	eq
 8000cce:	1852      	addeq	r2, r2, r1
 8000cd0:	6022      	streq	r2, [r4, #0]
 8000cd2:	6004      	str	r4, [r0, #0]
 8000cd4:	e7ec      	b.n	8000cb0 <_free_r+0x24>
 8000cd6:	4613      	mov	r3, r2
 8000cd8:	685a      	ldr	r2, [r3, #4]
 8000cda:	b10a      	cbz	r2, 8000ce0 <_free_r+0x54>
 8000cdc:	42a2      	cmp	r2, r4
 8000cde:	d9fa      	bls.n	8000cd6 <_free_r+0x4a>
 8000ce0:	6819      	ldr	r1, [r3, #0]
 8000ce2:	1858      	adds	r0, r3, r1
 8000ce4:	42a0      	cmp	r0, r4
 8000ce6:	d10b      	bne.n	8000d00 <_free_r+0x74>
 8000ce8:	6820      	ldr	r0, [r4, #0]
 8000cea:	4401      	add	r1, r0
 8000cec:	1858      	adds	r0, r3, r1
 8000cee:	4282      	cmp	r2, r0
 8000cf0:	6019      	str	r1, [r3, #0]
 8000cf2:	d1dd      	bne.n	8000cb0 <_free_r+0x24>
 8000cf4:	6810      	ldr	r0, [r2, #0]
 8000cf6:	6852      	ldr	r2, [r2, #4]
 8000cf8:	605a      	str	r2, [r3, #4]
 8000cfa:	4401      	add	r1, r0
 8000cfc:	6019      	str	r1, [r3, #0]
 8000cfe:	e7d7      	b.n	8000cb0 <_free_r+0x24>
 8000d00:	d902      	bls.n	8000d08 <_free_r+0x7c>
 8000d02:	230c      	movs	r3, #12
 8000d04:	602b      	str	r3, [r5, #0]
 8000d06:	e7d3      	b.n	8000cb0 <_free_r+0x24>
 8000d08:	6820      	ldr	r0, [r4, #0]
 8000d0a:	1821      	adds	r1, r4, r0
 8000d0c:	428a      	cmp	r2, r1
 8000d0e:	bf04      	itt	eq
 8000d10:	6811      	ldreq	r1, [r2, #0]
 8000d12:	6852      	ldreq	r2, [r2, #4]
 8000d14:	6062      	str	r2, [r4, #4]
 8000d16:	bf04      	itt	eq
 8000d18:	1809      	addeq	r1, r1, r0
 8000d1a:	6021      	streq	r1, [r4, #0]
 8000d1c:	605c      	str	r4, [r3, #4]
 8000d1e:	e7c7      	b.n	8000cb0 <_free_r+0x24>
 8000d20:	bd38      	pop	{r3, r4, r5, pc}
 8000d22:	bf00      	nop
 8000d24:	20000084 	.word	0x20000084

08000d28 <_malloc_r>:
 8000d28:	b570      	push	{r4, r5, r6, lr}
 8000d2a:	1ccd      	adds	r5, r1, #3
 8000d2c:	f025 0503 	bic.w	r5, r5, #3
 8000d30:	3508      	adds	r5, #8
 8000d32:	2d0c      	cmp	r5, #12
 8000d34:	bf38      	it	cc
 8000d36:	250c      	movcc	r5, #12
 8000d38:	2d00      	cmp	r5, #0
 8000d3a:	4606      	mov	r6, r0
 8000d3c:	db01      	blt.n	8000d42 <_malloc_r+0x1a>
 8000d3e:	42a9      	cmp	r1, r5
 8000d40:	d903      	bls.n	8000d4a <_malloc_r+0x22>
 8000d42:	230c      	movs	r3, #12
 8000d44:	6033      	str	r3, [r6, #0]
 8000d46:	2000      	movs	r0, #0
 8000d48:	bd70      	pop	{r4, r5, r6, pc}
 8000d4a:	f000 fbb9 	bl	80014c0 <__malloc_lock>
 8000d4e:	4a21      	ldr	r2, [pc, #132]	; (8000dd4 <_malloc_r+0xac>)
 8000d50:	6814      	ldr	r4, [r2, #0]
 8000d52:	4621      	mov	r1, r4
 8000d54:	b991      	cbnz	r1, 8000d7c <_malloc_r+0x54>
 8000d56:	4c20      	ldr	r4, [pc, #128]	; (8000dd8 <_malloc_r+0xb0>)
 8000d58:	6823      	ldr	r3, [r4, #0]
 8000d5a:	b91b      	cbnz	r3, 8000d64 <_malloc_r+0x3c>
 8000d5c:	4630      	mov	r0, r6
 8000d5e:	f000 fb05 	bl	800136c <_sbrk_r>
 8000d62:	6020      	str	r0, [r4, #0]
 8000d64:	4629      	mov	r1, r5
 8000d66:	4630      	mov	r0, r6
 8000d68:	f000 fb00 	bl	800136c <_sbrk_r>
 8000d6c:	1c43      	adds	r3, r0, #1
 8000d6e:	d124      	bne.n	8000dba <_malloc_r+0x92>
 8000d70:	230c      	movs	r3, #12
 8000d72:	6033      	str	r3, [r6, #0]
 8000d74:	4630      	mov	r0, r6
 8000d76:	f000 fba4 	bl	80014c2 <__malloc_unlock>
 8000d7a:	e7e4      	b.n	8000d46 <_malloc_r+0x1e>
 8000d7c:	680b      	ldr	r3, [r1, #0]
 8000d7e:	1b5b      	subs	r3, r3, r5
 8000d80:	d418      	bmi.n	8000db4 <_malloc_r+0x8c>
 8000d82:	2b0b      	cmp	r3, #11
 8000d84:	d90f      	bls.n	8000da6 <_malloc_r+0x7e>
 8000d86:	600b      	str	r3, [r1, #0]
 8000d88:	50cd      	str	r5, [r1, r3]
 8000d8a:	18cc      	adds	r4, r1, r3
 8000d8c:	4630      	mov	r0, r6
 8000d8e:	f000 fb98 	bl	80014c2 <__malloc_unlock>
 8000d92:	f104 000b 	add.w	r0, r4, #11
 8000d96:	1d23      	adds	r3, r4, #4
 8000d98:	f020 0007 	bic.w	r0, r0, #7
 8000d9c:	1ac3      	subs	r3, r0, r3
 8000d9e:	d0d3      	beq.n	8000d48 <_malloc_r+0x20>
 8000da0:	425a      	negs	r2, r3
 8000da2:	50e2      	str	r2, [r4, r3]
 8000da4:	e7d0      	b.n	8000d48 <_malloc_r+0x20>
 8000da6:	428c      	cmp	r4, r1
 8000da8:	684b      	ldr	r3, [r1, #4]
 8000daa:	bf16      	itet	ne
 8000dac:	6063      	strne	r3, [r4, #4]
 8000dae:	6013      	streq	r3, [r2, #0]
 8000db0:	460c      	movne	r4, r1
 8000db2:	e7eb      	b.n	8000d8c <_malloc_r+0x64>
 8000db4:	460c      	mov	r4, r1
 8000db6:	6849      	ldr	r1, [r1, #4]
 8000db8:	e7cc      	b.n	8000d54 <_malloc_r+0x2c>
 8000dba:	1cc4      	adds	r4, r0, #3
 8000dbc:	f024 0403 	bic.w	r4, r4, #3
 8000dc0:	42a0      	cmp	r0, r4
 8000dc2:	d005      	beq.n	8000dd0 <_malloc_r+0xa8>
 8000dc4:	1a21      	subs	r1, r4, r0
 8000dc6:	4630      	mov	r0, r6
 8000dc8:	f000 fad0 	bl	800136c <_sbrk_r>
 8000dcc:	3001      	adds	r0, #1
 8000dce:	d0cf      	beq.n	8000d70 <_malloc_r+0x48>
 8000dd0:	6025      	str	r5, [r4, #0]
 8000dd2:	e7db      	b.n	8000d8c <_malloc_r+0x64>
 8000dd4:	20000084 	.word	0x20000084
 8000dd8:	20000088 	.word	0x20000088

08000ddc <__sfputc_r>:
 8000ddc:	6893      	ldr	r3, [r2, #8]
 8000dde:	3b01      	subs	r3, #1
 8000de0:	2b00      	cmp	r3, #0
 8000de2:	b410      	push	{r4}
 8000de4:	6093      	str	r3, [r2, #8]
 8000de6:	da08      	bge.n	8000dfa <__sfputc_r+0x1e>
 8000de8:	6994      	ldr	r4, [r2, #24]
 8000dea:	42a3      	cmp	r3, r4
 8000dec:	db01      	blt.n	8000df2 <__sfputc_r+0x16>
 8000dee:	290a      	cmp	r1, #10
 8000df0:	d103      	bne.n	8000dfa <__sfputc_r+0x1e>
 8000df2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000df6:	f7ff bcab 	b.w	8000750 <__swbuf_r>
 8000dfa:	6813      	ldr	r3, [r2, #0]
 8000dfc:	1c58      	adds	r0, r3, #1
 8000dfe:	6010      	str	r0, [r2, #0]
 8000e00:	7019      	strb	r1, [r3, #0]
 8000e02:	4608      	mov	r0, r1
 8000e04:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000e08:	4770      	bx	lr

08000e0a <__sfputs_r>:
 8000e0a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e0c:	4606      	mov	r6, r0
 8000e0e:	460f      	mov	r7, r1
 8000e10:	4614      	mov	r4, r2
 8000e12:	18d5      	adds	r5, r2, r3
 8000e14:	42ac      	cmp	r4, r5
 8000e16:	d101      	bne.n	8000e1c <__sfputs_r+0x12>
 8000e18:	2000      	movs	r0, #0
 8000e1a:	e007      	b.n	8000e2c <__sfputs_r+0x22>
 8000e1c:	463a      	mov	r2, r7
 8000e1e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000e22:	4630      	mov	r0, r6
 8000e24:	f7ff ffda 	bl	8000ddc <__sfputc_r>
 8000e28:	1c43      	adds	r3, r0, #1
 8000e2a:	d1f3      	bne.n	8000e14 <__sfputs_r+0xa>
 8000e2c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000e30 <_vfiprintf_r>:
 8000e30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000e34:	460c      	mov	r4, r1
 8000e36:	b09d      	sub	sp, #116	; 0x74
 8000e38:	4617      	mov	r7, r2
 8000e3a:	461d      	mov	r5, r3
 8000e3c:	4606      	mov	r6, r0
 8000e3e:	b118      	cbz	r0, 8000e48 <_vfiprintf_r+0x18>
 8000e40:	6983      	ldr	r3, [r0, #24]
 8000e42:	b90b      	cbnz	r3, 8000e48 <_vfiprintf_r+0x18>
 8000e44:	f7ff fe34 	bl	8000ab0 <__sinit>
 8000e48:	4b7c      	ldr	r3, [pc, #496]	; (800103c <_vfiprintf_r+0x20c>)
 8000e4a:	429c      	cmp	r4, r3
 8000e4c:	d158      	bne.n	8000f00 <_vfiprintf_r+0xd0>
 8000e4e:	6874      	ldr	r4, [r6, #4]
 8000e50:	89a3      	ldrh	r3, [r4, #12]
 8000e52:	0718      	lsls	r0, r3, #28
 8000e54:	d55e      	bpl.n	8000f14 <_vfiprintf_r+0xe4>
 8000e56:	6923      	ldr	r3, [r4, #16]
 8000e58:	2b00      	cmp	r3, #0
 8000e5a:	d05b      	beq.n	8000f14 <_vfiprintf_r+0xe4>
 8000e5c:	2300      	movs	r3, #0
 8000e5e:	9309      	str	r3, [sp, #36]	; 0x24
 8000e60:	2320      	movs	r3, #32
 8000e62:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000e66:	2330      	movs	r3, #48	; 0x30
 8000e68:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000e6c:	9503      	str	r5, [sp, #12]
 8000e6e:	f04f 0b01 	mov.w	fp, #1
 8000e72:	46b8      	mov	r8, r7
 8000e74:	4645      	mov	r5, r8
 8000e76:	f815 3b01 	ldrb.w	r3, [r5], #1
 8000e7a:	b10b      	cbz	r3, 8000e80 <_vfiprintf_r+0x50>
 8000e7c:	2b25      	cmp	r3, #37	; 0x25
 8000e7e:	d154      	bne.n	8000f2a <_vfiprintf_r+0xfa>
 8000e80:	ebb8 0a07 	subs.w	sl, r8, r7
 8000e84:	d00b      	beq.n	8000e9e <_vfiprintf_r+0x6e>
 8000e86:	4653      	mov	r3, sl
 8000e88:	463a      	mov	r2, r7
 8000e8a:	4621      	mov	r1, r4
 8000e8c:	4630      	mov	r0, r6
 8000e8e:	f7ff ffbc 	bl	8000e0a <__sfputs_r>
 8000e92:	3001      	adds	r0, #1
 8000e94:	f000 80c2 	beq.w	800101c <_vfiprintf_r+0x1ec>
 8000e98:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000e9a:	4453      	add	r3, sl
 8000e9c:	9309      	str	r3, [sp, #36]	; 0x24
 8000e9e:	f898 3000 	ldrb.w	r3, [r8]
 8000ea2:	2b00      	cmp	r3, #0
 8000ea4:	f000 80ba 	beq.w	800101c <_vfiprintf_r+0x1ec>
 8000ea8:	2300      	movs	r3, #0
 8000eaa:	f04f 32ff 	mov.w	r2, #4294967295
 8000eae:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000eb2:	9304      	str	r3, [sp, #16]
 8000eb4:	9307      	str	r3, [sp, #28]
 8000eb6:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000eba:	931a      	str	r3, [sp, #104]	; 0x68
 8000ebc:	46a8      	mov	r8, r5
 8000ebe:	2205      	movs	r2, #5
 8000ec0:	f818 1b01 	ldrb.w	r1, [r8], #1
 8000ec4:	485e      	ldr	r0, [pc, #376]	; (8001040 <_vfiprintf_r+0x210>)
 8000ec6:	f7ff f993 	bl	80001f0 <memchr>
 8000eca:	9b04      	ldr	r3, [sp, #16]
 8000ecc:	bb78      	cbnz	r0, 8000f2e <_vfiprintf_r+0xfe>
 8000ece:	06d9      	lsls	r1, r3, #27
 8000ed0:	bf44      	itt	mi
 8000ed2:	2220      	movmi	r2, #32
 8000ed4:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000ed8:	071a      	lsls	r2, r3, #28
 8000eda:	bf44      	itt	mi
 8000edc:	222b      	movmi	r2, #43	; 0x2b
 8000ede:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000ee2:	782a      	ldrb	r2, [r5, #0]
 8000ee4:	2a2a      	cmp	r2, #42	; 0x2a
 8000ee6:	d02a      	beq.n	8000f3e <_vfiprintf_r+0x10e>
 8000ee8:	9a07      	ldr	r2, [sp, #28]
 8000eea:	46a8      	mov	r8, r5
 8000eec:	2000      	movs	r0, #0
 8000eee:	250a      	movs	r5, #10
 8000ef0:	4641      	mov	r1, r8
 8000ef2:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000ef6:	3b30      	subs	r3, #48	; 0x30
 8000ef8:	2b09      	cmp	r3, #9
 8000efa:	d969      	bls.n	8000fd0 <_vfiprintf_r+0x1a0>
 8000efc:	b360      	cbz	r0, 8000f58 <_vfiprintf_r+0x128>
 8000efe:	e024      	b.n	8000f4a <_vfiprintf_r+0x11a>
 8000f00:	4b50      	ldr	r3, [pc, #320]	; (8001044 <_vfiprintf_r+0x214>)
 8000f02:	429c      	cmp	r4, r3
 8000f04:	d101      	bne.n	8000f0a <_vfiprintf_r+0xda>
 8000f06:	68b4      	ldr	r4, [r6, #8]
 8000f08:	e7a2      	b.n	8000e50 <_vfiprintf_r+0x20>
 8000f0a:	4b4f      	ldr	r3, [pc, #316]	; (8001048 <_vfiprintf_r+0x218>)
 8000f0c:	429c      	cmp	r4, r3
 8000f0e:	bf08      	it	eq
 8000f10:	68f4      	ldreq	r4, [r6, #12]
 8000f12:	e79d      	b.n	8000e50 <_vfiprintf_r+0x20>
 8000f14:	4621      	mov	r1, r4
 8000f16:	4630      	mov	r0, r6
 8000f18:	f7ff fc6c 	bl	80007f4 <__swsetup_r>
 8000f1c:	2800      	cmp	r0, #0
 8000f1e:	d09d      	beq.n	8000e5c <_vfiprintf_r+0x2c>
 8000f20:	f04f 30ff 	mov.w	r0, #4294967295
 8000f24:	b01d      	add	sp, #116	; 0x74
 8000f26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000f2a:	46a8      	mov	r8, r5
 8000f2c:	e7a2      	b.n	8000e74 <_vfiprintf_r+0x44>
 8000f2e:	4a44      	ldr	r2, [pc, #272]	; (8001040 <_vfiprintf_r+0x210>)
 8000f30:	1a80      	subs	r0, r0, r2
 8000f32:	fa0b f000 	lsl.w	r0, fp, r0
 8000f36:	4318      	orrs	r0, r3
 8000f38:	9004      	str	r0, [sp, #16]
 8000f3a:	4645      	mov	r5, r8
 8000f3c:	e7be      	b.n	8000ebc <_vfiprintf_r+0x8c>
 8000f3e:	9a03      	ldr	r2, [sp, #12]
 8000f40:	1d11      	adds	r1, r2, #4
 8000f42:	6812      	ldr	r2, [r2, #0]
 8000f44:	9103      	str	r1, [sp, #12]
 8000f46:	2a00      	cmp	r2, #0
 8000f48:	db01      	blt.n	8000f4e <_vfiprintf_r+0x11e>
 8000f4a:	9207      	str	r2, [sp, #28]
 8000f4c:	e004      	b.n	8000f58 <_vfiprintf_r+0x128>
 8000f4e:	4252      	negs	r2, r2
 8000f50:	f043 0302 	orr.w	r3, r3, #2
 8000f54:	9207      	str	r2, [sp, #28]
 8000f56:	9304      	str	r3, [sp, #16]
 8000f58:	f898 3000 	ldrb.w	r3, [r8]
 8000f5c:	2b2e      	cmp	r3, #46	; 0x2e
 8000f5e:	d10e      	bne.n	8000f7e <_vfiprintf_r+0x14e>
 8000f60:	f898 3001 	ldrb.w	r3, [r8, #1]
 8000f64:	2b2a      	cmp	r3, #42	; 0x2a
 8000f66:	d138      	bne.n	8000fda <_vfiprintf_r+0x1aa>
 8000f68:	9b03      	ldr	r3, [sp, #12]
 8000f6a:	1d1a      	adds	r2, r3, #4
 8000f6c:	681b      	ldr	r3, [r3, #0]
 8000f6e:	9203      	str	r2, [sp, #12]
 8000f70:	2b00      	cmp	r3, #0
 8000f72:	bfb8      	it	lt
 8000f74:	f04f 33ff 	movlt.w	r3, #4294967295
 8000f78:	f108 0802 	add.w	r8, r8, #2
 8000f7c:	9305      	str	r3, [sp, #20]
 8000f7e:	4d33      	ldr	r5, [pc, #204]	; (800104c <_vfiprintf_r+0x21c>)
 8000f80:	f898 1000 	ldrb.w	r1, [r8]
 8000f84:	2203      	movs	r2, #3
 8000f86:	4628      	mov	r0, r5
 8000f88:	f7ff f932 	bl	80001f0 <memchr>
 8000f8c:	b140      	cbz	r0, 8000fa0 <_vfiprintf_r+0x170>
 8000f8e:	2340      	movs	r3, #64	; 0x40
 8000f90:	1b40      	subs	r0, r0, r5
 8000f92:	fa03 f000 	lsl.w	r0, r3, r0
 8000f96:	9b04      	ldr	r3, [sp, #16]
 8000f98:	4303      	orrs	r3, r0
 8000f9a:	f108 0801 	add.w	r8, r8, #1
 8000f9e:	9304      	str	r3, [sp, #16]
 8000fa0:	f898 1000 	ldrb.w	r1, [r8]
 8000fa4:	482a      	ldr	r0, [pc, #168]	; (8001050 <_vfiprintf_r+0x220>)
 8000fa6:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000faa:	2206      	movs	r2, #6
 8000fac:	f108 0701 	add.w	r7, r8, #1
 8000fb0:	f7ff f91e 	bl	80001f0 <memchr>
 8000fb4:	2800      	cmp	r0, #0
 8000fb6:	d037      	beq.n	8001028 <_vfiprintf_r+0x1f8>
 8000fb8:	4b26      	ldr	r3, [pc, #152]	; (8001054 <_vfiprintf_r+0x224>)
 8000fba:	bb1b      	cbnz	r3, 8001004 <_vfiprintf_r+0x1d4>
 8000fbc:	9b03      	ldr	r3, [sp, #12]
 8000fbe:	3307      	adds	r3, #7
 8000fc0:	f023 0307 	bic.w	r3, r3, #7
 8000fc4:	3308      	adds	r3, #8
 8000fc6:	9303      	str	r3, [sp, #12]
 8000fc8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000fca:	444b      	add	r3, r9
 8000fcc:	9309      	str	r3, [sp, #36]	; 0x24
 8000fce:	e750      	b.n	8000e72 <_vfiprintf_r+0x42>
 8000fd0:	fb05 3202 	mla	r2, r5, r2, r3
 8000fd4:	2001      	movs	r0, #1
 8000fd6:	4688      	mov	r8, r1
 8000fd8:	e78a      	b.n	8000ef0 <_vfiprintf_r+0xc0>
 8000fda:	2300      	movs	r3, #0
 8000fdc:	f108 0801 	add.w	r8, r8, #1
 8000fe0:	9305      	str	r3, [sp, #20]
 8000fe2:	4619      	mov	r1, r3
 8000fe4:	250a      	movs	r5, #10
 8000fe6:	4640      	mov	r0, r8
 8000fe8:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000fec:	3a30      	subs	r2, #48	; 0x30
 8000fee:	2a09      	cmp	r2, #9
 8000ff0:	d903      	bls.n	8000ffa <_vfiprintf_r+0x1ca>
 8000ff2:	2b00      	cmp	r3, #0
 8000ff4:	d0c3      	beq.n	8000f7e <_vfiprintf_r+0x14e>
 8000ff6:	9105      	str	r1, [sp, #20]
 8000ff8:	e7c1      	b.n	8000f7e <_vfiprintf_r+0x14e>
 8000ffa:	fb05 2101 	mla	r1, r5, r1, r2
 8000ffe:	2301      	movs	r3, #1
 8001000:	4680      	mov	r8, r0
 8001002:	e7f0      	b.n	8000fe6 <_vfiprintf_r+0x1b6>
 8001004:	ab03      	add	r3, sp, #12
 8001006:	9300      	str	r3, [sp, #0]
 8001008:	4622      	mov	r2, r4
 800100a:	4b13      	ldr	r3, [pc, #76]	; (8001058 <_vfiprintf_r+0x228>)
 800100c:	a904      	add	r1, sp, #16
 800100e:	4630      	mov	r0, r6
 8001010:	f3af 8000 	nop.w
 8001014:	f1b0 3fff 	cmp.w	r0, #4294967295
 8001018:	4681      	mov	r9, r0
 800101a:	d1d5      	bne.n	8000fc8 <_vfiprintf_r+0x198>
 800101c:	89a3      	ldrh	r3, [r4, #12]
 800101e:	065b      	lsls	r3, r3, #25
 8001020:	f53f af7e 	bmi.w	8000f20 <_vfiprintf_r+0xf0>
 8001024:	9809      	ldr	r0, [sp, #36]	; 0x24
 8001026:	e77d      	b.n	8000f24 <_vfiprintf_r+0xf4>
 8001028:	ab03      	add	r3, sp, #12
 800102a:	9300      	str	r3, [sp, #0]
 800102c:	4622      	mov	r2, r4
 800102e:	4b0a      	ldr	r3, [pc, #40]	; (8001058 <_vfiprintf_r+0x228>)
 8001030:	a904      	add	r1, sp, #16
 8001032:	4630      	mov	r0, r6
 8001034:	f000 f888 	bl	8001148 <_printf_i>
 8001038:	e7ec      	b.n	8001014 <_vfiprintf_r+0x1e4>
 800103a:	bf00      	nop
 800103c:	080015ac 	.word	0x080015ac
 8001040:	080015ec 	.word	0x080015ec
 8001044:	080015cc 	.word	0x080015cc
 8001048:	0800158c 	.word	0x0800158c
 800104c:	080015f2 	.word	0x080015f2
 8001050:	080015f6 	.word	0x080015f6
 8001054:	00000000 	.word	0x00000000
 8001058:	08000e0b 	.word	0x08000e0b

0800105c <_printf_common>:
 800105c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001060:	4691      	mov	r9, r2
 8001062:	461f      	mov	r7, r3
 8001064:	688a      	ldr	r2, [r1, #8]
 8001066:	690b      	ldr	r3, [r1, #16]
 8001068:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800106c:	4293      	cmp	r3, r2
 800106e:	bfb8      	it	lt
 8001070:	4613      	movlt	r3, r2
 8001072:	f8c9 3000 	str.w	r3, [r9]
 8001076:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800107a:	4606      	mov	r6, r0
 800107c:	460c      	mov	r4, r1
 800107e:	b112      	cbz	r2, 8001086 <_printf_common+0x2a>
 8001080:	3301      	adds	r3, #1
 8001082:	f8c9 3000 	str.w	r3, [r9]
 8001086:	6823      	ldr	r3, [r4, #0]
 8001088:	0699      	lsls	r1, r3, #26
 800108a:	bf42      	ittt	mi
 800108c:	f8d9 3000 	ldrmi.w	r3, [r9]
 8001090:	3302      	addmi	r3, #2
 8001092:	f8c9 3000 	strmi.w	r3, [r9]
 8001096:	6825      	ldr	r5, [r4, #0]
 8001098:	f015 0506 	ands.w	r5, r5, #6
 800109c:	d107      	bne.n	80010ae <_printf_common+0x52>
 800109e:	f104 0a19 	add.w	sl, r4, #25
 80010a2:	68e3      	ldr	r3, [r4, #12]
 80010a4:	f8d9 2000 	ldr.w	r2, [r9]
 80010a8:	1a9b      	subs	r3, r3, r2
 80010aa:	42ab      	cmp	r3, r5
 80010ac:	dc28      	bgt.n	8001100 <_printf_common+0xa4>
 80010ae:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 80010b2:	6822      	ldr	r2, [r4, #0]
 80010b4:	3300      	adds	r3, #0
 80010b6:	bf18      	it	ne
 80010b8:	2301      	movne	r3, #1
 80010ba:	0692      	lsls	r2, r2, #26
 80010bc:	d42d      	bmi.n	800111a <_printf_common+0xbe>
 80010be:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80010c2:	4639      	mov	r1, r7
 80010c4:	4630      	mov	r0, r6
 80010c6:	47c0      	blx	r8
 80010c8:	3001      	adds	r0, #1
 80010ca:	d020      	beq.n	800110e <_printf_common+0xb2>
 80010cc:	6823      	ldr	r3, [r4, #0]
 80010ce:	68e5      	ldr	r5, [r4, #12]
 80010d0:	f8d9 2000 	ldr.w	r2, [r9]
 80010d4:	f003 0306 	and.w	r3, r3, #6
 80010d8:	2b04      	cmp	r3, #4
 80010da:	bf08      	it	eq
 80010dc:	1aad      	subeq	r5, r5, r2
 80010de:	68a3      	ldr	r3, [r4, #8]
 80010e0:	6922      	ldr	r2, [r4, #16]
 80010e2:	bf0c      	ite	eq
 80010e4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80010e8:	2500      	movne	r5, #0
 80010ea:	4293      	cmp	r3, r2
 80010ec:	bfc4      	itt	gt
 80010ee:	1a9b      	subgt	r3, r3, r2
 80010f0:	18ed      	addgt	r5, r5, r3
 80010f2:	f04f 0900 	mov.w	r9, #0
 80010f6:	341a      	adds	r4, #26
 80010f8:	454d      	cmp	r5, r9
 80010fa:	d11a      	bne.n	8001132 <_printf_common+0xd6>
 80010fc:	2000      	movs	r0, #0
 80010fe:	e008      	b.n	8001112 <_printf_common+0xb6>
 8001100:	2301      	movs	r3, #1
 8001102:	4652      	mov	r2, sl
 8001104:	4639      	mov	r1, r7
 8001106:	4630      	mov	r0, r6
 8001108:	47c0      	blx	r8
 800110a:	3001      	adds	r0, #1
 800110c:	d103      	bne.n	8001116 <_printf_common+0xba>
 800110e:	f04f 30ff 	mov.w	r0, #4294967295
 8001112:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001116:	3501      	adds	r5, #1
 8001118:	e7c3      	b.n	80010a2 <_printf_common+0x46>
 800111a:	18e1      	adds	r1, r4, r3
 800111c:	1c5a      	adds	r2, r3, #1
 800111e:	2030      	movs	r0, #48	; 0x30
 8001120:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8001124:	4422      	add	r2, r4
 8001126:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800112a:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800112e:	3302      	adds	r3, #2
 8001130:	e7c5      	b.n	80010be <_printf_common+0x62>
 8001132:	2301      	movs	r3, #1
 8001134:	4622      	mov	r2, r4
 8001136:	4639      	mov	r1, r7
 8001138:	4630      	mov	r0, r6
 800113a:	47c0      	blx	r8
 800113c:	3001      	adds	r0, #1
 800113e:	d0e6      	beq.n	800110e <_printf_common+0xb2>
 8001140:	f109 0901 	add.w	r9, r9, #1
 8001144:	e7d8      	b.n	80010f8 <_printf_common+0x9c>
	...

08001148 <_printf_i>:
 8001148:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800114c:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8001150:	460c      	mov	r4, r1
 8001152:	7e09      	ldrb	r1, [r1, #24]
 8001154:	b085      	sub	sp, #20
 8001156:	296e      	cmp	r1, #110	; 0x6e
 8001158:	4617      	mov	r7, r2
 800115a:	4606      	mov	r6, r0
 800115c:	4698      	mov	r8, r3
 800115e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8001160:	f000 80b3 	beq.w	80012ca <_printf_i+0x182>
 8001164:	d822      	bhi.n	80011ac <_printf_i+0x64>
 8001166:	2963      	cmp	r1, #99	; 0x63
 8001168:	d036      	beq.n	80011d8 <_printf_i+0x90>
 800116a:	d80a      	bhi.n	8001182 <_printf_i+0x3a>
 800116c:	2900      	cmp	r1, #0
 800116e:	f000 80b9 	beq.w	80012e4 <_printf_i+0x19c>
 8001172:	2958      	cmp	r1, #88	; 0x58
 8001174:	f000 8083 	beq.w	800127e <_printf_i+0x136>
 8001178:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800117c:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8001180:	e032      	b.n	80011e8 <_printf_i+0xa0>
 8001182:	2964      	cmp	r1, #100	; 0x64
 8001184:	d001      	beq.n	800118a <_printf_i+0x42>
 8001186:	2969      	cmp	r1, #105	; 0x69
 8001188:	d1f6      	bne.n	8001178 <_printf_i+0x30>
 800118a:	6820      	ldr	r0, [r4, #0]
 800118c:	6813      	ldr	r3, [r2, #0]
 800118e:	0605      	lsls	r5, r0, #24
 8001190:	f103 0104 	add.w	r1, r3, #4
 8001194:	d52a      	bpl.n	80011ec <_printf_i+0xa4>
 8001196:	681b      	ldr	r3, [r3, #0]
 8001198:	6011      	str	r1, [r2, #0]
 800119a:	2b00      	cmp	r3, #0
 800119c:	da03      	bge.n	80011a6 <_printf_i+0x5e>
 800119e:	222d      	movs	r2, #45	; 0x2d
 80011a0:	425b      	negs	r3, r3
 80011a2:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 80011a6:	486f      	ldr	r0, [pc, #444]	; (8001364 <_printf_i+0x21c>)
 80011a8:	220a      	movs	r2, #10
 80011aa:	e039      	b.n	8001220 <_printf_i+0xd8>
 80011ac:	2973      	cmp	r1, #115	; 0x73
 80011ae:	f000 809d 	beq.w	80012ec <_printf_i+0x1a4>
 80011b2:	d808      	bhi.n	80011c6 <_printf_i+0x7e>
 80011b4:	296f      	cmp	r1, #111	; 0x6f
 80011b6:	d020      	beq.n	80011fa <_printf_i+0xb2>
 80011b8:	2970      	cmp	r1, #112	; 0x70
 80011ba:	d1dd      	bne.n	8001178 <_printf_i+0x30>
 80011bc:	6823      	ldr	r3, [r4, #0]
 80011be:	f043 0320 	orr.w	r3, r3, #32
 80011c2:	6023      	str	r3, [r4, #0]
 80011c4:	e003      	b.n	80011ce <_printf_i+0x86>
 80011c6:	2975      	cmp	r1, #117	; 0x75
 80011c8:	d017      	beq.n	80011fa <_printf_i+0xb2>
 80011ca:	2978      	cmp	r1, #120	; 0x78
 80011cc:	d1d4      	bne.n	8001178 <_printf_i+0x30>
 80011ce:	2378      	movs	r3, #120	; 0x78
 80011d0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80011d4:	4864      	ldr	r0, [pc, #400]	; (8001368 <_printf_i+0x220>)
 80011d6:	e055      	b.n	8001284 <_printf_i+0x13c>
 80011d8:	6813      	ldr	r3, [r2, #0]
 80011da:	1d19      	adds	r1, r3, #4
 80011dc:	681b      	ldr	r3, [r3, #0]
 80011de:	6011      	str	r1, [r2, #0]
 80011e0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80011e4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80011e8:	2301      	movs	r3, #1
 80011ea:	e08c      	b.n	8001306 <_printf_i+0x1be>
 80011ec:	681b      	ldr	r3, [r3, #0]
 80011ee:	6011      	str	r1, [r2, #0]
 80011f0:	f010 0f40 	tst.w	r0, #64	; 0x40
 80011f4:	bf18      	it	ne
 80011f6:	b21b      	sxthne	r3, r3
 80011f8:	e7cf      	b.n	800119a <_printf_i+0x52>
 80011fa:	6813      	ldr	r3, [r2, #0]
 80011fc:	6825      	ldr	r5, [r4, #0]
 80011fe:	1d18      	adds	r0, r3, #4
 8001200:	6010      	str	r0, [r2, #0]
 8001202:	0628      	lsls	r0, r5, #24
 8001204:	d501      	bpl.n	800120a <_printf_i+0xc2>
 8001206:	681b      	ldr	r3, [r3, #0]
 8001208:	e002      	b.n	8001210 <_printf_i+0xc8>
 800120a:	0668      	lsls	r0, r5, #25
 800120c:	d5fb      	bpl.n	8001206 <_printf_i+0xbe>
 800120e:	881b      	ldrh	r3, [r3, #0]
 8001210:	4854      	ldr	r0, [pc, #336]	; (8001364 <_printf_i+0x21c>)
 8001212:	296f      	cmp	r1, #111	; 0x6f
 8001214:	bf14      	ite	ne
 8001216:	220a      	movne	r2, #10
 8001218:	2208      	moveq	r2, #8
 800121a:	2100      	movs	r1, #0
 800121c:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8001220:	6865      	ldr	r5, [r4, #4]
 8001222:	60a5      	str	r5, [r4, #8]
 8001224:	2d00      	cmp	r5, #0
 8001226:	f2c0 8095 	blt.w	8001354 <_printf_i+0x20c>
 800122a:	6821      	ldr	r1, [r4, #0]
 800122c:	f021 0104 	bic.w	r1, r1, #4
 8001230:	6021      	str	r1, [r4, #0]
 8001232:	2b00      	cmp	r3, #0
 8001234:	d13d      	bne.n	80012b2 <_printf_i+0x16a>
 8001236:	2d00      	cmp	r5, #0
 8001238:	f040 808e 	bne.w	8001358 <_printf_i+0x210>
 800123c:	4665      	mov	r5, ip
 800123e:	2a08      	cmp	r2, #8
 8001240:	d10b      	bne.n	800125a <_printf_i+0x112>
 8001242:	6823      	ldr	r3, [r4, #0]
 8001244:	07db      	lsls	r3, r3, #31
 8001246:	d508      	bpl.n	800125a <_printf_i+0x112>
 8001248:	6923      	ldr	r3, [r4, #16]
 800124a:	6862      	ldr	r2, [r4, #4]
 800124c:	429a      	cmp	r2, r3
 800124e:	bfde      	ittt	le
 8001250:	2330      	movle	r3, #48	; 0x30
 8001252:	f805 3c01 	strble.w	r3, [r5, #-1]
 8001256:	f105 35ff 	addle.w	r5, r5, #4294967295
 800125a:	ebac 0305 	sub.w	r3, ip, r5
 800125e:	6123      	str	r3, [r4, #16]
 8001260:	f8cd 8000 	str.w	r8, [sp]
 8001264:	463b      	mov	r3, r7
 8001266:	aa03      	add	r2, sp, #12
 8001268:	4621      	mov	r1, r4
 800126a:	4630      	mov	r0, r6
 800126c:	f7ff fef6 	bl	800105c <_printf_common>
 8001270:	3001      	adds	r0, #1
 8001272:	d14d      	bne.n	8001310 <_printf_i+0x1c8>
 8001274:	f04f 30ff 	mov.w	r0, #4294967295
 8001278:	b005      	add	sp, #20
 800127a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800127e:	4839      	ldr	r0, [pc, #228]	; (8001364 <_printf_i+0x21c>)
 8001280:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8001284:	6813      	ldr	r3, [r2, #0]
 8001286:	6821      	ldr	r1, [r4, #0]
 8001288:	1d1d      	adds	r5, r3, #4
 800128a:	681b      	ldr	r3, [r3, #0]
 800128c:	6015      	str	r5, [r2, #0]
 800128e:	060a      	lsls	r2, r1, #24
 8001290:	d50b      	bpl.n	80012aa <_printf_i+0x162>
 8001292:	07ca      	lsls	r2, r1, #31
 8001294:	bf44      	itt	mi
 8001296:	f041 0120 	orrmi.w	r1, r1, #32
 800129a:	6021      	strmi	r1, [r4, #0]
 800129c:	b91b      	cbnz	r3, 80012a6 <_printf_i+0x15e>
 800129e:	6822      	ldr	r2, [r4, #0]
 80012a0:	f022 0220 	bic.w	r2, r2, #32
 80012a4:	6022      	str	r2, [r4, #0]
 80012a6:	2210      	movs	r2, #16
 80012a8:	e7b7      	b.n	800121a <_printf_i+0xd2>
 80012aa:	064d      	lsls	r5, r1, #25
 80012ac:	bf48      	it	mi
 80012ae:	b29b      	uxthmi	r3, r3
 80012b0:	e7ef      	b.n	8001292 <_printf_i+0x14a>
 80012b2:	4665      	mov	r5, ip
 80012b4:	fbb3 f1f2 	udiv	r1, r3, r2
 80012b8:	fb02 3311 	mls	r3, r2, r1, r3
 80012bc:	5cc3      	ldrb	r3, [r0, r3]
 80012be:	f805 3d01 	strb.w	r3, [r5, #-1]!
 80012c2:	460b      	mov	r3, r1
 80012c4:	2900      	cmp	r1, #0
 80012c6:	d1f5      	bne.n	80012b4 <_printf_i+0x16c>
 80012c8:	e7b9      	b.n	800123e <_printf_i+0xf6>
 80012ca:	6813      	ldr	r3, [r2, #0]
 80012cc:	6825      	ldr	r5, [r4, #0]
 80012ce:	6961      	ldr	r1, [r4, #20]
 80012d0:	1d18      	adds	r0, r3, #4
 80012d2:	6010      	str	r0, [r2, #0]
 80012d4:	0628      	lsls	r0, r5, #24
 80012d6:	681b      	ldr	r3, [r3, #0]
 80012d8:	d501      	bpl.n	80012de <_printf_i+0x196>
 80012da:	6019      	str	r1, [r3, #0]
 80012dc:	e002      	b.n	80012e4 <_printf_i+0x19c>
 80012de:	066a      	lsls	r2, r5, #25
 80012e0:	d5fb      	bpl.n	80012da <_printf_i+0x192>
 80012e2:	8019      	strh	r1, [r3, #0]
 80012e4:	2300      	movs	r3, #0
 80012e6:	6123      	str	r3, [r4, #16]
 80012e8:	4665      	mov	r5, ip
 80012ea:	e7b9      	b.n	8001260 <_printf_i+0x118>
 80012ec:	6813      	ldr	r3, [r2, #0]
 80012ee:	1d19      	adds	r1, r3, #4
 80012f0:	6011      	str	r1, [r2, #0]
 80012f2:	681d      	ldr	r5, [r3, #0]
 80012f4:	6862      	ldr	r2, [r4, #4]
 80012f6:	2100      	movs	r1, #0
 80012f8:	4628      	mov	r0, r5
 80012fa:	f7fe ff79 	bl	80001f0 <memchr>
 80012fe:	b108      	cbz	r0, 8001304 <_printf_i+0x1bc>
 8001300:	1b40      	subs	r0, r0, r5
 8001302:	6060      	str	r0, [r4, #4]
 8001304:	6863      	ldr	r3, [r4, #4]
 8001306:	6123      	str	r3, [r4, #16]
 8001308:	2300      	movs	r3, #0
 800130a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800130e:	e7a7      	b.n	8001260 <_printf_i+0x118>
 8001310:	6923      	ldr	r3, [r4, #16]
 8001312:	462a      	mov	r2, r5
 8001314:	4639      	mov	r1, r7
 8001316:	4630      	mov	r0, r6
 8001318:	47c0      	blx	r8
 800131a:	3001      	adds	r0, #1
 800131c:	d0aa      	beq.n	8001274 <_printf_i+0x12c>
 800131e:	6823      	ldr	r3, [r4, #0]
 8001320:	079b      	lsls	r3, r3, #30
 8001322:	d413      	bmi.n	800134c <_printf_i+0x204>
 8001324:	68e0      	ldr	r0, [r4, #12]
 8001326:	9b03      	ldr	r3, [sp, #12]
 8001328:	4298      	cmp	r0, r3
 800132a:	bfb8      	it	lt
 800132c:	4618      	movlt	r0, r3
 800132e:	e7a3      	b.n	8001278 <_printf_i+0x130>
 8001330:	2301      	movs	r3, #1
 8001332:	464a      	mov	r2, r9
 8001334:	4639      	mov	r1, r7
 8001336:	4630      	mov	r0, r6
 8001338:	47c0      	blx	r8
 800133a:	3001      	adds	r0, #1
 800133c:	d09a      	beq.n	8001274 <_printf_i+0x12c>
 800133e:	3501      	adds	r5, #1
 8001340:	68e3      	ldr	r3, [r4, #12]
 8001342:	9a03      	ldr	r2, [sp, #12]
 8001344:	1a9b      	subs	r3, r3, r2
 8001346:	42ab      	cmp	r3, r5
 8001348:	dcf2      	bgt.n	8001330 <_printf_i+0x1e8>
 800134a:	e7eb      	b.n	8001324 <_printf_i+0x1dc>
 800134c:	2500      	movs	r5, #0
 800134e:	f104 0919 	add.w	r9, r4, #25
 8001352:	e7f5      	b.n	8001340 <_printf_i+0x1f8>
 8001354:	2b00      	cmp	r3, #0
 8001356:	d1ac      	bne.n	80012b2 <_printf_i+0x16a>
 8001358:	7803      	ldrb	r3, [r0, #0]
 800135a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800135e:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001362:	e76c      	b.n	800123e <_printf_i+0xf6>
 8001364:	080015fd 	.word	0x080015fd
 8001368:	0800160e 	.word	0x0800160e

0800136c <_sbrk_r>:
 800136c:	b538      	push	{r3, r4, r5, lr}
 800136e:	4c06      	ldr	r4, [pc, #24]	; (8001388 <_sbrk_r+0x1c>)
 8001370:	2300      	movs	r3, #0
 8001372:	4605      	mov	r5, r0
 8001374:	4608      	mov	r0, r1
 8001376:	6023      	str	r3, [r4, #0]
 8001378:	f7ff f8e6 	bl	8000548 <_sbrk>
 800137c:	1c43      	adds	r3, r0, #1
 800137e:	d102      	bne.n	8001386 <_sbrk_r+0x1a>
 8001380:	6823      	ldr	r3, [r4, #0]
 8001382:	b103      	cbz	r3, 8001386 <_sbrk_r+0x1a>
 8001384:	602b      	str	r3, [r5, #0]
 8001386:	bd38      	pop	{r3, r4, r5, pc}
 8001388:	2000008c 	.word	0x2000008c

0800138c <__sread>:
 800138c:	b510      	push	{r4, lr}
 800138e:	460c      	mov	r4, r1
 8001390:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001394:	f000 f896 	bl	80014c4 <_read_r>
 8001398:	2800      	cmp	r0, #0
 800139a:	bfab      	itete	ge
 800139c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800139e:	89a3      	ldrhlt	r3, [r4, #12]
 80013a0:	181b      	addge	r3, r3, r0
 80013a2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80013a6:	bfac      	ite	ge
 80013a8:	6563      	strge	r3, [r4, #84]	; 0x54
 80013aa:	81a3      	strhlt	r3, [r4, #12]
 80013ac:	bd10      	pop	{r4, pc}

080013ae <__swrite>:
 80013ae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80013b2:	461f      	mov	r7, r3
 80013b4:	898b      	ldrh	r3, [r1, #12]
 80013b6:	05db      	lsls	r3, r3, #23
 80013b8:	4605      	mov	r5, r0
 80013ba:	460c      	mov	r4, r1
 80013bc:	4616      	mov	r6, r2
 80013be:	d505      	bpl.n	80013cc <__swrite+0x1e>
 80013c0:	2302      	movs	r3, #2
 80013c2:	2200      	movs	r2, #0
 80013c4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013c8:	f000 f868 	bl	800149c <_lseek_r>
 80013cc:	89a3      	ldrh	r3, [r4, #12]
 80013ce:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80013d2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80013d6:	81a3      	strh	r3, [r4, #12]
 80013d8:	4632      	mov	r2, r6
 80013da:	463b      	mov	r3, r7
 80013dc:	4628      	mov	r0, r5
 80013de:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80013e2:	f000 b817 	b.w	8001414 <_write_r>

080013e6 <__sseek>:
 80013e6:	b510      	push	{r4, lr}
 80013e8:	460c      	mov	r4, r1
 80013ea:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013ee:	f000 f855 	bl	800149c <_lseek_r>
 80013f2:	1c43      	adds	r3, r0, #1
 80013f4:	89a3      	ldrh	r3, [r4, #12]
 80013f6:	bf15      	itete	ne
 80013f8:	6560      	strne	r0, [r4, #84]	; 0x54
 80013fa:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80013fe:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8001402:	81a3      	strheq	r3, [r4, #12]
 8001404:	bf18      	it	ne
 8001406:	81a3      	strhne	r3, [r4, #12]
 8001408:	bd10      	pop	{r4, pc}

0800140a <__sclose>:
 800140a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800140e:	f000 b813 	b.w	8001438 <_close_r>
	...

08001414 <_write_r>:
 8001414:	b538      	push	{r3, r4, r5, lr}
 8001416:	4c07      	ldr	r4, [pc, #28]	; (8001434 <_write_r+0x20>)
 8001418:	4605      	mov	r5, r0
 800141a:	4608      	mov	r0, r1
 800141c:	4611      	mov	r1, r2
 800141e:	2200      	movs	r2, #0
 8001420:	6022      	str	r2, [r4, #0]
 8001422:	461a      	mov	r2, r3
 8001424:	f7ff f83f 	bl	80004a6 <_write>
 8001428:	1c43      	adds	r3, r0, #1
 800142a:	d102      	bne.n	8001432 <_write_r+0x1e>
 800142c:	6823      	ldr	r3, [r4, #0]
 800142e:	b103      	cbz	r3, 8001432 <_write_r+0x1e>
 8001430:	602b      	str	r3, [r5, #0]
 8001432:	bd38      	pop	{r3, r4, r5, pc}
 8001434:	2000008c 	.word	0x2000008c

08001438 <_close_r>:
 8001438:	b538      	push	{r3, r4, r5, lr}
 800143a:	4c06      	ldr	r4, [pc, #24]	; (8001454 <_close_r+0x1c>)
 800143c:	2300      	movs	r3, #0
 800143e:	4605      	mov	r5, r0
 8001440:	4608      	mov	r0, r1
 8001442:	6023      	str	r3, [r4, #0]
 8001444:	f7ff f84b 	bl	80004de <_close>
 8001448:	1c43      	adds	r3, r0, #1
 800144a:	d102      	bne.n	8001452 <_close_r+0x1a>
 800144c:	6823      	ldr	r3, [r4, #0]
 800144e:	b103      	cbz	r3, 8001452 <_close_r+0x1a>
 8001450:	602b      	str	r3, [r5, #0]
 8001452:	bd38      	pop	{r3, r4, r5, pc}
 8001454:	2000008c 	.word	0x2000008c

08001458 <_fstat_r>:
 8001458:	b538      	push	{r3, r4, r5, lr}
 800145a:	4c07      	ldr	r4, [pc, #28]	; (8001478 <_fstat_r+0x20>)
 800145c:	2300      	movs	r3, #0
 800145e:	4605      	mov	r5, r0
 8001460:	4608      	mov	r0, r1
 8001462:	4611      	mov	r1, r2
 8001464:	6023      	str	r3, [r4, #0]
 8001466:	f7ff f846 	bl	80004f6 <_fstat>
 800146a:	1c43      	adds	r3, r0, #1
 800146c:	d102      	bne.n	8001474 <_fstat_r+0x1c>
 800146e:	6823      	ldr	r3, [r4, #0]
 8001470:	b103      	cbz	r3, 8001474 <_fstat_r+0x1c>
 8001472:	602b      	str	r3, [r5, #0]
 8001474:	bd38      	pop	{r3, r4, r5, pc}
 8001476:	bf00      	nop
 8001478:	2000008c 	.word	0x2000008c

0800147c <_isatty_r>:
 800147c:	b538      	push	{r3, r4, r5, lr}
 800147e:	4c06      	ldr	r4, [pc, #24]	; (8001498 <_isatty_r+0x1c>)
 8001480:	2300      	movs	r3, #0
 8001482:	4605      	mov	r5, r0
 8001484:	4608      	mov	r0, r1
 8001486:	6023      	str	r3, [r4, #0]
 8001488:	f7ff f845 	bl	8000516 <_isatty>
 800148c:	1c43      	adds	r3, r0, #1
 800148e:	d102      	bne.n	8001496 <_isatty_r+0x1a>
 8001490:	6823      	ldr	r3, [r4, #0]
 8001492:	b103      	cbz	r3, 8001496 <_isatty_r+0x1a>
 8001494:	602b      	str	r3, [r5, #0]
 8001496:	bd38      	pop	{r3, r4, r5, pc}
 8001498:	2000008c 	.word	0x2000008c

0800149c <_lseek_r>:
 800149c:	b538      	push	{r3, r4, r5, lr}
 800149e:	4c07      	ldr	r4, [pc, #28]	; (80014bc <_lseek_r+0x20>)
 80014a0:	4605      	mov	r5, r0
 80014a2:	4608      	mov	r0, r1
 80014a4:	4611      	mov	r1, r2
 80014a6:	2200      	movs	r2, #0
 80014a8:	6022      	str	r2, [r4, #0]
 80014aa:	461a      	mov	r2, r3
 80014ac:	f7ff f83e 	bl	800052c <_lseek>
 80014b0:	1c43      	adds	r3, r0, #1
 80014b2:	d102      	bne.n	80014ba <_lseek_r+0x1e>
 80014b4:	6823      	ldr	r3, [r4, #0]
 80014b6:	b103      	cbz	r3, 80014ba <_lseek_r+0x1e>
 80014b8:	602b      	str	r3, [r5, #0]
 80014ba:	bd38      	pop	{r3, r4, r5, pc}
 80014bc:	2000008c 	.word	0x2000008c

080014c0 <__malloc_lock>:
 80014c0:	4770      	bx	lr

080014c2 <__malloc_unlock>:
 80014c2:	4770      	bx	lr

080014c4 <_read_r>:
 80014c4:	b538      	push	{r3, r4, r5, lr}
 80014c6:	4c07      	ldr	r4, [pc, #28]	; (80014e4 <_read_r+0x20>)
 80014c8:	4605      	mov	r5, r0
 80014ca:	4608      	mov	r0, r1
 80014cc:	4611      	mov	r1, r2
 80014ce:	2200      	movs	r2, #0
 80014d0:	6022      	str	r2, [r4, #0]
 80014d2:	461a      	mov	r2, r3
 80014d4:	f7fe ffca 	bl	800046c <_read>
 80014d8:	1c43      	adds	r3, r0, #1
 80014da:	d102      	bne.n	80014e2 <_read_r+0x1e>
 80014dc:	6823      	ldr	r3, [r4, #0]
 80014de:	b103      	cbz	r3, 80014e2 <_read_r+0x1e>
 80014e0:	602b      	str	r3, [r5, #0]
 80014e2:	bd38      	pop	{r3, r4, r5, pc}
 80014e4:	2000008c 	.word	0x2000008c

080014e8 <_init>:
 80014e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014ea:	bf00      	nop
 80014ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014ee:	bc08      	pop	{r3}
 80014f0:	469e      	mov	lr, r3
 80014f2:	4770      	bx	lr

080014f4 <_fini>:
 80014f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014f6:	bf00      	nop
 80014f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014fa:	bc08      	pop	{r3}
 80014fc:	469e      	mov	lr, r3
 80014fe:	4770      	bx	lr
