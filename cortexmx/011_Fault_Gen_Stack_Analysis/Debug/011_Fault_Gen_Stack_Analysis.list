
011_Fault_Gen_Stack_Analysis.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001338  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000001c4  080014e8  080014e8  000114e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080016ac  080016ac  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  080016ac  080016ac  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  080016ac  080016ac  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080016ac  080016ac  000116ac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080016b0  080016b0  000116b0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  080016b4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000002c  20000064  08001718  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000090  08001718  00020090  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   000021ba  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 0000063c  00000000  00000000  0002224e  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000148  00000000  00000000  00022890  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000110  00000000  00000000  000229d8  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00002a8c  00000000  00000000  00022ae8  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00001323  00000000  00000000  00025574  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00009171  00000000  00000000  00026897  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0002fa08  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b54  00000000  00000000  0002fa84  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000064 	.word	0x20000064
 80001cc:	00000000 	.word	0x00000000
 80001d0:	080014d0 	.word	0x080014d0

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000068 	.word	0x20000068
 80001ec:	080014d0 	.word	0x080014d0

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <fun_divide>:
*/
#include<stdio.h>
#include<stdint.h>

int fun_divide(int x, int y)
{
 8000290:	b480      	push	{r7}
 8000292:	b083      	sub	sp, #12
 8000294:	af00      	add	r7, sp, #0
 8000296:	6078      	str	r0, [r7, #4]
 8000298:	6039      	str	r1, [r7, #0]
	return x/y;
 800029a:	687a      	ldr	r2, [r7, #4]
 800029c:	683b      	ldr	r3, [r7, #0]
 800029e:	fb92 f3f3 	sdiv	r3, r2, r3
}
 80002a2:	4618      	mov	r0, r3
 80002a4:	370c      	adds	r7, #12
 80002a6:	46bd      	mov	sp, r7
 80002a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002ac:	4770      	bx	lr
	...

080002b0 <main>:

int main(void)
{
 80002b0:	b580      	push	{r7, lr}
 80002b2:	b082      	sub	sp, #8
 80002b4:	af00      	add	r7, sp, #0
	// 1. Enable all configurable exceptions like usage fault, mem manage fault and bus fault
	uint32_t *pSHCSR = (uint32_t *)0xE000ED24;
 80002b6:	4b10      	ldr	r3, [pc, #64]	; (80002f8 <main+0x48>)
 80002b8:	607b      	str	r3, [r7, #4]

	*pSHCSR |= (1 << 16); // MemManage Fault
 80002ba:	687b      	ldr	r3, [r7, #4]
 80002bc:	681b      	ldr	r3, [r3, #0]
 80002be:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
 80002c2:	687b      	ldr	r3, [r7, #4]
 80002c4:	601a      	str	r2, [r3, #0]
	*pSHCSR |= (1 << 17); // Bus Fault
 80002c6:	687b      	ldr	r3, [r7, #4]
 80002c8:	681b      	ldr	r3, [r3, #0]
 80002ca:	f443 3200 	orr.w	r2, r3, #131072	; 0x20000
 80002ce:	687b      	ldr	r3, [r7, #4]
 80002d0:	601a      	str	r2, [r3, #0]
	*pSHCSR |= (1 << 18); // Usage Fault
 80002d2:	687b      	ldr	r3, [r7, #4]
 80002d4:	681b      	ldr	r3, [r3, #0]
 80002d6:	f443 2280 	orr.w	r2, r3, #262144	; 0x40000
 80002da:	687b      	ldr	r3, [r7, #4]
 80002dc:	601a      	str	r2, [r3, #0]

	// 2. Enable divide by zero trap
	uint32_t *pCCR = (uint32_t *)0xE000ED14;
 80002de:	4b07      	ldr	r3, [pc, #28]	; (80002fc <main+0x4c>)
 80002e0:	603b      	str	r3, [r7, #0]
	*pCCR |= (1 << 4);
 80002e2:	683b      	ldr	r3, [r7, #0]
 80002e4:	681b      	ldr	r3, [r3, #0]
 80002e6:	f043 0210 	orr.w	r2, r3, #16
 80002ea:	683b      	ldr	r3, [r7, #0]
 80002ec:	601a      	str	r2, [r3, #0]

	// Attempt to divide by zero
	fun_divide(10,0);
 80002ee:	2100      	movs	r1, #0
 80002f0:	200a      	movs	r0, #10
 80002f2:	f7ff ffcd 	bl	8000290 <fun_divide>

	for(;;);
 80002f6:	e7fe      	b.n	80002f6 <main+0x46>
 80002f8:	e000ed24 	.word	0xe000ed24
 80002fc:	e000ed14 	.word	0xe000ed14

08000300 <HardFault_Handler>:
}


// 2. Implement the fault handlers
void HardFault_Handler()
{
 8000300:	b580      	push	{r7, lr}
 8000302:	af00      	add	r7, sp, #0
	printf("Exception: Hard Fault\n");
 8000304:	4801      	ldr	r0, [pc, #4]	; (800030c <HardFault_Handler+0xc>)
 8000306:	f000 fa0f 	bl	8000728 <puts>
	while(1);
 800030a:	e7fe      	b.n	800030a <HardFault_Handler+0xa>
 800030c:	080014e8 	.word	0x080014e8

08000310 <MemManage_Handler>:
}

void MemManage_Handler()
{
 8000310:	b580      	push	{r7, lr}
 8000312:	af00      	add	r7, sp, #0
	printf("Exception: MemManage Fault\n");
 8000314:	4801      	ldr	r0, [pc, #4]	; (800031c <MemManage_Handler+0xc>)
 8000316:	f000 fa07 	bl	8000728 <puts>
	while(1);
 800031a:	e7fe      	b.n	800031a <MemManage_Handler+0xa>
 800031c:	08001500 	.word	0x08001500

08000320 <BusFault_Handler>:
}

void BusFault_Handler()
{
 8000320:	b580      	push	{r7, lr}
 8000322:	af00      	add	r7, sp, #0
	printf("Exception: Bus Fault\n");
 8000324:	4801      	ldr	r0, [pc, #4]	; (800032c <BusFault_Handler+0xc>)
 8000326:	f000 f9ff 	bl	8000728 <puts>
	while(1);
 800032a:	e7fe      	b.n	800032a <BusFault_Handler+0xa>
 800032c:	0800151c 	.word	0x0800151c

08000330 <UsageFault_Handler>:
__attribute__ ((naked)) void UsageFault_Handler(void)
{
	// Here we extracted the value of MSP which happens to be the
	// base address of the stack frame (Thread Mode Code) which got saved during the exception
	// from thread mode to handler mode
	__asm ("MRS r0, MSP");   // r0 = 1st argument of the callee function
 8000330:	f3ef 8008 	mrs	r0, MSP
	__asm ("B UsageFault_Handler_c");
 8000334:	f000 b802 	b.w	800033c <UsageFault_Handler_c>
}
 8000338:	bf00      	nop
	...

0800033c <UsageFault_Handler_c>:

void UsageFault_Handler_c(uint32_t *pBaseStackFrame) // r0 = 1st argument of the callee function
{
 800033c:	b580      	push	{r7, lr}
 800033e:	b084      	sub	sp, #16
 8000340:	af00      	add	r7, sp, #0
 8000342:	6078      	str	r0, [r7, #4]
	uint32_t *pUFSR = (uint32_t *)0xE000ED2A;
 8000344:	4b23      	ldr	r3, [pc, #140]	; (80003d4 <UsageFault_Handler_c+0x98>)
 8000346:	60fb      	str	r3, [r7, #12]
	printf("Exception: Usage Fault\n");
 8000348:	4823      	ldr	r0, [pc, #140]	; (80003d8 <UsageFault_Handler_c+0x9c>)
 800034a:	f000 f9ed 	bl	8000728 <puts>
	printf("UFSR = %lx\n", (*pUFSR) & 0xFFFF);
 800034e:	68fb      	ldr	r3, [r7, #12]
 8000350:	681b      	ldr	r3, [r3, #0]
 8000352:	b29b      	uxth	r3, r3
 8000354:	4619      	mov	r1, r3
 8000356:	4821      	ldr	r0, [pc, #132]	; (80003dc <UsageFault_Handler_c+0xa0>)
 8000358:	f000 f972 	bl	8000640 <iprintf>
	printf("pBaseStackFrame = %p\n", pBaseStackFrame);
 800035c:	6879      	ldr	r1, [r7, #4]
 800035e:	4820      	ldr	r0, [pc, #128]	; (80003e0 <UsageFault_Handler_c+0xa4>)
 8000360:	f000 f96e 	bl	8000640 <iprintf>
	printf("Value of r0 = %lx\n", pBaseStackFrame[0]);
 8000364:	687b      	ldr	r3, [r7, #4]
 8000366:	681b      	ldr	r3, [r3, #0]
 8000368:	4619      	mov	r1, r3
 800036a:	481e      	ldr	r0, [pc, #120]	; (80003e4 <UsageFault_Handler_c+0xa8>)
 800036c:	f000 f968 	bl	8000640 <iprintf>
	printf("Value of r1 = %lx\n", pBaseStackFrame[1]);
 8000370:	687b      	ldr	r3, [r7, #4]
 8000372:	3304      	adds	r3, #4
 8000374:	681b      	ldr	r3, [r3, #0]
 8000376:	4619      	mov	r1, r3
 8000378:	481b      	ldr	r0, [pc, #108]	; (80003e8 <UsageFault_Handler_c+0xac>)
 800037a:	f000 f961 	bl	8000640 <iprintf>
	printf("Value of r2 = %lx\n", pBaseStackFrame[2]);
 800037e:	687b      	ldr	r3, [r7, #4]
 8000380:	3308      	adds	r3, #8
 8000382:	681b      	ldr	r3, [r3, #0]
 8000384:	4619      	mov	r1, r3
 8000386:	4819      	ldr	r0, [pc, #100]	; (80003ec <UsageFault_Handler_c+0xb0>)
 8000388:	f000 f95a 	bl	8000640 <iprintf>
	printf("Value of r3 = %lx\n", pBaseStackFrame[3]);
 800038c:	687b      	ldr	r3, [r7, #4]
 800038e:	330c      	adds	r3, #12
 8000390:	681b      	ldr	r3, [r3, #0]
 8000392:	4619      	mov	r1, r3
 8000394:	4816      	ldr	r0, [pc, #88]	; (80003f0 <UsageFault_Handler_c+0xb4>)
 8000396:	f000 f953 	bl	8000640 <iprintf>
	printf("Value of r12 = %lx\n", pBaseStackFrame[4]);
 800039a:	687b      	ldr	r3, [r7, #4]
 800039c:	3310      	adds	r3, #16
 800039e:	681b      	ldr	r3, [r3, #0]
 80003a0:	4619      	mov	r1, r3
 80003a2:	4814      	ldr	r0, [pc, #80]	; (80003f4 <UsageFault_Handler_c+0xb8>)
 80003a4:	f000 f94c 	bl	8000640 <iprintf>
	printf("Value of LR = %lx\n", pBaseStackFrame[5]);
 80003a8:	687b      	ldr	r3, [r7, #4]
 80003aa:	3314      	adds	r3, #20
 80003ac:	681b      	ldr	r3, [r3, #0]
 80003ae:	4619      	mov	r1, r3
 80003b0:	4811      	ldr	r0, [pc, #68]	; (80003f8 <UsageFault_Handler_c+0xbc>)
 80003b2:	f000 f945 	bl	8000640 <iprintf>
	printf("Value of PC = %lx\n", pBaseStackFrame[6]);
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	3318      	adds	r3, #24
 80003ba:	681b      	ldr	r3, [r3, #0]
 80003bc:	4619      	mov	r1, r3
 80003be:	480f      	ldr	r0, [pc, #60]	; (80003fc <UsageFault_Handler_c+0xc0>)
 80003c0:	f000 f93e 	bl	8000640 <iprintf>
	printf("Value of XPSR = %lx\n", pBaseStackFrame[7]);
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	331c      	adds	r3, #28
 80003c8:	681b      	ldr	r3, [r3, #0]
 80003ca:	4619      	mov	r1, r3
 80003cc:	480c      	ldr	r0, [pc, #48]	; (8000400 <UsageFault_Handler_c+0xc4>)
 80003ce:	f000 f937 	bl	8000640 <iprintf>
	while(1);
 80003d2:	e7fe      	b.n	80003d2 <UsageFault_Handler_c+0x96>
 80003d4:	e000ed2a 	.word	0xe000ed2a
 80003d8:	08001534 	.word	0x08001534
 80003dc:	0800154c 	.word	0x0800154c
 80003e0:	08001558 	.word	0x08001558
 80003e4:	08001570 	.word	0x08001570
 80003e8:	08001584 	.word	0x08001584
 80003ec:	08001598 	.word	0x08001598
 80003f0:	080015ac 	.word	0x080015ac
 80003f4:	080015c0 	.word	0x080015c0
 80003f8:	080015d4 	.word	0x080015d4
 80003fc:	080015e8 	.word	0x080015e8
 8000400:	080015fc 	.word	0x080015fc

08000404 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 8000404:	b480      	push	{r7}
 8000406:	b083      	sub	sp, #12
 8000408:	af00      	add	r7, sp, #0
 800040a:	4603      	mov	r3, r0
 800040c:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 800040e:	4b0f      	ldr	r3, [pc, #60]	; (800044c <ITM_SendChar+0x48>)
 8000410:	681b      	ldr	r3, [r3, #0]
 8000412:	4a0e      	ldr	r2, [pc, #56]	; (800044c <ITM_SendChar+0x48>)
 8000414:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000418:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 800041a:	4b0d      	ldr	r3, [pc, #52]	; (8000450 <ITM_SendChar+0x4c>)
 800041c:	681b      	ldr	r3, [r3, #0]
 800041e:	4a0c      	ldr	r2, [pc, #48]	; (8000450 <ITM_SendChar+0x4c>)
 8000420:	f043 0301 	orr.w	r3, r3, #1
 8000424:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 8000426:	bf00      	nop
 8000428:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 800042c:	681b      	ldr	r3, [r3, #0]
 800042e:	f003 0301 	and.w	r3, r3, #1
 8000432:	2b00      	cmp	r3, #0
 8000434:	d0f8      	beq.n	8000428 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 8000436:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 800043a:	79fb      	ldrb	r3, [r7, #7]
 800043c:	6013      	str	r3, [r2, #0]
}
 800043e:	bf00      	nop
 8000440:	370c      	adds	r7, #12
 8000442:	46bd      	mov	sp, r7
 8000444:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000448:	4770      	bx	lr
 800044a:	bf00      	nop
 800044c:	e000edfc 	.word	0xe000edfc
 8000450:	e0000e00 	.word	0xe0000e00

08000454 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000454:	b580      	push	{r7, lr}
 8000456:	b086      	sub	sp, #24
 8000458:	af00      	add	r7, sp, #0
 800045a:	60f8      	str	r0, [r7, #12]
 800045c:	60b9      	str	r1, [r7, #8]
 800045e:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000460:	2300      	movs	r3, #0
 8000462:	617b      	str	r3, [r7, #20]
 8000464:	e00a      	b.n	800047c <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8000466:	f3af 8000 	nop.w
 800046a:	4601      	mov	r1, r0
 800046c:	68bb      	ldr	r3, [r7, #8]
 800046e:	1c5a      	adds	r2, r3, #1
 8000470:	60ba      	str	r2, [r7, #8]
 8000472:	b2ca      	uxtb	r2, r1
 8000474:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000476:	697b      	ldr	r3, [r7, #20]
 8000478:	3301      	adds	r3, #1
 800047a:	617b      	str	r3, [r7, #20]
 800047c:	697a      	ldr	r2, [r7, #20]
 800047e:	687b      	ldr	r3, [r7, #4]
 8000480:	429a      	cmp	r2, r3
 8000482:	dbf0      	blt.n	8000466 <_read+0x12>
	}

return len;
 8000484:	687b      	ldr	r3, [r7, #4]
}
 8000486:	4618      	mov	r0, r3
 8000488:	3718      	adds	r7, #24
 800048a:	46bd      	mov	sp, r7
 800048c:	bd80      	pop	{r7, pc}

0800048e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800048e:	b580      	push	{r7, lr}
 8000490:	b086      	sub	sp, #24
 8000492:	af00      	add	r7, sp, #0
 8000494:	60f8      	str	r0, [r7, #12]
 8000496:	60b9      	str	r1, [r7, #8]
 8000498:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800049a:	2300      	movs	r3, #0
 800049c:	617b      	str	r3, [r7, #20]
 800049e:	e009      	b.n	80004b4 <_write+0x26>
	{
		//__io_putchar(*ptr++);
	    ITM_SendChar(*ptr++);
 80004a0:	68bb      	ldr	r3, [r7, #8]
 80004a2:	1c5a      	adds	r2, r3, #1
 80004a4:	60ba      	str	r2, [r7, #8]
 80004a6:	781b      	ldrb	r3, [r3, #0]
 80004a8:	4618      	mov	r0, r3
 80004aa:	f7ff ffab 	bl	8000404 <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80004ae:	697b      	ldr	r3, [r7, #20]
 80004b0:	3301      	adds	r3, #1
 80004b2:	617b      	str	r3, [r7, #20]
 80004b4:	697a      	ldr	r2, [r7, #20]
 80004b6:	687b      	ldr	r3, [r7, #4]
 80004b8:	429a      	cmp	r2, r3
 80004ba:	dbf1      	blt.n	80004a0 <_write+0x12>

	}
	return len;
 80004bc:	687b      	ldr	r3, [r7, #4]
}
 80004be:	4618      	mov	r0, r3
 80004c0:	3718      	adds	r7, #24
 80004c2:	46bd      	mov	sp, r7
 80004c4:	bd80      	pop	{r7, pc}

080004c6 <_close>:

int _close(int file)
{
 80004c6:	b480      	push	{r7}
 80004c8:	b083      	sub	sp, #12
 80004ca:	af00      	add	r7, sp, #0
 80004cc:	6078      	str	r0, [r7, #4]
	return -1;
 80004ce:	f04f 33ff 	mov.w	r3, #4294967295
}
 80004d2:	4618      	mov	r0, r3
 80004d4:	370c      	adds	r7, #12
 80004d6:	46bd      	mov	sp, r7
 80004d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004dc:	4770      	bx	lr

080004de <_fstat>:


int _fstat(int file, struct stat *st)
{
 80004de:	b480      	push	{r7}
 80004e0:	b083      	sub	sp, #12
 80004e2:	af00      	add	r7, sp, #0
 80004e4:	6078      	str	r0, [r7, #4]
 80004e6:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80004e8:	683b      	ldr	r3, [r7, #0]
 80004ea:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80004ee:	605a      	str	r2, [r3, #4]
	return 0;
 80004f0:	2300      	movs	r3, #0
}
 80004f2:	4618      	mov	r0, r3
 80004f4:	370c      	adds	r7, #12
 80004f6:	46bd      	mov	sp, r7
 80004f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004fc:	4770      	bx	lr

080004fe <_isatty>:

int _isatty(int file)
{
 80004fe:	b480      	push	{r7}
 8000500:	b083      	sub	sp, #12
 8000502:	af00      	add	r7, sp, #0
 8000504:	6078      	str	r0, [r7, #4]
	return 1;
 8000506:	2301      	movs	r3, #1
}
 8000508:	4618      	mov	r0, r3
 800050a:	370c      	adds	r7, #12
 800050c:	46bd      	mov	sp, r7
 800050e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000512:	4770      	bx	lr

08000514 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000514:	b480      	push	{r7}
 8000516:	b085      	sub	sp, #20
 8000518:	af00      	add	r7, sp, #0
 800051a:	60f8      	str	r0, [r7, #12]
 800051c:	60b9      	str	r1, [r7, #8]
 800051e:	607a      	str	r2, [r7, #4]
	return 0;
 8000520:	2300      	movs	r3, #0
}
 8000522:	4618      	mov	r0, r3
 8000524:	3714      	adds	r7, #20
 8000526:	46bd      	mov	sp, r7
 8000528:	f85d 7b04 	ldr.w	r7, [sp], #4
 800052c:	4770      	bx	lr
	...

08000530 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8000530:	b580      	push	{r7, lr}
 8000532:	b084      	sub	sp, #16
 8000534:	af00      	add	r7, sp, #0
 8000536:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8000538:	4b11      	ldr	r3, [pc, #68]	; (8000580 <_sbrk+0x50>)
 800053a:	681b      	ldr	r3, [r3, #0]
 800053c:	2b00      	cmp	r3, #0
 800053e:	d102      	bne.n	8000546 <_sbrk+0x16>
		heap_end = &end;
 8000540:	4b0f      	ldr	r3, [pc, #60]	; (8000580 <_sbrk+0x50>)
 8000542:	4a10      	ldr	r2, [pc, #64]	; (8000584 <_sbrk+0x54>)
 8000544:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 8000546:	4b0e      	ldr	r3, [pc, #56]	; (8000580 <_sbrk+0x50>)
 8000548:	681b      	ldr	r3, [r3, #0]
 800054a:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 800054c:	4b0c      	ldr	r3, [pc, #48]	; (8000580 <_sbrk+0x50>)
 800054e:	681a      	ldr	r2, [r3, #0]
 8000550:	687b      	ldr	r3, [r7, #4]
 8000552:	4413      	add	r3, r2
 8000554:	466a      	mov	r2, sp
 8000556:	4293      	cmp	r3, r2
 8000558:	d907      	bls.n	800056a <_sbrk+0x3a>
	{
		errno = ENOMEM;
 800055a:	f000 f83f 	bl	80005dc <__errno>
 800055e:	4602      	mov	r2, r0
 8000560:	230c      	movs	r3, #12
 8000562:	6013      	str	r3, [r2, #0]
		return (caddr_t) -1;
 8000564:	f04f 33ff 	mov.w	r3, #4294967295
 8000568:	e006      	b.n	8000578 <_sbrk+0x48>
	}

	heap_end += incr;
 800056a:	4b05      	ldr	r3, [pc, #20]	; (8000580 <_sbrk+0x50>)
 800056c:	681a      	ldr	r2, [r3, #0]
 800056e:	687b      	ldr	r3, [r7, #4]
 8000570:	4413      	add	r3, r2
 8000572:	4a03      	ldr	r2, [pc, #12]	; (8000580 <_sbrk+0x50>)
 8000574:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
 8000576:	68fb      	ldr	r3, [r7, #12]
}
 8000578:	4618      	mov	r0, r3
 800057a:	3710      	adds	r7, #16
 800057c:	46bd      	mov	sp, r7
 800057e:	bd80      	pop	{r7, pc}
 8000580:	20000080 	.word	0x20000080
 8000584:	20000090 	.word	0x20000090

08000588 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000588:	480d      	ldr	r0, [pc, #52]	; (80005c0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800058a:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */

  ldr r0, =_sdata
 800058c:	480d      	ldr	r0, [pc, #52]	; (80005c4 <LoopForever+0x6>)
  ldr r1, =_edata
 800058e:	490e      	ldr	r1, [pc, #56]	; (80005c8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000590:	4a0e      	ldr	r2, [pc, #56]	; (80005cc <LoopForever+0xe>)
  movs r3, #0
 8000592:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000594:	e002      	b.n	800059c <LoopCopyDataInit>

08000596 <CopyDataInit>:

CopyDataInit:


  ldr r4, [r2, r3]
 8000596:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000598:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800059a:	3304      	adds	r3, #4

0800059c <LoopCopyDataInit>:

LoopCopyDataInit:


  adds r4, r0, r3
 800059c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800059e:	428c      	cmp	r4, r1



  bcc CopyDataInit
 80005a0:	d3f9      	bcc.n	8000596 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80005a2:	4a0b      	ldr	r2, [pc, #44]	; (80005d0 <LoopForever+0x12>)
  ldr r4, =_ebss
 80005a4:	4c0b      	ldr	r4, [pc, #44]	; (80005d4 <LoopForever+0x16>)
  movs r3, #0
 80005a6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80005a8:	e001      	b.n	80005ae <LoopFillZerobss>

080005aa <FillZerobss>:

FillZerobss:

  str  r3, [r2]
 80005aa:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80005ac:	3204      	adds	r2, #4

080005ae <LoopFillZerobss>:

LoopFillZerobss:

  cmp r2, r4
 80005ae:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80005b0:	d3fb      	bcc.n	80005aa <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80005b2:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 80005b6:	f000 f817 	bl	80005e8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80005ba:	f7ff fe79 	bl	80002b0 <main>

080005be <LoopForever>:

LoopForever:
    b LoopForever
 80005be:	e7fe      	b.n	80005be <LoopForever>
  ldr   r0, =_estack
 80005c0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80005c4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80005c8:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 80005cc:	080016b4 	.word	0x080016b4
  ldr r2, =_sbss
 80005d0:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 80005d4:	20000090 	.word	0x20000090

080005d8 <ADC_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80005d8:	e7fe      	b.n	80005d8 <ADC_IRQHandler>
	...

080005dc <__errno>:
 80005dc:	4b01      	ldr	r3, [pc, #4]	; (80005e4 <__errno+0x8>)
 80005de:	6818      	ldr	r0, [r3, #0]
 80005e0:	4770      	bx	lr
 80005e2:	bf00      	nop
 80005e4:	20000000 	.word	0x20000000

080005e8 <__libc_init_array>:
 80005e8:	b570      	push	{r4, r5, r6, lr}
 80005ea:	4e0d      	ldr	r6, [pc, #52]	; (8000620 <__libc_init_array+0x38>)
 80005ec:	4c0d      	ldr	r4, [pc, #52]	; (8000624 <__libc_init_array+0x3c>)
 80005ee:	1ba4      	subs	r4, r4, r6
 80005f0:	10a4      	asrs	r4, r4, #2
 80005f2:	2500      	movs	r5, #0
 80005f4:	42a5      	cmp	r5, r4
 80005f6:	d109      	bne.n	800060c <__libc_init_array+0x24>
 80005f8:	4e0b      	ldr	r6, [pc, #44]	; (8000628 <__libc_init_array+0x40>)
 80005fa:	4c0c      	ldr	r4, [pc, #48]	; (800062c <__libc_init_array+0x44>)
 80005fc:	f000 ff68 	bl	80014d0 <_init>
 8000600:	1ba4      	subs	r4, r4, r6
 8000602:	10a4      	asrs	r4, r4, #2
 8000604:	2500      	movs	r5, #0
 8000606:	42a5      	cmp	r5, r4
 8000608:	d105      	bne.n	8000616 <__libc_init_array+0x2e>
 800060a:	bd70      	pop	{r4, r5, r6, pc}
 800060c:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000610:	4798      	blx	r3
 8000612:	3501      	adds	r5, #1
 8000614:	e7ee      	b.n	80005f4 <__libc_init_array+0xc>
 8000616:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800061a:	4798      	blx	r3
 800061c:	3501      	adds	r5, #1
 800061e:	e7f2      	b.n	8000606 <__libc_init_array+0x1e>
 8000620:	080016ac 	.word	0x080016ac
 8000624:	080016ac 	.word	0x080016ac
 8000628:	080016ac 	.word	0x080016ac
 800062c:	080016b0 	.word	0x080016b0

08000630 <memset>:
 8000630:	4402      	add	r2, r0
 8000632:	4603      	mov	r3, r0
 8000634:	4293      	cmp	r3, r2
 8000636:	d100      	bne.n	800063a <memset+0xa>
 8000638:	4770      	bx	lr
 800063a:	f803 1b01 	strb.w	r1, [r3], #1
 800063e:	e7f9      	b.n	8000634 <memset+0x4>

08000640 <iprintf>:
 8000640:	b40f      	push	{r0, r1, r2, r3}
 8000642:	4b0a      	ldr	r3, [pc, #40]	; (800066c <iprintf+0x2c>)
 8000644:	b513      	push	{r0, r1, r4, lr}
 8000646:	681c      	ldr	r4, [r3, #0]
 8000648:	b124      	cbz	r4, 8000654 <iprintf+0x14>
 800064a:	69a3      	ldr	r3, [r4, #24]
 800064c:	b913      	cbnz	r3, 8000654 <iprintf+0x14>
 800064e:	4620      	mov	r0, r4
 8000650:	f000 fa22 	bl	8000a98 <__sinit>
 8000654:	ab05      	add	r3, sp, #20
 8000656:	9a04      	ldr	r2, [sp, #16]
 8000658:	68a1      	ldr	r1, [r4, #8]
 800065a:	9301      	str	r3, [sp, #4]
 800065c:	4620      	mov	r0, r4
 800065e:	f000 fbdb 	bl	8000e18 <_vfiprintf_r>
 8000662:	b002      	add	sp, #8
 8000664:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000668:	b004      	add	sp, #16
 800066a:	4770      	bx	lr
 800066c:	20000000 	.word	0x20000000

08000670 <_puts_r>:
 8000670:	b570      	push	{r4, r5, r6, lr}
 8000672:	460e      	mov	r6, r1
 8000674:	4605      	mov	r5, r0
 8000676:	b118      	cbz	r0, 8000680 <_puts_r+0x10>
 8000678:	6983      	ldr	r3, [r0, #24]
 800067a:	b90b      	cbnz	r3, 8000680 <_puts_r+0x10>
 800067c:	f000 fa0c 	bl	8000a98 <__sinit>
 8000680:	69ab      	ldr	r3, [r5, #24]
 8000682:	68ac      	ldr	r4, [r5, #8]
 8000684:	b913      	cbnz	r3, 800068c <_puts_r+0x1c>
 8000686:	4628      	mov	r0, r5
 8000688:	f000 fa06 	bl	8000a98 <__sinit>
 800068c:	4b23      	ldr	r3, [pc, #140]	; (800071c <_puts_r+0xac>)
 800068e:	429c      	cmp	r4, r3
 8000690:	d117      	bne.n	80006c2 <_puts_r+0x52>
 8000692:	686c      	ldr	r4, [r5, #4]
 8000694:	89a3      	ldrh	r3, [r4, #12]
 8000696:	071b      	lsls	r3, r3, #28
 8000698:	d51d      	bpl.n	80006d6 <_puts_r+0x66>
 800069a:	6923      	ldr	r3, [r4, #16]
 800069c:	b1db      	cbz	r3, 80006d6 <_puts_r+0x66>
 800069e:	3e01      	subs	r6, #1
 80006a0:	68a3      	ldr	r3, [r4, #8]
 80006a2:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80006a6:	3b01      	subs	r3, #1
 80006a8:	60a3      	str	r3, [r4, #8]
 80006aa:	b9e9      	cbnz	r1, 80006e8 <_puts_r+0x78>
 80006ac:	2b00      	cmp	r3, #0
 80006ae:	da2e      	bge.n	800070e <_puts_r+0x9e>
 80006b0:	4622      	mov	r2, r4
 80006b2:	210a      	movs	r1, #10
 80006b4:	4628      	mov	r0, r5
 80006b6:	f000 f83f 	bl	8000738 <__swbuf_r>
 80006ba:	3001      	adds	r0, #1
 80006bc:	d011      	beq.n	80006e2 <_puts_r+0x72>
 80006be:	200a      	movs	r0, #10
 80006c0:	e011      	b.n	80006e6 <_puts_r+0x76>
 80006c2:	4b17      	ldr	r3, [pc, #92]	; (8000720 <_puts_r+0xb0>)
 80006c4:	429c      	cmp	r4, r3
 80006c6:	d101      	bne.n	80006cc <_puts_r+0x5c>
 80006c8:	68ac      	ldr	r4, [r5, #8]
 80006ca:	e7e3      	b.n	8000694 <_puts_r+0x24>
 80006cc:	4b15      	ldr	r3, [pc, #84]	; (8000724 <_puts_r+0xb4>)
 80006ce:	429c      	cmp	r4, r3
 80006d0:	bf08      	it	eq
 80006d2:	68ec      	ldreq	r4, [r5, #12]
 80006d4:	e7de      	b.n	8000694 <_puts_r+0x24>
 80006d6:	4621      	mov	r1, r4
 80006d8:	4628      	mov	r0, r5
 80006da:	f000 f87f 	bl	80007dc <__swsetup_r>
 80006de:	2800      	cmp	r0, #0
 80006e0:	d0dd      	beq.n	800069e <_puts_r+0x2e>
 80006e2:	f04f 30ff 	mov.w	r0, #4294967295
 80006e6:	bd70      	pop	{r4, r5, r6, pc}
 80006e8:	2b00      	cmp	r3, #0
 80006ea:	da04      	bge.n	80006f6 <_puts_r+0x86>
 80006ec:	69a2      	ldr	r2, [r4, #24]
 80006ee:	429a      	cmp	r2, r3
 80006f0:	dc06      	bgt.n	8000700 <_puts_r+0x90>
 80006f2:	290a      	cmp	r1, #10
 80006f4:	d004      	beq.n	8000700 <_puts_r+0x90>
 80006f6:	6823      	ldr	r3, [r4, #0]
 80006f8:	1c5a      	adds	r2, r3, #1
 80006fa:	6022      	str	r2, [r4, #0]
 80006fc:	7019      	strb	r1, [r3, #0]
 80006fe:	e7cf      	b.n	80006a0 <_puts_r+0x30>
 8000700:	4622      	mov	r2, r4
 8000702:	4628      	mov	r0, r5
 8000704:	f000 f818 	bl	8000738 <__swbuf_r>
 8000708:	3001      	adds	r0, #1
 800070a:	d1c9      	bne.n	80006a0 <_puts_r+0x30>
 800070c:	e7e9      	b.n	80006e2 <_puts_r+0x72>
 800070e:	6823      	ldr	r3, [r4, #0]
 8000710:	200a      	movs	r0, #10
 8000712:	1c5a      	adds	r2, r3, #1
 8000714:	6022      	str	r2, [r4, #0]
 8000716:	7018      	strb	r0, [r3, #0]
 8000718:	e7e5      	b.n	80006e6 <_puts_r+0x76>
 800071a:	bf00      	nop
 800071c:	08001638 	.word	0x08001638
 8000720:	08001658 	.word	0x08001658
 8000724:	08001618 	.word	0x08001618

08000728 <puts>:
 8000728:	4b02      	ldr	r3, [pc, #8]	; (8000734 <puts+0xc>)
 800072a:	4601      	mov	r1, r0
 800072c:	6818      	ldr	r0, [r3, #0]
 800072e:	f7ff bf9f 	b.w	8000670 <_puts_r>
 8000732:	bf00      	nop
 8000734:	20000000 	.word	0x20000000

08000738 <__swbuf_r>:
 8000738:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800073a:	460e      	mov	r6, r1
 800073c:	4614      	mov	r4, r2
 800073e:	4605      	mov	r5, r0
 8000740:	b118      	cbz	r0, 800074a <__swbuf_r+0x12>
 8000742:	6983      	ldr	r3, [r0, #24]
 8000744:	b90b      	cbnz	r3, 800074a <__swbuf_r+0x12>
 8000746:	f000 f9a7 	bl	8000a98 <__sinit>
 800074a:	4b21      	ldr	r3, [pc, #132]	; (80007d0 <__swbuf_r+0x98>)
 800074c:	429c      	cmp	r4, r3
 800074e:	d12a      	bne.n	80007a6 <__swbuf_r+0x6e>
 8000750:	686c      	ldr	r4, [r5, #4]
 8000752:	69a3      	ldr	r3, [r4, #24]
 8000754:	60a3      	str	r3, [r4, #8]
 8000756:	89a3      	ldrh	r3, [r4, #12]
 8000758:	071a      	lsls	r2, r3, #28
 800075a:	d52e      	bpl.n	80007ba <__swbuf_r+0x82>
 800075c:	6923      	ldr	r3, [r4, #16]
 800075e:	b363      	cbz	r3, 80007ba <__swbuf_r+0x82>
 8000760:	6923      	ldr	r3, [r4, #16]
 8000762:	6820      	ldr	r0, [r4, #0]
 8000764:	1ac0      	subs	r0, r0, r3
 8000766:	6963      	ldr	r3, [r4, #20]
 8000768:	b2f6      	uxtb	r6, r6
 800076a:	4283      	cmp	r3, r0
 800076c:	4637      	mov	r7, r6
 800076e:	dc04      	bgt.n	800077a <__swbuf_r+0x42>
 8000770:	4621      	mov	r1, r4
 8000772:	4628      	mov	r0, r5
 8000774:	f000 f926 	bl	80009c4 <_fflush_r>
 8000778:	bb28      	cbnz	r0, 80007c6 <__swbuf_r+0x8e>
 800077a:	68a3      	ldr	r3, [r4, #8]
 800077c:	3b01      	subs	r3, #1
 800077e:	60a3      	str	r3, [r4, #8]
 8000780:	6823      	ldr	r3, [r4, #0]
 8000782:	1c5a      	adds	r2, r3, #1
 8000784:	6022      	str	r2, [r4, #0]
 8000786:	701e      	strb	r6, [r3, #0]
 8000788:	6963      	ldr	r3, [r4, #20]
 800078a:	3001      	adds	r0, #1
 800078c:	4283      	cmp	r3, r0
 800078e:	d004      	beq.n	800079a <__swbuf_r+0x62>
 8000790:	89a3      	ldrh	r3, [r4, #12]
 8000792:	07db      	lsls	r3, r3, #31
 8000794:	d519      	bpl.n	80007ca <__swbuf_r+0x92>
 8000796:	2e0a      	cmp	r6, #10
 8000798:	d117      	bne.n	80007ca <__swbuf_r+0x92>
 800079a:	4621      	mov	r1, r4
 800079c:	4628      	mov	r0, r5
 800079e:	f000 f911 	bl	80009c4 <_fflush_r>
 80007a2:	b190      	cbz	r0, 80007ca <__swbuf_r+0x92>
 80007a4:	e00f      	b.n	80007c6 <__swbuf_r+0x8e>
 80007a6:	4b0b      	ldr	r3, [pc, #44]	; (80007d4 <__swbuf_r+0x9c>)
 80007a8:	429c      	cmp	r4, r3
 80007aa:	d101      	bne.n	80007b0 <__swbuf_r+0x78>
 80007ac:	68ac      	ldr	r4, [r5, #8]
 80007ae:	e7d0      	b.n	8000752 <__swbuf_r+0x1a>
 80007b0:	4b09      	ldr	r3, [pc, #36]	; (80007d8 <__swbuf_r+0xa0>)
 80007b2:	429c      	cmp	r4, r3
 80007b4:	bf08      	it	eq
 80007b6:	68ec      	ldreq	r4, [r5, #12]
 80007b8:	e7cb      	b.n	8000752 <__swbuf_r+0x1a>
 80007ba:	4621      	mov	r1, r4
 80007bc:	4628      	mov	r0, r5
 80007be:	f000 f80d 	bl	80007dc <__swsetup_r>
 80007c2:	2800      	cmp	r0, #0
 80007c4:	d0cc      	beq.n	8000760 <__swbuf_r+0x28>
 80007c6:	f04f 37ff 	mov.w	r7, #4294967295
 80007ca:	4638      	mov	r0, r7
 80007cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80007ce:	bf00      	nop
 80007d0:	08001638 	.word	0x08001638
 80007d4:	08001658 	.word	0x08001658
 80007d8:	08001618 	.word	0x08001618

080007dc <__swsetup_r>:
 80007dc:	4b32      	ldr	r3, [pc, #200]	; (80008a8 <__swsetup_r+0xcc>)
 80007de:	b570      	push	{r4, r5, r6, lr}
 80007e0:	681d      	ldr	r5, [r3, #0]
 80007e2:	4606      	mov	r6, r0
 80007e4:	460c      	mov	r4, r1
 80007e6:	b125      	cbz	r5, 80007f2 <__swsetup_r+0x16>
 80007e8:	69ab      	ldr	r3, [r5, #24]
 80007ea:	b913      	cbnz	r3, 80007f2 <__swsetup_r+0x16>
 80007ec:	4628      	mov	r0, r5
 80007ee:	f000 f953 	bl	8000a98 <__sinit>
 80007f2:	4b2e      	ldr	r3, [pc, #184]	; (80008ac <__swsetup_r+0xd0>)
 80007f4:	429c      	cmp	r4, r3
 80007f6:	d10f      	bne.n	8000818 <__swsetup_r+0x3c>
 80007f8:	686c      	ldr	r4, [r5, #4]
 80007fa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80007fe:	b29a      	uxth	r2, r3
 8000800:	0715      	lsls	r5, r2, #28
 8000802:	d42c      	bmi.n	800085e <__swsetup_r+0x82>
 8000804:	06d0      	lsls	r0, r2, #27
 8000806:	d411      	bmi.n	800082c <__swsetup_r+0x50>
 8000808:	2209      	movs	r2, #9
 800080a:	6032      	str	r2, [r6, #0]
 800080c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000810:	81a3      	strh	r3, [r4, #12]
 8000812:	f04f 30ff 	mov.w	r0, #4294967295
 8000816:	e03e      	b.n	8000896 <__swsetup_r+0xba>
 8000818:	4b25      	ldr	r3, [pc, #148]	; (80008b0 <__swsetup_r+0xd4>)
 800081a:	429c      	cmp	r4, r3
 800081c:	d101      	bne.n	8000822 <__swsetup_r+0x46>
 800081e:	68ac      	ldr	r4, [r5, #8]
 8000820:	e7eb      	b.n	80007fa <__swsetup_r+0x1e>
 8000822:	4b24      	ldr	r3, [pc, #144]	; (80008b4 <__swsetup_r+0xd8>)
 8000824:	429c      	cmp	r4, r3
 8000826:	bf08      	it	eq
 8000828:	68ec      	ldreq	r4, [r5, #12]
 800082a:	e7e6      	b.n	80007fa <__swsetup_r+0x1e>
 800082c:	0751      	lsls	r1, r2, #29
 800082e:	d512      	bpl.n	8000856 <__swsetup_r+0x7a>
 8000830:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000832:	b141      	cbz	r1, 8000846 <__swsetup_r+0x6a>
 8000834:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000838:	4299      	cmp	r1, r3
 800083a:	d002      	beq.n	8000842 <__swsetup_r+0x66>
 800083c:	4630      	mov	r0, r6
 800083e:	f000 fa19 	bl	8000c74 <_free_r>
 8000842:	2300      	movs	r3, #0
 8000844:	6363      	str	r3, [r4, #52]	; 0x34
 8000846:	89a3      	ldrh	r3, [r4, #12]
 8000848:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800084c:	81a3      	strh	r3, [r4, #12]
 800084e:	2300      	movs	r3, #0
 8000850:	6063      	str	r3, [r4, #4]
 8000852:	6923      	ldr	r3, [r4, #16]
 8000854:	6023      	str	r3, [r4, #0]
 8000856:	89a3      	ldrh	r3, [r4, #12]
 8000858:	f043 0308 	orr.w	r3, r3, #8
 800085c:	81a3      	strh	r3, [r4, #12]
 800085e:	6923      	ldr	r3, [r4, #16]
 8000860:	b94b      	cbnz	r3, 8000876 <__swsetup_r+0x9a>
 8000862:	89a3      	ldrh	r3, [r4, #12]
 8000864:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000868:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800086c:	d003      	beq.n	8000876 <__swsetup_r+0x9a>
 800086e:	4621      	mov	r1, r4
 8000870:	4630      	mov	r0, r6
 8000872:	f000 f9bf 	bl	8000bf4 <__smakebuf_r>
 8000876:	89a2      	ldrh	r2, [r4, #12]
 8000878:	f012 0301 	ands.w	r3, r2, #1
 800087c:	d00c      	beq.n	8000898 <__swsetup_r+0xbc>
 800087e:	2300      	movs	r3, #0
 8000880:	60a3      	str	r3, [r4, #8]
 8000882:	6963      	ldr	r3, [r4, #20]
 8000884:	425b      	negs	r3, r3
 8000886:	61a3      	str	r3, [r4, #24]
 8000888:	6923      	ldr	r3, [r4, #16]
 800088a:	b953      	cbnz	r3, 80008a2 <__swsetup_r+0xc6>
 800088c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000890:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 8000894:	d1ba      	bne.n	800080c <__swsetup_r+0x30>
 8000896:	bd70      	pop	{r4, r5, r6, pc}
 8000898:	0792      	lsls	r2, r2, #30
 800089a:	bf58      	it	pl
 800089c:	6963      	ldrpl	r3, [r4, #20]
 800089e:	60a3      	str	r3, [r4, #8]
 80008a0:	e7f2      	b.n	8000888 <__swsetup_r+0xac>
 80008a2:	2000      	movs	r0, #0
 80008a4:	e7f7      	b.n	8000896 <__swsetup_r+0xba>
 80008a6:	bf00      	nop
 80008a8:	20000000 	.word	0x20000000
 80008ac:	08001638 	.word	0x08001638
 80008b0:	08001658 	.word	0x08001658
 80008b4:	08001618 	.word	0x08001618

080008b8 <__sflush_r>:
 80008b8:	898a      	ldrh	r2, [r1, #12]
 80008ba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80008be:	4605      	mov	r5, r0
 80008c0:	0710      	lsls	r0, r2, #28
 80008c2:	460c      	mov	r4, r1
 80008c4:	d458      	bmi.n	8000978 <__sflush_r+0xc0>
 80008c6:	684b      	ldr	r3, [r1, #4]
 80008c8:	2b00      	cmp	r3, #0
 80008ca:	dc05      	bgt.n	80008d8 <__sflush_r+0x20>
 80008cc:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80008ce:	2b00      	cmp	r3, #0
 80008d0:	dc02      	bgt.n	80008d8 <__sflush_r+0x20>
 80008d2:	2000      	movs	r0, #0
 80008d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80008d8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80008da:	2e00      	cmp	r6, #0
 80008dc:	d0f9      	beq.n	80008d2 <__sflush_r+0x1a>
 80008de:	2300      	movs	r3, #0
 80008e0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80008e4:	682f      	ldr	r7, [r5, #0]
 80008e6:	6a21      	ldr	r1, [r4, #32]
 80008e8:	602b      	str	r3, [r5, #0]
 80008ea:	d032      	beq.n	8000952 <__sflush_r+0x9a>
 80008ec:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80008ee:	89a3      	ldrh	r3, [r4, #12]
 80008f0:	075a      	lsls	r2, r3, #29
 80008f2:	d505      	bpl.n	8000900 <__sflush_r+0x48>
 80008f4:	6863      	ldr	r3, [r4, #4]
 80008f6:	1ac0      	subs	r0, r0, r3
 80008f8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80008fa:	b10b      	cbz	r3, 8000900 <__sflush_r+0x48>
 80008fc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80008fe:	1ac0      	subs	r0, r0, r3
 8000900:	2300      	movs	r3, #0
 8000902:	4602      	mov	r2, r0
 8000904:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000906:	6a21      	ldr	r1, [r4, #32]
 8000908:	4628      	mov	r0, r5
 800090a:	47b0      	blx	r6
 800090c:	1c43      	adds	r3, r0, #1
 800090e:	89a3      	ldrh	r3, [r4, #12]
 8000910:	d106      	bne.n	8000920 <__sflush_r+0x68>
 8000912:	6829      	ldr	r1, [r5, #0]
 8000914:	291d      	cmp	r1, #29
 8000916:	d848      	bhi.n	80009aa <__sflush_r+0xf2>
 8000918:	4a29      	ldr	r2, [pc, #164]	; (80009c0 <__sflush_r+0x108>)
 800091a:	40ca      	lsrs	r2, r1
 800091c:	07d6      	lsls	r6, r2, #31
 800091e:	d544      	bpl.n	80009aa <__sflush_r+0xf2>
 8000920:	2200      	movs	r2, #0
 8000922:	6062      	str	r2, [r4, #4]
 8000924:	04d9      	lsls	r1, r3, #19
 8000926:	6922      	ldr	r2, [r4, #16]
 8000928:	6022      	str	r2, [r4, #0]
 800092a:	d504      	bpl.n	8000936 <__sflush_r+0x7e>
 800092c:	1c42      	adds	r2, r0, #1
 800092e:	d101      	bne.n	8000934 <__sflush_r+0x7c>
 8000930:	682b      	ldr	r3, [r5, #0]
 8000932:	b903      	cbnz	r3, 8000936 <__sflush_r+0x7e>
 8000934:	6560      	str	r0, [r4, #84]	; 0x54
 8000936:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000938:	602f      	str	r7, [r5, #0]
 800093a:	2900      	cmp	r1, #0
 800093c:	d0c9      	beq.n	80008d2 <__sflush_r+0x1a>
 800093e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000942:	4299      	cmp	r1, r3
 8000944:	d002      	beq.n	800094c <__sflush_r+0x94>
 8000946:	4628      	mov	r0, r5
 8000948:	f000 f994 	bl	8000c74 <_free_r>
 800094c:	2000      	movs	r0, #0
 800094e:	6360      	str	r0, [r4, #52]	; 0x34
 8000950:	e7c0      	b.n	80008d4 <__sflush_r+0x1c>
 8000952:	2301      	movs	r3, #1
 8000954:	4628      	mov	r0, r5
 8000956:	47b0      	blx	r6
 8000958:	1c41      	adds	r1, r0, #1
 800095a:	d1c8      	bne.n	80008ee <__sflush_r+0x36>
 800095c:	682b      	ldr	r3, [r5, #0]
 800095e:	2b00      	cmp	r3, #0
 8000960:	d0c5      	beq.n	80008ee <__sflush_r+0x36>
 8000962:	2b1d      	cmp	r3, #29
 8000964:	d001      	beq.n	800096a <__sflush_r+0xb2>
 8000966:	2b16      	cmp	r3, #22
 8000968:	d101      	bne.n	800096e <__sflush_r+0xb6>
 800096a:	602f      	str	r7, [r5, #0]
 800096c:	e7b1      	b.n	80008d2 <__sflush_r+0x1a>
 800096e:	89a3      	ldrh	r3, [r4, #12]
 8000970:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000974:	81a3      	strh	r3, [r4, #12]
 8000976:	e7ad      	b.n	80008d4 <__sflush_r+0x1c>
 8000978:	690f      	ldr	r7, [r1, #16]
 800097a:	2f00      	cmp	r7, #0
 800097c:	d0a9      	beq.n	80008d2 <__sflush_r+0x1a>
 800097e:	0793      	lsls	r3, r2, #30
 8000980:	680e      	ldr	r6, [r1, #0]
 8000982:	bf08      	it	eq
 8000984:	694b      	ldreq	r3, [r1, #20]
 8000986:	600f      	str	r7, [r1, #0]
 8000988:	bf18      	it	ne
 800098a:	2300      	movne	r3, #0
 800098c:	eba6 0807 	sub.w	r8, r6, r7
 8000990:	608b      	str	r3, [r1, #8]
 8000992:	f1b8 0f00 	cmp.w	r8, #0
 8000996:	dd9c      	ble.n	80008d2 <__sflush_r+0x1a>
 8000998:	4643      	mov	r3, r8
 800099a:	463a      	mov	r2, r7
 800099c:	6a21      	ldr	r1, [r4, #32]
 800099e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80009a0:	4628      	mov	r0, r5
 80009a2:	47b0      	blx	r6
 80009a4:	2800      	cmp	r0, #0
 80009a6:	dc06      	bgt.n	80009b6 <__sflush_r+0xfe>
 80009a8:	89a3      	ldrh	r3, [r4, #12]
 80009aa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80009ae:	81a3      	strh	r3, [r4, #12]
 80009b0:	f04f 30ff 	mov.w	r0, #4294967295
 80009b4:	e78e      	b.n	80008d4 <__sflush_r+0x1c>
 80009b6:	4407      	add	r7, r0
 80009b8:	eba8 0800 	sub.w	r8, r8, r0
 80009bc:	e7e9      	b.n	8000992 <__sflush_r+0xda>
 80009be:	bf00      	nop
 80009c0:	20400001 	.word	0x20400001

080009c4 <_fflush_r>:
 80009c4:	b538      	push	{r3, r4, r5, lr}
 80009c6:	690b      	ldr	r3, [r1, #16]
 80009c8:	4605      	mov	r5, r0
 80009ca:	460c      	mov	r4, r1
 80009cc:	b1db      	cbz	r3, 8000a06 <_fflush_r+0x42>
 80009ce:	b118      	cbz	r0, 80009d8 <_fflush_r+0x14>
 80009d0:	6983      	ldr	r3, [r0, #24]
 80009d2:	b90b      	cbnz	r3, 80009d8 <_fflush_r+0x14>
 80009d4:	f000 f860 	bl	8000a98 <__sinit>
 80009d8:	4b0c      	ldr	r3, [pc, #48]	; (8000a0c <_fflush_r+0x48>)
 80009da:	429c      	cmp	r4, r3
 80009dc:	d109      	bne.n	80009f2 <_fflush_r+0x2e>
 80009de:	686c      	ldr	r4, [r5, #4]
 80009e0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80009e4:	b17b      	cbz	r3, 8000a06 <_fflush_r+0x42>
 80009e6:	4621      	mov	r1, r4
 80009e8:	4628      	mov	r0, r5
 80009ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80009ee:	f7ff bf63 	b.w	80008b8 <__sflush_r>
 80009f2:	4b07      	ldr	r3, [pc, #28]	; (8000a10 <_fflush_r+0x4c>)
 80009f4:	429c      	cmp	r4, r3
 80009f6:	d101      	bne.n	80009fc <_fflush_r+0x38>
 80009f8:	68ac      	ldr	r4, [r5, #8]
 80009fa:	e7f1      	b.n	80009e0 <_fflush_r+0x1c>
 80009fc:	4b05      	ldr	r3, [pc, #20]	; (8000a14 <_fflush_r+0x50>)
 80009fe:	429c      	cmp	r4, r3
 8000a00:	bf08      	it	eq
 8000a02:	68ec      	ldreq	r4, [r5, #12]
 8000a04:	e7ec      	b.n	80009e0 <_fflush_r+0x1c>
 8000a06:	2000      	movs	r0, #0
 8000a08:	bd38      	pop	{r3, r4, r5, pc}
 8000a0a:	bf00      	nop
 8000a0c:	08001638 	.word	0x08001638
 8000a10:	08001658 	.word	0x08001658
 8000a14:	08001618 	.word	0x08001618

08000a18 <std>:
 8000a18:	2300      	movs	r3, #0
 8000a1a:	b510      	push	{r4, lr}
 8000a1c:	4604      	mov	r4, r0
 8000a1e:	e9c0 3300 	strd	r3, r3, [r0]
 8000a22:	6083      	str	r3, [r0, #8]
 8000a24:	8181      	strh	r1, [r0, #12]
 8000a26:	6643      	str	r3, [r0, #100]	; 0x64
 8000a28:	81c2      	strh	r2, [r0, #14]
 8000a2a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000a2e:	6183      	str	r3, [r0, #24]
 8000a30:	4619      	mov	r1, r3
 8000a32:	2208      	movs	r2, #8
 8000a34:	305c      	adds	r0, #92	; 0x5c
 8000a36:	f7ff fdfb 	bl	8000630 <memset>
 8000a3a:	4b05      	ldr	r3, [pc, #20]	; (8000a50 <std+0x38>)
 8000a3c:	6263      	str	r3, [r4, #36]	; 0x24
 8000a3e:	4b05      	ldr	r3, [pc, #20]	; (8000a54 <std+0x3c>)
 8000a40:	62a3      	str	r3, [r4, #40]	; 0x28
 8000a42:	4b05      	ldr	r3, [pc, #20]	; (8000a58 <std+0x40>)
 8000a44:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000a46:	4b05      	ldr	r3, [pc, #20]	; (8000a5c <std+0x44>)
 8000a48:	6224      	str	r4, [r4, #32]
 8000a4a:	6323      	str	r3, [r4, #48]	; 0x30
 8000a4c:	bd10      	pop	{r4, pc}
 8000a4e:	bf00      	nop
 8000a50:	08001375 	.word	0x08001375
 8000a54:	08001397 	.word	0x08001397
 8000a58:	080013cf 	.word	0x080013cf
 8000a5c:	080013f3 	.word	0x080013f3

08000a60 <_cleanup_r>:
 8000a60:	4901      	ldr	r1, [pc, #4]	; (8000a68 <_cleanup_r+0x8>)
 8000a62:	f000 b885 	b.w	8000b70 <_fwalk_reent>
 8000a66:	bf00      	nop
 8000a68:	080009c5 	.word	0x080009c5

08000a6c <__sfmoreglue>:
 8000a6c:	b570      	push	{r4, r5, r6, lr}
 8000a6e:	1e4a      	subs	r2, r1, #1
 8000a70:	2568      	movs	r5, #104	; 0x68
 8000a72:	4355      	muls	r5, r2
 8000a74:	460e      	mov	r6, r1
 8000a76:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000a7a:	f000 f949 	bl	8000d10 <_malloc_r>
 8000a7e:	4604      	mov	r4, r0
 8000a80:	b140      	cbz	r0, 8000a94 <__sfmoreglue+0x28>
 8000a82:	2100      	movs	r1, #0
 8000a84:	e9c0 1600 	strd	r1, r6, [r0]
 8000a88:	300c      	adds	r0, #12
 8000a8a:	60a0      	str	r0, [r4, #8]
 8000a8c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000a90:	f7ff fdce 	bl	8000630 <memset>
 8000a94:	4620      	mov	r0, r4
 8000a96:	bd70      	pop	{r4, r5, r6, pc}

08000a98 <__sinit>:
 8000a98:	6983      	ldr	r3, [r0, #24]
 8000a9a:	b510      	push	{r4, lr}
 8000a9c:	4604      	mov	r4, r0
 8000a9e:	bb33      	cbnz	r3, 8000aee <__sinit+0x56>
 8000aa0:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 8000aa4:	6503      	str	r3, [r0, #80]	; 0x50
 8000aa6:	4b12      	ldr	r3, [pc, #72]	; (8000af0 <__sinit+0x58>)
 8000aa8:	4a12      	ldr	r2, [pc, #72]	; (8000af4 <__sinit+0x5c>)
 8000aaa:	681b      	ldr	r3, [r3, #0]
 8000aac:	6282      	str	r2, [r0, #40]	; 0x28
 8000aae:	4298      	cmp	r0, r3
 8000ab0:	bf04      	itt	eq
 8000ab2:	2301      	moveq	r3, #1
 8000ab4:	6183      	streq	r3, [r0, #24]
 8000ab6:	f000 f81f 	bl	8000af8 <__sfp>
 8000aba:	6060      	str	r0, [r4, #4]
 8000abc:	4620      	mov	r0, r4
 8000abe:	f000 f81b 	bl	8000af8 <__sfp>
 8000ac2:	60a0      	str	r0, [r4, #8]
 8000ac4:	4620      	mov	r0, r4
 8000ac6:	f000 f817 	bl	8000af8 <__sfp>
 8000aca:	2200      	movs	r2, #0
 8000acc:	60e0      	str	r0, [r4, #12]
 8000ace:	2104      	movs	r1, #4
 8000ad0:	6860      	ldr	r0, [r4, #4]
 8000ad2:	f7ff ffa1 	bl	8000a18 <std>
 8000ad6:	2201      	movs	r2, #1
 8000ad8:	2109      	movs	r1, #9
 8000ada:	68a0      	ldr	r0, [r4, #8]
 8000adc:	f7ff ff9c 	bl	8000a18 <std>
 8000ae0:	2202      	movs	r2, #2
 8000ae2:	2112      	movs	r1, #18
 8000ae4:	68e0      	ldr	r0, [r4, #12]
 8000ae6:	f7ff ff97 	bl	8000a18 <std>
 8000aea:	2301      	movs	r3, #1
 8000aec:	61a3      	str	r3, [r4, #24]
 8000aee:	bd10      	pop	{r4, pc}
 8000af0:	08001614 	.word	0x08001614
 8000af4:	08000a61 	.word	0x08000a61

08000af8 <__sfp>:
 8000af8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000afa:	4b1b      	ldr	r3, [pc, #108]	; (8000b68 <__sfp+0x70>)
 8000afc:	681e      	ldr	r6, [r3, #0]
 8000afe:	69b3      	ldr	r3, [r6, #24]
 8000b00:	4607      	mov	r7, r0
 8000b02:	b913      	cbnz	r3, 8000b0a <__sfp+0x12>
 8000b04:	4630      	mov	r0, r6
 8000b06:	f7ff ffc7 	bl	8000a98 <__sinit>
 8000b0a:	3648      	adds	r6, #72	; 0x48
 8000b0c:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000b10:	3b01      	subs	r3, #1
 8000b12:	d503      	bpl.n	8000b1c <__sfp+0x24>
 8000b14:	6833      	ldr	r3, [r6, #0]
 8000b16:	b133      	cbz	r3, 8000b26 <__sfp+0x2e>
 8000b18:	6836      	ldr	r6, [r6, #0]
 8000b1a:	e7f7      	b.n	8000b0c <__sfp+0x14>
 8000b1c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000b20:	b16d      	cbz	r5, 8000b3e <__sfp+0x46>
 8000b22:	3468      	adds	r4, #104	; 0x68
 8000b24:	e7f4      	b.n	8000b10 <__sfp+0x18>
 8000b26:	2104      	movs	r1, #4
 8000b28:	4638      	mov	r0, r7
 8000b2a:	f7ff ff9f 	bl	8000a6c <__sfmoreglue>
 8000b2e:	6030      	str	r0, [r6, #0]
 8000b30:	2800      	cmp	r0, #0
 8000b32:	d1f1      	bne.n	8000b18 <__sfp+0x20>
 8000b34:	230c      	movs	r3, #12
 8000b36:	603b      	str	r3, [r7, #0]
 8000b38:	4604      	mov	r4, r0
 8000b3a:	4620      	mov	r0, r4
 8000b3c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000b3e:	4b0b      	ldr	r3, [pc, #44]	; (8000b6c <__sfp+0x74>)
 8000b40:	6665      	str	r5, [r4, #100]	; 0x64
 8000b42:	e9c4 5500 	strd	r5, r5, [r4]
 8000b46:	60a5      	str	r5, [r4, #8]
 8000b48:	e9c4 3503 	strd	r3, r5, [r4, #12]
 8000b4c:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8000b50:	2208      	movs	r2, #8
 8000b52:	4629      	mov	r1, r5
 8000b54:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000b58:	f7ff fd6a 	bl	8000630 <memset>
 8000b5c:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000b60:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000b64:	e7e9      	b.n	8000b3a <__sfp+0x42>
 8000b66:	bf00      	nop
 8000b68:	08001614 	.word	0x08001614
 8000b6c:	ffff0001 	.word	0xffff0001

08000b70 <_fwalk_reent>:
 8000b70:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000b74:	4680      	mov	r8, r0
 8000b76:	4689      	mov	r9, r1
 8000b78:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000b7c:	2600      	movs	r6, #0
 8000b7e:	b914      	cbnz	r4, 8000b86 <_fwalk_reent+0x16>
 8000b80:	4630      	mov	r0, r6
 8000b82:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000b86:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 8000b8a:	3f01      	subs	r7, #1
 8000b8c:	d501      	bpl.n	8000b92 <_fwalk_reent+0x22>
 8000b8e:	6824      	ldr	r4, [r4, #0]
 8000b90:	e7f5      	b.n	8000b7e <_fwalk_reent+0xe>
 8000b92:	89ab      	ldrh	r3, [r5, #12]
 8000b94:	2b01      	cmp	r3, #1
 8000b96:	d907      	bls.n	8000ba8 <_fwalk_reent+0x38>
 8000b98:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000b9c:	3301      	adds	r3, #1
 8000b9e:	d003      	beq.n	8000ba8 <_fwalk_reent+0x38>
 8000ba0:	4629      	mov	r1, r5
 8000ba2:	4640      	mov	r0, r8
 8000ba4:	47c8      	blx	r9
 8000ba6:	4306      	orrs	r6, r0
 8000ba8:	3568      	adds	r5, #104	; 0x68
 8000baa:	e7ee      	b.n	8000b8a <_fwalk_reent+0x1a>

08000bac <__swhatbuf_r>:
 8000bac:	b570      	push	{r4, r5, r6, lr}
 8000bae:	460e      	mov	r6, r1
 8000bb0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000bb4:	2900      	cmp	r1, #0
 8000bb6:	b096      	sub	sp, #88	; 0x58
 8000bb8:	4614      	mov	r4, r2
 8000bba:	461d      	mov	r5, r3
 8000bbc:	da07      	bge.n	8000bce <__swhatbuf_r+0x22>
 8000bbe:	2300      	movs	r3, #0
 8000bc0:	602b      	str	r3, [r5, #0]
 8000bc2:	89b3      	ldrh	r3, [r6, #12]
 8000bc4:	061a      	lsls	r2, r3, #24
 8000bc6:	d410      	bmi.n	8000bea <__swhatbuf_r+0x3e>
 8000bc8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000bcc:	e00e      	b.n	8000bec <__swhatbuf_r+0x40>
 8000bce:	466a      	mov	r2, sp
 8000bd0:	f000 fc36 	bl	8001440 <_fstat_r>
 8000bd4:	2800      	cmp	r0, #0
 8000bd6:	dbf2      	blt.n	8000bbe <__swhatbuf_r+0x12>
 8000bd8:	9a01      	ldr	r2, [sp, #4]
 8000bda:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000bde:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000be2:	425a      	negs	r2, r3
 8000be4:	415a      	adcs	r2, r3
 8000be6:	602a      	str	r2, [r5, #0]
 8000be8:	e7ee      	b.n	8000bc8 <__swhatbuf_r+0x1c>
 8000bea:	2340      	movs	r3, #64	; 0x40
 8000bec:	2000      	movs	r0, #0
 8000bee:	6023      	str	r3, [r4, #0]
 8000bf0:	b016      	add	sp, #88	; 0x58
 8000bf2:	bd70      	pop	{r4, r5, r6, pc}

08000bf4 <__smakebuf_r>:
 8000bf4:	898b      	ldrh	r3, [r1, #12]
 8000bf6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000bf8:	079d      	lsls	r5, r3, #30
 8000bfa:	4606      	mov	r6, r0
 8000bfc:	460c      	mov	r4, r1
 8000bfe:	d507      	bpl.n	8000c10 <__smakebuf_r+0x1c>
 8000c00:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000c04:	6023      	str	r3, [r4, #0]
 8000c06:	6123      	str	r3, [r4, #16]
 8000c08:	2301      	movs	r3, #1
 8000c0a:	6163      	str	r3, [r4, #20]
 8000c0c:	b002      	add	sp, #8
 8000c0e:	bd70      	pop	{r4, r5, r6, pc}
 8000c10:	ab01      	add	r3, sp, #4
 8000c12:	466a      	mov	r2, sp
 8000c14:	f7ff ffca 	bl	8000bac <__swhatbuf_r>
 8000c18:	9900      	ldr	r1, [sp, #0]
 8000c1a:	4605      	mov	r5, r0
 8000c1c:	4630      	mov	r0, r6
 8000c1e:	f000 f877 	bl	8000d10 <_malloc_r>
 8000c22:	b948      	cbnz	r0, 8000c38 <__smakebuf_r+0x44>
 8000c24:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000c28:	059a      	lsls	r2, r3, #22
 8000c2a:	d4ef      	bmi.n	8000c0c <__smakebuf_r+0x18>
 8000c2c:	f023 0303 	bic.w	r3, r3, #3
 8000c30:	f043 0302 	orr.w	r3, r3, #2
 8000c34:	81a3      	strh	r3, [r4, #12]
 8000c36:	e7e3      	b.n	8000c00 <__smakebuf_r+0xc>
 8000c38:	4b0d      	ldr	r3, [pc, #52]	; (8000c70 <__smakebuf_r+0x7c>)
 8000c3a:	62b3      	str	r3, [r6, #40]	; 0x28
 8000c3c:	89a3      	ldrh	r3, [r4, #12]
 8000c3e:	6020      	str	r0, [r4, #0]
 8000c40:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000c44:	81a3      	strh	r3, [r4, #12]
 8000c46:	9b00      	ldr	r3, [sp, #0]
 8000c48:	6163      	str	r3, [r4, #20]
 8000c4a:	9b01      	ldr	r3, [sp, #4]
 8000c4c:	6120      	str	r0, [r4, #16]
 8000c4e:	b15b      	cbz	r3, 8000c68 <__smakebuf_r+0x74>
 8000c50:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000c54:	4630      	mov	r0, r6
 8000c56:	f000 fc05 	bl	8001464 <_isatty_r>
 8000c5a:	b128      	cbz	r0, 8000c68 <__smakebuf_r+0x74>
 8000c5c:	89a3      	ldrh	r3, [r4, #12]
 8000c5e:	f023 0303 	bic.w	r3, r3, #3
 8000c62:	f043 0301 	orr.w	r3, r3, #1
 8000c66:	81a3      	strh	r3, [r4, #12]
 8000c68:	89a3      	ldrh	r3, [r4, #12]
 8000c6a:	431d      	orrs	r5, r3
 8000c6c:	81a5      	strh	r5, [r4, #12]
 8000c6e:	e7cd      	b.n	8000c0c <__smakebuf_r+0x18>
 8000c70:	08000a61 	.word	0x08000a61

08000c74 <_free_r>:
 8000c74:	b538      	push	{r3, r4, r5, lr}
 8000c76:	4605      	mov	r5, r0
 8000c78:	2900      	cmp	r1, #0
 8000c7a:	d045      	beq.n	8000d08 <_free_r+0x94>
 8000c7c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000c80:	1f0c      	subs	r4, r1, #4
 8000c82:	2b00      	cmp	r3, #0
 8000c84:	bfb8      	it	lt
 8000c86:	18e4      	addlt	r4, r4, r3
 8000c88:	f000 fc0e 	bl	80014a8 <__malloc_lock>
 8000c8c:	4a1f      	ldr	r2, [pc, #124]	; (8000d0c <_free_r+0x98>)
 8000c8e:	6813      	ldr	r3, [r2, #0]
 8000c90:	4610      	mov	r0, r2
 8000c92:	b933      	cbnz	r3, 8000ca2 <_free_r+0x2e>
 8000c94:	6063      	str	r3, [r4, #4]
 8000c96:	6014      	str	r4, [r2, #0]
 8000c98:	4628      	mov	r0, r5
 8000c9a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000c9e:	f000 bc04 	b.w	80014aa <__malloc_unlock>
 8000ca2:	42a3      	cmp	r3, r4
 8000ca4:	d90c      	bls.n	8000cc0 <_free_r+0x4c>
 8000ca6:	6821      	ldr	r1, [r4, #0]
 8000ca8:	1862      	adds	r2, r4, r1
 8000caa:	4293      	cmp	r3, r2
 8000cac:	bf04      	itt	eq
 8000cae:	681a      	ldreq	r2, [r3, #0]
 8000cb0:	685b      	ldreq	r3, [r3, #4]
 8000cb2:	6063      	str	r3, [r4, #4]
 8000cb4:	bf04      	itt	eq
 8000cb6:	1852      	addeq	r2, r2, r1
 8000cb8:	6022      	streq	r2, [r4, #0]
 8000cba:	6004      	str	r4, [r0, #0]
 8000cbc:	e7ec      	b.n	8000c98 <_free_r+0x24>
 8000cbe:	4613      	mov	r3, r2
 8000cc0:	685a      	ldr	r2, [r3, #4]
 8000cc2:	b10a      	cbz	r2, 8000cc8 <_free_r+0x54>
 8000cc4:	42a2      	cmp	r2, r4
 8000cc6:	d9fa      	bls.n	8000cbe <_free_r+0x4a>
 8000cc8:	6819      	ldr	r1, [r3, #0]
 8000cca:	1858      	adds	r0, r3, r1
 8000ccc:	42a0      	cmp	r0, r4
 8000cce:	d10b      	bne.n	8000ce8 <_free_r+0x74>
 8000cd0:	6820      	ldr	r0, [r4, #0]
 8000cd2:	4401      	add	r1, r0
 8000cd4:	1858      	adds	r0, r3, r1
 8000cd6:	4282      	cmp	r2, r0
 8000cd8:	6019      	str	r1, [r3, #0]
 8000cda:	d1dd      	bne.n	8000c98 <_free_r+0x24>
 8000cdc:	6810      	ldr	r0, [r2, #0]
 8000cde:	6852      	ldr	r2, [r2, #4]
 8000ce0:	605a      	str	r2, [r3, #4]
 8000ce2:	4401      	add	r1, r0
 8000ce4:	6019      	str	r1, [r3, #0]
 8000ce6:	e7d7      	b.n	8000c98 <_free_r+0x24>
 8000ce8:	d902      	bls.n	8000cf0 <_free_r+0x7c>
 8000cea:	230c      	movs	r3, #12
 8000cec:	602b      	str	r3, [r5, #0]
 8000cee:	e7d3      	b.n	8000c98 <_free_r+0x24>
 8000cf0:	6820      	ldr	r0, [r4, #0]
 8000cf2:	1821      	adds	r1, r4, r0
 8000cf4:	428a      	cmp	r2, r1
 8000cf6:	bf04      	itt	eq
 8000cf8:	6811      	ldreq	r1, [r2, #0]
 8000cfa:	6852      	ldreq	r2, [r2, #4]
 8000cfc:	6062      	str	r2, [r4, #4]
 8000cfe:	bf04      	itt	eq
 8000d00:	1809      	addeq	r1, r1, r0
 8000d02:	6021      	streq	r1, [r4, #0]
 8000d04:	605c      	str	r4, [r3, #4]
 8000d06:	e7c7      	b.n	8000c98 <_free_r+0x24>
 8000d08:	bd38      	pop	{r3, r4, r5, pc}
 8000d0a:	bf00      	nop
 8000d0c:	20000084 	.word	0x20000084

08000d10 <_malloc_r>:
 8000d10:	b570      	push	{r4, r5, r6, lr}
 8000d12:	1ccd      	adds	r5, r1, #3
 8000d14:	f025 0503 	bic.w	r5, r5, #3
 8000d18:	3508      	adds	r5, #8
 8000d1a:	2d0c      	cmp	r5, #12
 8000d1c:	bf38      	it	cc
 8000d1e:	250c      	movcc	r5, #12
 8000d20:	2d00      	cmp	r5, #0
 8000d22:	4606      	mov	r6, r0
 8000d24:	db01      	blt.n	8000d2a <_malloc_r+0x1a>
 8000d26:	42a9      	cmp	r1, r5
 8000d28:	d903      	bls.n	8000d32 <_malloc_r+0x22>
 8000d2a:	230c      	movs	r3, #12
 8000d2c:	6033      	str	r3, [r6, #0]
 8000d2e:	2000      	movs	r0, #0
 8000d30:	bd70      	pop	{r4, r5, r6, pc}
 8000d32:	f000 fbb9 	bl	80014a8 <__malloc_lock>
 8000d36:	4a21      	ldr	r2, [pc, #132]	; (8000dbc <_malloc_r+0xac>)
 8000d38:	6814      	ldr	r4, [r2, #0]
 8000d3a:	4621      	mov	r1, r4
 8000d3c:	b991      	cbnz	r1, 8000d64 <_malloc_r+0x54>
 8000d3e:	4c20      	ldr	r4, [pc, #128]	; (8000dc0 <_malloc_r+0xb0>)
 8000d40:	6823      	ldr	r3, [r4, #0]
 8000d42:	b91b      	cbnz	r3, 8000d4c <_malloc_r+0x3c>
 8000d44:	4630      	mov	r0, r6
 8000d46:	f000 fb05 	bl	8001354 <_sbrk_r>
 8000d4a:	6020      	str	r0, [r4, #0]
 8000d4c:	4629      	mov	r1, r5
 8000d4e:	4630      	mov	r0, r6
 8000d50:	f000 fb00 	bl	8001354 <_sbrk_r>
 8000d54:	1c43      	adds	r3, r0, #1
 8000d56:	d124      	bne.n	8000da2 <_malloc_r+0x92>
 8000d58:	230c      	movs	r3, #12
 8000d5a:	6033      	str	r3, [r6, #0]
 8000d5c:	4630      	mov	r0, r6
 8000d5e:	f000 fba4 	bl	80014aa <__malloc_unlock>
 8000d62:	e7e4      	b.n	8000d2e <_malloc_r+0x1e>
 8000d64:	680b      	ldr	r3, [r1, #0]
 8000d66:	1b5b      	subs	r3, r3, r5
 8000d68:	d418      	bmi.n	8000d9c <_malloc_r+0x8c>
 8000d6a:	2b0b      	cmp	r3, #11
 8000d6c:	d90f      	bls.n	8000d8e <_malloc_r+0x7e>
 8000d6e:	600b      	str	r3, [r1, #0]
 8000d70:	50cd      	str	r5, [r1, r3]
 8000d72:	18cc      	adds	r4, r1, r3
 8000d74:	4630      	mov	r0, r6
 8000d76:	f000 fb98 	bl	80014aa <__malloc_unlock>
 8000d7a:	f104 000b 	add.w	r0, r4, #11
 8000d7e:	1d23      	adds	r3, r4, #4
 8000d80:	f020 0007 	bic.w	r0, r0, #7
 8000d84:	1ac3      	subs	r3, r0, r3
 8000d86:	d0d3      	beq.n	8000d30 <_malloc_r+0x20>
 8000d88:	425a      	negs	r2, r3
 8000d8a:	50e2      	str	r2, [r4, r3]
 8000d8c:	e7d0      	b.n	8000d30 <_malloc_r+0x20>
 8000d8e:	428c      	cmp	r4, r1
 8000d90:	684b      	ldr	r3, [r1, #4]
 8000d92:	bf16      	itet	ne
 8000d94:	6063      	strne	r3, [r4, #4]
 8000d96:	6013      	streq	r3, [r2, #0]
 8000d98:	460c      	movne	r4, r1
 8000d9a:	e7eb      	b.n	8000d74 <_malloc_r+0x64>
 8000d9c:	460c      	mov	r4, r1
 8000d9e:	6849      	ldr	r1, [r1, #4]
 8000da0:	e7cc      	b.n	8000d3c <_malloc_r+0x2c>
 8000da2:	1cc4      	adds	r4, r0, #3
 8000da4:	f024 0403 	bic.w	r4, r4, #3
 8000da8:	42a0      	cmp	r0, r4
 8000daa:	d005      	beq.n	8000db8 <_malloc_r+0xa8>
 8000dac:	1a21      	subs	r1, r4, r0
 8000dae:	4630      	mov	r0, r6
 8000db0:	f000 fad0 	bl	8001354 <_sbrk_r>
 8000db4:	3001      	adds	r0, #1
 8000db6:	d0cf      	beq.n	8000d58 <_malloc_r+0x48>
 8000db8:	6025      	str	r5, [r4, #0]
 8000dba:	e7db      	b.n	8000d74 <_malloc_r+0x64>
 8000dbc:	20000084 	.word	0x20000084
 8000dc0:	20000088 	.word	0x20000088

08000dc4 <__sfputc_r>:
 8000dc4:	6893      	ldr	r3, [r2, #8]
 8000dc6:	3b01      	subs	r3, #1
 8000dc8:	2b00      	cmp	r3, #0
 8000dca:	b410      	push	{r4}
 8000dcc:	6093      	str	r3, [r2, #8]
 8000dce:	da08      	bge.n	8000de2 <__sfputc_r+0x1e>
 8000dd0:	6994      	ldr	r4, [r2, #24]
 8000dd2:	42a3      	cmp	r3, r4
 8000dd4:	db01      	blt.n	8000dda <__sfputc_r+0x16>
 8000dd6:	290a      	cmp	r1, #10
 8000dd8:	d103      	bne.n	8000de2 <__sfputc_r+0x1e>
 8000dda:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000dde:	f7ff bcab 	b.w	8000738 <__swbuf_r>
 8000de2:	6813      	ldr	r3, [r2, #0]
 8000de4:	1c58      	adds	r0, r3, #1
 8000de6:	6010      	str	r0, [r2, #0]
 8000de8:	7019      	strb	r1, [r3, #0]
 8000dea:	4608      	mov	r0, r1
 8000dec:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000df0:	4770      	bx	lr

08000df2 <__sfputs_r>:
 8000df2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000df4:	4606      	mov	r6, r0
 8000df6:	460f      	mov	r7, r1
 8000df8:	4614      	mov	r4, r2
 8000dfa:	18d5      	adds	r5, r2, r3
 8000dfc:	42ac      	cmp	r4, r5
 8000dfe:	d101      	bne.n	8000e04 <__sfputs_r+0x12>
 8000e00:	2000      	movs	r0, #0
 8000e02:	e007      	b.n	8000e14 <__sfputs_r+0x22>
 8000e04:	463a      	mov	r2, r7
 8000e06:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000e0a:	4630      	mov	r0, r6
 8000e0c:	f7ff ffda 	bl	8000dc4 <__sfputc_r>
 8000e10:	1c43      	adds	r3, r0, #1
 8000e12:	d1f3      	bne.n	8000dfc <__sfputs_r+0xa>
 8000e14:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000e18 <_vfiprintf_r>:
 8000e18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000e1c:	460c      	mov	r4, r1
 8000e1e:	b09d      	sub	sp, #116	; 0x74
 8000e20:	4617      	mov	r7, r2
 8000e22:	461d      	mov	r5, r3
 8000e24:	4606      	mov	r6, r0
 8000e26:	b118      	cbz	r0, 8000e30 <_vfiprintf_r+0x18>
 8000e28:	6983      	ldr	r3, [r0, #24]
 8000e2a:	b90b      	cbnz	r3, 8000e30 <_vfiprintf_r+0x18>
 8000e2c:	f7ff fe34 	bl	8000a98 <__sinit>
 8000e30:	4b7c      	ldr	r3, [pc, #496]	; (8001024 <_vfiprintf_r+0x20c>)
 8000e32:	429c      	cmp	r4, r3
 8000e34:	d158      	bne.n	8000ee8 <_vfiprintf_r+0xd0>
 8000e36:	6874      	ldr	r4, [r6, #4]
 8000e38:	89a3      	ldrh	r3, [r4, #12]
 8000e3a:	0718      	lsls	r0, r3, #28
 8000e3c:	d55e      	bpl.n	8000efc <_vfiprintf_r+0xe4>
 8000e3e:	6923      	ldr	r3, [r4, #16]
 8000e40:	2b00      	cmp	r3, #0
 8000e42:	d05b      	beq.n	8000efc <_vfiprintf_r+0xe4>
 8000e44:	2300      	movs	r3, #0
 8000e46:	9309      	str	r3, [sp, #36]	; 0x24
 8000e48:	2320      	movs	r3, #32
 8000e4a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000e4e:	2330      	movs	r3, #48	; 0x30
 8000e50:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000e54:	9503      	str	r5, [sp, #12]
 8000e56:	f04f 0b01 	mov.w	fp, #1
 8000e5a:	46b8      	mov	r8, r7
 8000e5c:	4645      	mov	r5, r8
 8000e5e:	f815 3b01 	ldrb.w	r3, [r5], #1
 8000e62:	b10b      	cbz	r3, 8000e68 <_vfiprintf_r+0x50>
 8000e64:	2b25      	cmp	r3, #37	; 0x25
 8000e66:	d154      	bne.n	8000f12 <_vfiprintf_r+0xfa>
 8000e68:	ebb8 0a07 	subs.w	sl, r8, r7
 8000e6c:	d00b      	beq.n	8000e86 <_vfiprintf_r+0x6e>
 8000e6e:	4653      	mov	r3, sl
 8000e70:	463a      	mov	r2, r7
 8000e72:	4621      	mov	r1, r4
 8000e74:	4630      	mov	r0, r6
 8000e76:	f7ff ffbc 	bl	8000df2 <__sfputs_r>
 8000e7a:	3001      	adds	r0, #1
 8000e7c:	f000 80c2 	beq.w	8001004 <_vfiprintf_r+0x1ec>
 8000e80:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000e82:	4453      	add	r3, sl
 8000e84:	9309      	str	r3, [sp, #36]	; 0x24
 8000e86:	f898 3000 	ldrb.w	r3, [r8]
 8000e8a:	2b00      	cmp	r3, #0
 8000e8c:	f000 80ba 	beq.w	8001004 <_vfiprintf_r+0x1ec>
 8000e90:	2300      	movs	r3, #0
 8000e92:	f04f 32ff 	mov.w	r2, #4294967295
 8000e96:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000e9a:	9304      	str	r3, [sp, #16]
 8000e9c:	9307      	str	r3, [sp, #28]
 8000e9e:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000ea2:	931a      	str	r3, [sp, #104]	; 0x68
 8000ea4:	46a8      	mov	r8, r5
 8000ea6:	2205      	movs	r2, #5
 8000ea8:	f818 1b01 	ldrb.w	r1, [r8], #1
 8000eac:	485e      	ldr	r0, [pc, #376]	; (8001028 <_vfiprintf_r+0x210>)
 8000eae:	f7ff f99f 	bl	80001f0 <memchr>
 8000eb2:	9b04      	ldr	r3, [sp, #16]
 8000eb4:	bb78      	cbnz	r0, 8000f16 <_vfiprintf_r+0xfe>
 8000eb6:	06d9      	lsls	r1, r3, #27
 8000eb8:	bf44      	itt	mi
 8000eba:	2220      	movmi	r2, #32
 8000ebc:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000ec0:	071a      	lsls	r2, r3, #28
 8000ec2:	bf44      	itt	mi
 8000ec4:	222b      	movmi	r2, #43	; 0x2b
 8000ec6:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000eca:	782a      	ldrb	r2, [r5, #0]
 8000ecc:	2a2a      	cmp	r2, #42	; 0x2a
 8000ece:	d02a      	beq.n	8000f26 <_vfiprintf_r+0x10e>
 8000ed0:	9a07      	ldr	r2, [sp, #28]
 8000ed2:	46a8      	mov	r8, r5
 8000ed4:	2000      	movs	r0, #0
 8000ed6:	250a      	movs	r5, #10
 8000ed8:	4641      	mov	r1, r8
 8000eda:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000ede:	3b30      	subs	r3, #48	; 0x30
 8000ee0:	2b09      	cmp	r3, #9
 8000ee2:	d969      	bls.n	8000fb8 <_vfiprintf_r+0x1a0>
 8000ee4:	b360      	cbz	r0, 8000f40 <_vfiprintf_r+0x128>
 8000ee6:	e024      	b.n	8000f32 <_vfiprintf_r+0x11a>
 8000ee8:	4b50      	ldr	r3, [pc, #320]	; (800102c <_vfiprintf_r+0x214>)
 8000eea:	429c      	cmp	r4, r3
 8000eec:	d101      	bne.n	8000ef2 <_vfiprintf_r+0xda>
 8000eee:	68b4      	ldr	r4, [r6, #8]
 8000ef0:	e7a2      	b.n	8000e38 <_vfiprintf_r+0x20>
 8000ef2:	4b4f      	ldr	r3, [pc, #316]	; (8001030 <_vfiprintf_r+0x218>)
 8000ef4:	429c      	cmp	r4, r3
 8000ef6:	bf08      	it	eq
 8000ef8:	68f4      	ldreq	r4, [r6, #12]
 8000efa:	e79d      	b.n	8000e38 <_vfiprintf_r+0x20>
 8000efc:	4621      	mov	r1, r4
 8000efe:	4630      	mov	r0, r6
 8000f00:	f7ff fc6c 	bl	80007dc <__swsetup_r>
 8000f04:	2800      	cmp	r0, #0
 8000f06:	d09d      	beq.n	8000e44 <_vfiprintf_r+0x2c>
 8000f08:	f04f 30ff 	mov.w	r0, #4294967295
 8000f0c:	b01d      	add	sp, #116	; 0x74
 8000f0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000f12:	46a8      	mov	r8, r5
 8000f14:	e7a2      	b.n	8000e5c <_vfiprintf_r+0x44>
 8000f16:	4a44      	ldr	r2, [pc, #272]	; (8001028 <_vfiprintf_r+0x210>)
 8000f18:	1a80      	subs	r0, r0, r2
 8000f1a:	fa0b f000 	lsl.w	r0, fp, r0
 8000f1e:	4318      	orrs	r0, r3
 8000f20:	9004      	str	r0, [sp, #16]
 8000f22:	4645      	mov	r5, r8
 8000f24:	e7be      	b.n	8000ea4 <_vfiprintf_r+0x8c>
 8000f26:	9a03      	ldr	r2, [sp, #12]
 8000f28:	1d11      	adds	r1, r2, #4
 8000f2a:	6812      	ldr	r2, [r2, #0]
 8000f2c:	9103      	str	r1, [sp, #12]
 8000f2e:	2a00      	cmp	r2, #0
 8000f30:	db01      	blt.n	8000f36 <_vfiprintf_r+0x11e>
 8000f32:	9207      	str	r2, [sp, #28]
 8000f34:	e004      	b.n	8000f40 <_vfiprintf_r+0x128>
 8000f36:	4252      	negs	r2, r2
 8000f38:	f043 0302 	orr.w	r3, r3, #2
 8000f3c:	9207      	str	r2, [sp, #28]
 8000f3e:	9304      	str	r3, [sp, #16]
 8000f40:	f898 3000 	ldrb.w	r3, [r8]
 8000f44:	2b2e      	cmp	r3, #46	; 0x2e
 8000f46:	d10e      	bne.n	8000f66 <_vfiprintf_r+0x14e>
 8000f48:	f898 3001 	ldrb.w	r3, [r8, #1]
 8000f4c:	2b2a      	cmp	r3, #42	; 0x2a
 8000f4e:	d138      	bne.n	8000fc2 <_vfiprintf_r+0x1aa>
 8000f50:	9b03      	ldr	r3, [sp, #12]
 8000f52:	1d1a      	adds	r2, r3, #4
 8000f54:	681b      	ldr	r3, [r3, #0]
 8000f56:	9203      	str	r2, [sp, #12]
 8000f58:	2b00      	cmp	r3, #0
 8000f5a:	bfb8      	it	lt
 8000f5c:	f04f 33ff 	movlt.w	r3, #4294967295
 8000f60:	f108 0802 	add.w	r8, r8, #2
 8000f64:	9305      	str	r3, [sp, #20]
 8000f66:	4d33      	ldr	r5, [pc, #204]	; (8001034 <_vfiprintf_r+0x21c>)
 8000f68:	f898 1000 	ldrb.w	r1, [r8]
 8000f6c:	2203      	movs	r2, #3
 8000f6e:	4628      	mov	r0, r5
 8000f70:	f7ff f93e 	bl	80001f0 <memchr>
 8000f74:	b140      	cbz	r0, 8000f88 <_vfiprintf_r+0x170>
 8000f76:	2340      	movs	r3, #64	; 0x40
 8000f78:	1b40      	subs	r0, r0, r5
 8000f7a:	fa03 f000 	lsl.w	r0, r3, r0
 8000f7e:	9b04      	ldr	r3, [sp, #16]
 8000f80:	4303      	orrs	r3, r0
 8000f82:	f108 0801 	add.w	r8, r8, #1
 8000f86:	9304      	str	r3, [sp, #16]
 8000f88:	f898 1000 	ldrb.w	r1, [r8]
 8000f8c:	482a      	ldr	r0, [pc, #168]	; (8001038 <_vfiprintf_r+0x220>)
 8000f8e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000f92:	2206      	movs	r2, #6
 8000f94:	f108 0701 	add.w	r7, r8, #1
 8000f98:	f7ff f92a 	bl	80001f0 <memchr>
 8000f9c:	2800      	cmp	r0, #0
 8000f9e:	d037      	beq.n	8001010 <_vfiprintf_r+0x1f8>
 8000fa0:	4b26      	ldr	r3, [pc, #152]	; (800103c <_vfiprintf_r+0x224>)
 8000fa2:	bb1b      	cbnz	r3, 8000fec <_vfiprintf_r+0x1d4>
 8000fa4:	9b03      	ldr	r3, [sp, #12]
 8000fa6:	3307      	adds	r3, #7
 8000fa8:	f023 0307 	bic.w	r3, r3, #7
 8000fac:	3308      	adds	r3, #8
 8000fae:	9303      	str	r3, [sp, #12]
 8000fb0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000fb2:	444b      	add	r3, r9
 8000fb4:	9309      	str	r3, [sp, #36]	; 0x24
 8000fb6:	e750      	b.n	8000e5a <_vfiprintf_r+0x42>
 8000fb8:	fb05 3202 	mla	r2, r5, r2, r3
 8000fbc:	2001      	movs	r0, #1
 8000fbe:	4688      	mov	r8, r1
 8000fc0:	e78a      	b.n	8000ed8 <_vfiprintf_r+0xc0>
 8000fc2:	2300      	movs	r3, #0
 8000fc4:	f108 0801 	add.w	r8, r8, #1
 8000fc8:	9305      	str	r3, [sp, #20]
 8000fca:	4619      	mov	r1, r3
 8000fcc:	250a      	movs	r5, #10
 8000fce:	4640      	mov	r0, r8
 8000fd0:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000fd4:	3a30      	subs	r2, #48	; 0x30
 8000fd6:	2a09      	cmp	r2, #9
 8000fd8:	d903      	bls.n	8000fe2 <_vfiprintf_r+0x1ca>
 8000fda:	2b00      	cmp	r3, #0
 8000fdc:	d0c3      	beq.n	8000f66 <_vfiprintf_r+0x14e>
 8000fde:	9105      	str	r1, [sp, #20]
 8000fe0:	e7c1      	b.n	8000f66 <_vfiprintf_r+0x14e>
 8000fe2:	fb05 2101 	mla	r1, r5, r1, r2
 8000fe6:	2301      	movs	r3, #1
 8000fe8:	4680      	mov	r8, r0
 8000fea:	e7f0      	b.n	8000fce <_vfiprintf_r+0x1b6>
 8000fec:	ab03      	add	r3, sp, #12
 8000fee:	9300      	str	r3, [sp, #0]
 8000ff0:	4622      	mov	r2, r4
 8000ff2:	4b13      	ldr	r3, [pc, #76]	; (8001040 <_vfiprintf_r+0x228>)
 8000ff4:	a904      	add	r1, sp, #16
 8000ff6:	4630      	mov	r0, r6
 8000ff8:	f3af 8000 	nop.w
 8000ffc:	f1b0 3fff 	cmp.w	r0, #4294967295
 8001000:	4681      	mov	r9, r0
 8001002:	d1d5      	bne.n	8000fb0 <_vfiprintf_r+0x198>
 8001004:	89a3      	ldrh	r3, [r4, #12]
 8001006:	065b      	lsls	r3, r3, #25
 8001008:	f53f af7e 	bmi.w	8000f08 <_vfiprintf_r+0xf0>
 800100c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800100e:	e77d      	b.n	8000f0c <_vfiprintf_r+0xf4>
 8001010:	ab03      	add	r3, sp, #12
 8001012:	9300      	str	r3, [sp, #0]
 8001014:	4622      	mov	r2, r4
 8001016:	4b0a      	ldr	r3, [pc, #40]	; (8001040 <_vfiprintf_r+0x228>)
 8001018:	a904      	add	r1, sp, #16
 800101a:	4630      	mov	r0, r6
 800101c:	f000 f888 	bl	8001130 <_printf_i>
 8001020:	e7ec      	b.n	8000ffc <_vfiprintf_r+0x1e4>
 8001022:	bf00      	nop
 8001024:	08001638 	.word	0x08001638
 8001028:	08001678 	.word	0x08001678
 800102c:	08001658 	.word	0x08001658
 8001030:	08001618 	.word	0x08001618
 8001034:	0800167e 	.word	0x0800167e
 8001038:	08001682 	.word	0x08001682
 800103c:	00000000 	.word	0x00000000
 8001040:	08000df3 	.word	0x08000df3

08001044 <_printf_common>:
 8001044:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001048:	4691      	mov	r9, r2
 800104a:	461f      	mov	r7, r3
 800104c:	688a      	ldr	r2, [r1, #8]
 800104e:	690b      	ldr	r3, [r1, #16]
 8001050:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001054:	4293      	cmp	r3, r2
 8001056:	bfb8      	it	lt
 8001058:	4613      	movlt	r3, r2
 800105a:	f8c9 3000 	str.w	r3, [r9]
 800105e:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8001062:	4606      	mov	r6, r0
 8001064:	460c      	mov	r4, r1
 8001066:	b112      	cbz	r2, 800106e <_printf_common+0x2a>
 8001068:	3301      	adds	r3, #1
 800106a:	f8c9 3000 	str.w	r3, [r9]
 800106e:	6823      	ldr	r3, [r4, #0]
 8001070:	0699      	lsls	r1, r3, #26
 8001072:	bf42      	ittt	mi
 8001074:	f8d9 3000 	ldrmi.w	r3, [r9]
 8001078:	3302      	addmi	r3, #2
 800107a:	f8c9 3000 	strmi.w	r3, [r9]
 800107e:	6825      	ldr	r5, [r4, #0]
 8001080:	f015 0506 	ands.w	r5, r5, #6
 8001084:	d107      	bne.n	8001096 <_printf_common+0x52>
 8001086:	f104 0a19 	add.w	sl, r4, #25
 800108a:	68e3      	ldr	r3, [r4, #12]
 800108c:	f8d9 2000 	ldr.w	r2, [r9]
 8001090:	1a9b      	subs	r3, r3, r2
 8001092:	42ab      	cmp	r3, r5
 8001094:	dc28      	bgt.n	80010e8 <_printf_common+0xa4>
 8001096:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 800109a:	6822      	ldr	r2, [r4, #0]
 800109c:	3300      	adds	r3, #0
 800109e:	bf18      	it	ne
 80010a0:	2301      	movne	r3, #1
 80010a2:	0692      	lsls	r2, r2, #26
 80010a4:	d42d      	bmi.n	8001102 <_printf_common+0xbe>
 80010a6:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80010aa:	4639      	mov	r1, r7
 80010ac:	4630      	mov	r0, r6
 80010ae:	47c0      	blx	r8
 80010b0:	3001      	adds	r0, #1
 80010b2:	d020      	beq.n	80010f6 <_printf_common+0xb2>
 80010b4:	6823      	ldr	r3, [r4, #0]
 80010b6:	68e5      	ldr	r5, [r4, #12]
 80010b8:	f8d9 2000 	ldr.w	r2, [r9]
 80010bc:	f003 0306 	and.w	r3, r3, #6
 80010c0:	2b04      	cmp	r3, #4
 80010c2:	bf08      	it	eq
 80010c4:	1aad      	subeq	r5, r5, r2
 80010c6:	68a3      	ldr	r3, [r4, #8]
 80010c8:	6922      	ldr	r2, [r4, #16]
 80010ca:	bf0c      	ite	eq
 80010cc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80010d0:	2500      	movne	r5, #0
 80010d2:	4293      	cmp	r3, r2
 80010d4:	bfc4      	itt	gt
 80010d6:	1a9b      	subgt	r3, r3, r2
 80010d8:	18ed      	addgt	r5, r5, r3
 80010da:	f04f 0900 	mov.w	r9, #0
 80010de:	341a      	adds	r4, #26
 80010e0:	454d      	cmp	r5, r9
 80010e2:	d11a      	bne.n	800111a <_printf_common+0xd6>
 80010e4:	2000      	movs	r0, #0
 80010e6:	e008      	b.n	80010fa <_printf_common+0xb6>
 80010e8:	2301      	movs	r3, #1
 80010ea:	4652      	mov	r2, sl
 80010ec:	4639      	mov	r1, r7
 80010ee:	4630      	mov	r0, r6
 80010f0:	47c0      	blx	r8
 80010f2:	3001      	adds	r0, #1
 80010f4:	d103      	bne.n	80010fe <_printf_common+0xba>
 80010f6:	f04f 30ff 	mov.w	r0, #4294967295
 80010fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80010fe:	3501      	adds	r5, #1
 8001100:	e7c3      	b.n	800108a <_printf_common+0x46>
 8001102:	18e1      	adds	r1, r4, r3
 8001104:	1c5a      	adds	r2, r3, #1
 8001106:	2030      	movs	r0, #48	; 0x30
 8001108:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800110c:	4422      	add	r2, r4
 800110e:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8001112:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8001116:	3302      	adds	r3, #2
 8001118:	e7c5      	b.n	80010a6 <_printf_common+0x62>
 800111a:	2301      	movs	r3, #1
 800111c:	4622      	mov	r2, r4
 800111e:	4639      	mov	r1, r7
 8001120:	4630      	mov	r0, r6
 8001122:	47c0      	blx	r8
 8001124:	3001      	adds	r0, #1
 8001126:	d0e6      	beq.n	80010f6 <_printf_common+0xb2>
 8001128:	f109 0901 	add.w	r9, r9, #1
 800112c:	e7d8      	b.n	80010e0 <_printf_common+0x9c>
	...

08001130 <_printf_i>:
 8001130:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001134:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8001138:	460c      	mov	r4, r1
 800113a:	7e09      	ldrb	r1, [r1, #24]
 800113c:	b085      	sub	sp, #20
 800113e:	296e      	cmp	r1, #110	; 0x6e
 8001140:	4617      	mov	r7, r2
 8001142:	4606      	mov	r6, r0
 8001144:	4698      	mov	r8, r3
 8001146:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8001148:	f000 80b3 	beq.w	80012b2 <_printf_i+0x182>
 800114c:	d822      	bhi.n	8001194 <_printf_i+0x64>
 800114e:	2963      	cmp	r1, #99	; 0x63
 8001150:	d036      	beq.n	80011c0 <_printf_i+0x90>
 8001152:	d80a      	bhi.n	800116a <_printf_i+0x3a>
 8001154:	2900      	cmp	r1, #0
 8001156:	f000 80b9 	beq.w	80012cc <_printf_i+0x19c>
 800115a:	2958      	cmp	r1, #88	; 0x58
 800115c:	f000 8083 	beq.w	8001266 <_printf_i+0x136>
 8001160:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001164:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8001168:	e032      	b.n	80011d0 <_printf_i+0xa0>
 800116a:	2964      	cmp	r1, #100	; 0x64
 800116c:	d001      	beq.n	8001172 <_printf_i+0x42>
 800116e:	2969      	cmp	r1, #105	; 0x69
 8001170:	d1f6      	bne.n	8001160 <_printf_i+0x30>
 8001172:	6820      	ldr	r0, [r4, #0]
 8001174:	6813      	ldr	r3, [r2, #0]
 8001176:	0605      	lsls	r5, r0, #24
 8001178:	f103 0104 	add.w	r1, r3, #4
 800117c:	d52a      	bpl.n	80011d4 <_printf_i+0xa4>
 800117e:	681b      	ldr	r3, [r3, #0]
 8001180:	6011      	str	r1, [r2, #0]
 8001182:	2b00      	cmp	r3, #0
 8001184:	da03      	bge.n	800118e <_printf_i+0x5e>
 8001186:	222d      	movs	r2, #45	; 0x2d
 8001188:	425b      	negs	r3, r3
 800118a:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 800118e:	486f      	ldr	r0, [pc, #444]	; (800134c <_printf_i+0x21c>)
 8001190:	220a      	movs	r2, #10
 8001192:	e039      	b.n	8001208 <_printf_i+0xd8>
 8001194:	2973      	cmp	r1, #115	; 0x73
 8001196:	f000 809d 	beq.w	80012d4 <_printf_i+0x1a4>
 800119a:	d808      	bhi.n	80011ae <_printf_i+0x7e>
 800119c:	296f      	cmp	r1, #111	; 0x6f
 800119e:	d020      	beq.n	80011e2 <_printf_i+0xb2>
 80011a0:	2970      	cmp	r1, #112	; 0x70
 80011a2:	d1dd      	bne.n	8001160 <_printf_i+0x30>
 80011a4:	6823      	ldr	r3, [r4, #0]
 80011a6:	f043 0320 	orr.w	r3, r3, #32
 80011aa:	6023      	str	r3, [r4, #0]
 80011ac:	e003      	b.n	80011b6 <_printf_i+0x86>
 80011ae:	2975      	cmp	r1, #117	; 0x75
 80011b0:	d017      	beq.n	80011e2 <_printf_i+0xb2>
 80011b2:	2978      	cmp	r1, #120	; 0x78
 80011b4:	d1d4      	bne.n	8001160 <_printf_i+0x30>
 80011b6:	2378      	movs	r3, #120	; 0x78
 80011b8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80011bc:	4864      	ldr	r0, [pc, #400]	; (8001350 <_printf_i+0x220>)
 80011be:	e055      	b.n	800126c <_printf_i+0x13c>
 80011c0:	6813      	ldr	r3, [r2, #0]
 80011c2:	1d19      	adds	r1, r3, #4
 80011c4:	681b      	ldr	r3, [r3, #0]
 80011c6:	6011      	str	r1, [r2, #0]
 80011c8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80011cc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80011d0:	2301      	movs	r3, #1
 80011d2:	e08c      	b.n	80012ee <_printf_i+0x1be>
 80011d4:	681b      	ldr	r3, [r3, #0]
 80011d6:	6011      	str	r1, [r2, #0]
 80011d8:	f010 0f40 	tst.w	r0, #64	; 0x40
 80011dc:	bf18      	it	ne
 80011de:	b21b      	sxthne	r3, r3
 80011e0:	e7cf      	b.n	8001182 <_printf_i+0x52>
 80011e2:	6813      	ldr	r3, [r2, #0]
 80011e4:	6825      	ldr	r5, [r4, #0]
 80011e6:	1d18      	adds	r0, r3, #4
 80011e8:	6010      	str	r0, [r2, #0]
 80011ea:	0628      	lsls	r0, r5, #24
 80011ec:	d501      	bpl.n	80011f2 <_printf_i+0xc2>
 80011ee:	681b      	ldr	r3, [r3, #0]
 80011f0:	e002      	b.n	80011f8 <_printf_i+0xc8>
 80011f2:	0668      	lsls	r0, r5, #25
 80011f4:	d5fb      	bpl.n	80011ee <_printf_i+0xbe>
 80011f6:	881b      	ldrh	r3, [r3, #0]
 80011f8:	4854      	ldr	r0, [pc, #336]	; (800134c <_printf_i+0x21c>)
 80011fa:	296f      	cmp	r1, #111	; 0x6f
 80011fc:	bf14      	ite	ne
 80011fe:	220a      	movne	r2, #10
 8001200:	2208      	moveq	r2, #8
 8001202:	2100      	movs	r1, #0
 8001204:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8001208:	6865      	ldr	r5, [r4, #4]
 800120a:	60a5      	str	r5, [r4, #8]
 800120c:	2d00      	cmp	r5, #0
 800120e:	f2c0 8095 	blt.w	800133c <_printf_i+0x20c>
 8001212:	6821      	ldr	r1, [r4, #0]
 8001214:	f021 0104 	bic.w	r1, r1, #4
 8001218:	6021      	str	r1, [r4, #0]
 800121a:	2b00      	cmp	r3, #0
 800121c:	d13d      	bne.n	800129a <_printf_i+0x16a>
 800121e:	2d00      	cmp	r5, #0
 8001220:	f040 808e 	bne.w	8001340 <_printf_i+0x210>
 8001224:	4665      	mov	r5, ip
 8001226:	2a08      	cmp	r2, #8
 8001228:	d10b      	bne.n	8001242 <_printf_i+0x112>
 800122a:	6823      	ldr	r3, [r4, #0]
 800122c:	07db      	lsls	r3, r3, #31
 800122e:	d508      	bpl.n	8001242 <_printf_i+0x112>
 8001230:	6923      	ldr	r3, [r4, #16]
 8001232:	6862      	ldr	r2, [r4, #4]
 8001234:	429a      	cmp	r2, r3
 8001236:	bfde      	ittt	le
 8001238:	2330      	movle	r3, #48	; 0x30
 800123a:	f805 3c01 	strble.w	r3, [r5, #-1]
 800123e:	f105 35ff 	addle.w	r5, r5, #4294967295
 8001242:	ebac 0305 	sub.w	r3, ip, r5
 8001246:	6123      	str	r3, [r4, #16]
 8001248:	f8cd 8000 	str.w	r8, [sp]
 800124c:	463b      	mov	r3, r7
 800124e:	aa03      	add	r2, sp, #12
 8001250:	4621      	mov	r1, r4
 8001252:	4630      	mov	r0, r6
 8001254:	f7ff fef6 	bl	8001044 <_printf_common>
 8001258:	3001      	adds	r0, #1
 800125a:	d14d      	bne.n	80012f8 <_printf_i+0x1c8>
 800125c:	f04f 30ff 	mov.w	r0, #4294967295
 8001260:	b005      	add	sp, #20
 8001262:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001266:	4839      	ldr	r0, [pc, #228]	; (800134c <_printf_i+0x21c>)
 8001268:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 800126c:	6813      	ldr	r3, [r2, #0]
 800126e:	6821      	ldr	r1, [r4, #0]
 8001270:	1d1d      	adds	r5, r3, #4
 8001272:	681b      	ldr	r3, [r3, #0]
 8001274:	6015      	str	r5, [r2, #0]
 8001276:	060a      	lsls	r2, r1, #24
 8001278:	d50b      	bpl.n	8001292 <_printf_i+0x162>
 800127a:	07ca      	lsls	r2, r1, #31
 800127c:	bf44      	itt	mi
 800127e:	f041 0120 	orrmi.w	r1, r1, #32
 8001282:	6021      	strmi	r1, [r4, #0]
 8001284:	b91b      	cbnz	r3, 800128e <_printf_i+0x15e>
 8001286:	6822      	ldr	r2, [r4, #0]
 8001288:	f022 0220 	bic.w	r2, r2, #32
 800128c:	6022      	str	r2, [r4, #0]
 800128e:	2210      	movs	r2, #16
 8001290:	e7b7      	b.n	8001202 <_printf_i+0xd2>
 8001292:	064d      	lsls	r5, r1, #25
 8001294:	bf48      	it	mi
 8001296:	b29b      	uxthmi	r3, r3
 8001298:	e7ef      	b.n	800127a <_printf_i+0x14a>
 800129a:	4665      	mov	r5, ip
 800129c:	fbb3 f1f2 	udiv	r1, r3, r2
 80012a0:	fb02 3311 	mls	r3, r2, r1, r3
 80012a4:	5cc3      	ldrb	r3, [r0, r3]
 80012a6:	f805 3d01 	strb.w	r3, [r5, #-1]!
 80012aa:	460b      	mov	r3, r1
 80012ac:	2900      	cmp	r1, #0
 80012ae:	d1f5      	bne.n	800129c <_printf_i+0x16c>
 80012b0:	e7b9      	b.n	8001226 <_printf_i+0xf6>
 80012b2:	6813      	ldr	r3, [r2, #0]
 80012b4:	6825      	ldr	r5, [r4, #0]
 80012b6:	6961      	ldr	r1, [r4, #20]
 80012b8:	1d18      	adds	r0, r3, #4
 80012ba:	6010      	str	r0, [r2, #0]
 80012bc:	0628      	lsls	r0, r5, #24
 80012be:	681b      	ldr	r3, [r3, #0]
 80012c0:	d501      	bpl.n	80012c6 <_printf_i+0x196>
 80012c2:	6019      	str	r1, [r3, #0]
 80012c4:	e002      	b.n	80012cc <_printf_i+0x19c>
 80012c6:	066a      	lsls	r2, r5, #25
 80012c8:	d5fb      	bpl.n	80012c2 <_printf_i+0x192>
 80012ca:	8019      	strh	r1, [r3, #0]
 80012cc:	2300      	movs	r3, #0
 80012ce:	6123      	str	r3, [r4, #16]
 80012d0:	4665      	mov	r5, ip
 80012d2:	e7b9      	b.n	8001248 <_printf_i+0x118>
 80012d4:	6813      	ldr	r3, [r2, #0]
 80012d6:	1d19      	adds	r1, r3, #4
 80012d8:	6011      	str	r1, [r2, #0]
 80012da:	681d      	ldr	r5, [r3, #0]
 80012dc:	6862      	ldr	r2, [r4, #4]
 80012de:	2100      	movs	r1, #0
 80012e0:	4628      	mov	r0, r5
 80012e2:	f7fe ff85 	bl	80001f0 <memchr>
 80012e6:	b108      	cbz	r0, 80012ec <_printf_i+0x1bc>
 80012e8:	1b40      	subs	r0, r0, r5
 80012ea:	6060      	str	r0, [r4, #4]
 80012ec:	6863      	ldr	r3, [r4, #4]
 80012ee:	6123      	str	r3, [r4, #16]
 80012f0:	2300      	movs	r3, #0
 80012f2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80012f6:	e7a7      	b.n	8001248 <_printf_i+0x118>
 80012f8:	6923      	ldr	r3, [r4, #16]
 80012fa:	462a      	mov	r2, r5
 80012fc:	4639      	mov	r1, r7
 80012fe:	4630      	mov	r0, r6
 8001300:	47c0      	blx	r8
 8001302:	3001      	adds	r0, #1
 8001304:	d0aa      	beq.n	800125c <_printf_i+0x12c>
 8001306:	6823      	ldr	r3, [r4, #0]
 8001308:	079b      	lsls	r3, r3, #30
 800130a:	d413      	bmi.n	8001334 <_printf_i+0x204>
 800130c:	68e0      	ldr	r0, [r4, #12]
 800130e:	9b03      	ldr	r3, [sp, #12]
 8001310:	4298      	cmp	r0, r3
 8001312:	bfb8      	it	lt
 8001314:	4618      	movlt	r0, r3
 8001316:	e7a3      	b.n	8001260 <_printf_i+0x130>
 8001318:	2301      	movs	r3, #1
 800131a:	464a      	mov	r2, r9
 800131c:	4639      	mov	r1, r7
 800131e:	4630      	mov	r0, r6
 8001320:	47c0      	blx	r8
 8001322:	3001      	adds	r0, #1
 8001324:	d09a      	beq.n	800125c <_printf_i+0x12c>
 8001326:	3501      	adds	r5, #1
 8001328:	68e3      	ldr	r3, [r4, #12]
 800132a:	9a03      	ldr	r2, [sp, #12]
 800132c:	1a9b      	subs	r3, r3, r2
 800132e:	42ab      	cmp	r3, r5
 8001330:	dcf2      	bgt.n	8001318 <_printf_i+0x1e8>
 8001332:	e7eb      	b.n	800130c <_printf_i+0x1dc>
 8001334:	2500      	movs	r5, #0
 8001336:	f104 0919 	add.w	r9, r4, #25
 800133a:	e7f5      	b.n	8001328 <_printf_i+0x1f8>
 800133c:	2b00      	cmp	r3, #0
 800133e:	d1ac      	bne.n	800129a <_printf_i+0x16a>
 8001340:	7803      	ldrb	r3, [r0, #0]
 8001342:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001346:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800134a:	e76c      	b.n	8001226 <_printf_i+0xf6>
 800134c:	08001689 	.word	0x08001689
 8001350:	0800169a 	.word	0x0800169a

08001354 <_sbrk_r>:
 8001354:	b538      	push	{r3, r4, r5, lr}
 8001356:	4c06      	ldr	r4, [pc, #24]	; (8001370 <_sbrk_r+0x1c>)
 8001358:	2300      	movs	r3, #0
 800135a:	4605      	mov	r5, r0
 800135c:	4608      	mov	r0, r1
 800135e:	6023      	str	r3, [r4, #0]
 8001360:	f7ff f8e6 	bl	8000530 <_sbrk>
 8001364:	1c43      	adds	r3, r0, #1
 8001366:	d102      	bne.n	800136e <_sbrk_r+0x1a>
 8001368:	6823      	ldr	r3, [r4, #0]
 800136a:	b103      	cbz	r3, 800136e <_sbrk_r+0x1a>
 800136c:	602b      	str	r3, [r5, #0]
 800136e:	bd38      	pop	{r3, r4, r5, pc}
 8001370:	2000008c 	.word	0x2000008c

08001374 <__sread>:
 8001374:	b510      	push	{r4, lr}
 8001376:	460c      	mov	r4, r1
 8001378:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800137c:	f000 f896 	bl	80014ac <_read_r>
 8001380:	2800      	cmp	r0, #0
 8001382:	bfab      	itete	ge
 8001384:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8001386:	89a3      	ldrhlt	r3, [r4, #12]
 8001388:	181b      	addge	r3, r3, r0
 800138a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800138e:	bfac      	ite	ge
 8001390:	6563      	strge	r3, [r4, #84]	; 0x54
 8001392:	81a3      	strhlt	r3, [r4, #12]
 8001394:	bd10      	pop	{r4, pc}

08001396 <__swrite>:
 8001396:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800139a:	461f      	mov	r7, r3
 800139c:	898b      	ldrh	r3, [r1, #12]
 800139e:	05db      	lsls	r3, r3, #23
 80013a0:	4605      	mov	r5, r0
 80013a2:	460c      	mov	r4, r1
 80013a4:	4616      	mov	r6, r2
 80013a6:	d505      	bpl.n	80013b4 <__swrite+0x1e>
 80013a8:	2302      	movs	r3, #2
 80013aa:	2200      	movs	r2, #0
 80013ac:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013b0:	f000 f868 	bl	8001484 <_lseek_r>
 80013b4:	89a3      	ldrh	r3, [r4, #12]
 80013b6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80013ba:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80013be:	81a3      	strh	r3, [r4, #12]
 80013c0:	4632      	mov	r2, r6
 80013c2:	463b      	mov	r3, r7
 80013c4:	4628      	mov	r0, r5
 80013c6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80013ca:	f000 b817 	b.w	80013fc <_write_r>

080013ce <__sseek>:
 80013ce:	b510      	push	{r4, lr}
 80013d0:	460c      	mov	r4, r1
 80013d2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013d6:	f000 f855 	bl	8001484 <_lseek_r>
 80013da:	1c43      	adds	r3, r0, #1
 80013dc:	89a3      	ldrh	r3, [r4, #12]
 80013de:	bf15      	itete	ne
 80013e0:	6560      	strne	r0, [r4, #84]	; 0x54
 80013e2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80013e6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80013ea:	81a3      	strheq	r3, [r4, #12]
 80013ec:	bf18      	it	ne
 80013ee:	81a3      	strhne	r3, [r4, #12]
 80013f0:	bd10      	pop	{r4, pc}

080013f2 <__sclose>:
 80013f2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013f6:	f000 b813 	b.w	8001420 <_close_r>
	...

080013fc <_write_r>:
 80013fc:	b538      	push	{r3, r4, r5, lr}
 80013fe:	4c07      	ldr	r4, [pc, #28]	; (800141c <_write_r+0x20>)
 8001400:	4605      	mov	r5, r0
 8001402:	4608      	mov	r0, r1
 8001404:	4611      	mov	r1, r2
 8001406:	2200      	movs	r2, #0
 8001408:	6022      	str	r2, [r4, #0]
 800140a:	461a      	mov	r2, r3
 800140c:	f7ff f83f 	bl	800048e <_write>
 8001410:	1c43      	adds	r3, r0, #1
 8001412:	d102      	bne.n	800141a <_write_r+0x1e>
 8001414:	6823      	ldr	r3, [r4, #0]
 8001416:	b103      	cbz	r3, 800141a <_write_r+0x1e>
 8001418:	602b      	str	r3, [r5, #0]
 800141a:	bd38      	pop	{r3, r4, r5, pc}
 800141c:	2000008c 	.word	0x2000008c

08001420 <_close_r>:
 8001420:	b538      	push	{r3, r4, r5, lr}
 8001422:	4c06      	ldr	r4, [pc, #24]	; (800143c <_close_r+0x1c>)
 8001424:	2300      	movs	r3, #0
 8001426:	4605      	mov	r5, r0
 8001428:	4608      	mov	r0, r1
 800142a:	6023      	str	r3, [r4, #0]
 800142c:	f7ff f84b 	bl	80004c6 <_close>
 8001430:	1c43      	adds	r3, r0, #1
 8001432:	d102      	bne.n	800143a <_close_r+0x1a>
 8001434:	6823      	ldr	r3, [r4, #0]
 8001436:	b103      	cbz	r3, 800143a <_close_r+0x1a>
 8001438:	602b      	str	r3, [r5, #0]
 800143a:	bd38      	pop	{r3, r4, r5, pc}
 800143c:	2000008c 	.word	0x2000008c

08001440 <_fstat_r>:
 8001440:	b538      	push	{r3, r4, r5, lr}
 8001442:	4c07      	ldr	r4, [pc, #28]	; (8001460 <_fstat_r+0x20>)
 8001444:	2300      	movs	r3, #0
 8001446:	4605      	mov	r5, r0
 8001448:	4608      	mov	r0, r1
 800144a:	4611      	mov	r1, r2
 800144c:	6023      	str	r3, [r4, #0]
 800144e:	f7ff f846 	bl	80004de <_fstat>
 8001452:	1c43      	adds	r3, r0, #1
 8001454:	d102      	bne.n	800145c <_fstat_r+0x1c>
 8001456:	6823      	ldr	r3, [r4, #0]
 8001458:	b103      	cbz	r3, 800145c <_fstat_r+0x1c>
 800145a:	602b      	str	r3, [r5, #0]
 800145c:	bd38      	pop	{r3, r4, r5, pc}
 800145e:	bf00      	nop
 8001460:	2000008c 	.word	0x2000008c

08001464 <_isatty_r>:
 8001464:	b538      	push	{r3, r4, r5, lr}
 8001466:	4c06      	ldr	r4, [pc, #24]	; (8001480 <_isatty_r+0x1c>)
 8001468:	2300      	movs	r3, #0
 800146a:	4605      	mov	r5, r0
 800146c:	4608      	mov	r0, r1
 800146e:	6023      	str	r3, [r4, #0]
 8001470:	f7ff f845 	bl	80004fe <_isatty>
 8001474:	1c43      	adds	r3, r0, #1
 8001476:	d102      	bne.n	800147e <_isatty_r+0x1a>
 8001478:	6823      	ldr	r3, [r4, #0]
 800147a:	b103      	cbz	r3, 800147e <_isatty_r+0x1a>
 800147c:	602b      	str	r3, [r5, #0]
 800147e:	bd38      	pop	{r3, r4, r5, pc}
 8001480:	2000008c 	.word	0x2000008c

08001484 <_lseek_r>:
 8001484:	b538      	push	{r3, r4, r5, lr}
 8001486:	4c07      	ldr	r4, [pc, #28]	; (80014a4 <_lseek_r+0x20>)
 8001488:	4605      	mov	r5, r0
 800148a:	4608      	mov	r0, r1
 800148c:	4611      	mov	r1, r2
 800148e:	2200      	movs	r2, #0
 8001490:	6022      	str	r2, [r4, #0]
 8001492:	461a      	mov	r2, r3
 8001494:	f7ff f83e 	bl	8000514 <_lseek>
 8001498:	1c43      	adds	r3, r0, #1
 800149a:	d102      	bne.n	80014a2 <_lseek_r+0x1e>
 800149c:	6823      	ldr	r3, [r4, #0]
 800149e:	b103      	cbz	r3, 80014a2 <_lseek_r+0x1e>
 80014a0:	602b      	str	r3, [r5, #0]
 80014a2:	bd38      	pop	{r3, r4, r5, pc}
 80014a4:	2000008c 	.word	0x2000008c

080014a8 <__malloc_lock>:
 80014a8:	4770      	bx	lr

080014aa <__malloc_unlock>:
 80014aa:	4770      	bx	lr

080014ac <_read_r>:
 80014ac:	b538      	push	{r3, r4, r5, lr}
 80014ae:	4c07      	ldr	r4, [pc, #28]	; (80014cc <_read_r+0x20>)
 80014b0:	4605      	mov	r5, r0
 80014b2:	4608      	mov	r0, r1
 80014b4:	4611      	mov	r1, r2
 80014b6:	2200      	movs	r2, #0
 80014b8:	6022      	str	r2, [r4, #0]
 80014ba:	461a      	mov	r2, r3
 80014bc:	f7fe ffca 	bl	8000454 <_read>
 80014c0:	1c43      	adds	r3, r0, #1
 80014c2:	d102      	bne.n	80014ca <_read_r+0x1e>
 80014c4:	6823      	ldr	r3, [r4, #0]
 80014c6:	b103      	cbz	r3, 80014ca <_read_r+0x1e>
 80014c8:	602b      	str	r3, [r5, #0]
 80014ca:	bd38      	pop	{r3, r4, r5, pc}
 80014cc:	2000008c 	.word	0x2000008c

080014d0 <_init>:
 80014d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014d2:	bf00      	nop
 80014d4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014d6:	bc08      	pop	{r3}
 80014d8:	469e      	mov	lr, r3
 80014da:	4770      	bx	lr

080014dc <_fini>:
 80014dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014de:	bf00      	nop
 80014e0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014e2:	bc08      	pop	{r3}
 80014e4:	469e      	mov	lr, r3
 80014e6:	4770      	bx	lr
